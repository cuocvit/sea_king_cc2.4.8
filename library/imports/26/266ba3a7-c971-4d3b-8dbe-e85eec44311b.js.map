{"version":3,"sources":["assets\\start-scene\\scripts\\DebugEntry.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM;AACN,6CAAmC;AACnC,+CAA8C;AAExC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAyB,8BAAY;IAIjC;QAAA,YACI,iBAAO,SAGV;QAFG,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1C,KAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;;IACpC,CAAC;IAES,2BAAM,GAAhB;QACI,gBAAE,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;IAC9B,CAAC;IAES,6BAAQ,GAAlB;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QAC/E,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC7E,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC/E,CAAC;IAES,8BAAS,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAChF,CAAC;IAEO,0CAAqB,GAA7B,UAA8B,KAAqC;QAC/D,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IAEO,2CAAsB,GAA9B;QACI,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC7C,CAAC;IAEO,yCAAoB,GAA5B;QACI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,sBAAsB,GAAG,GAAG,EAAE;YAChD,gBAAE,CAAC,EAAE,CAAC,UAAU,CAAC,gBAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SACpC;IACL,CAAC;IAxCC,UAAU;QADf,OAAO;OACF,UAAU,CAyCf;IAAD,iBAAC;CAzCD,AAyCC,CAzCwB,2BAAY,GAyCpC;AAED,kBAAe,UAAU,CAAC","file":"","sourceRoot":"/","sourcesContent":["// *-*\r\nimport { gm } from './GameManager';\r\nimport { NodePoolItem } from './NodePoolItem';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass DebugEntry extends NodePoolItem {\r\n    private _touch_start_position: cc.Vec3;\r\n    private _touch_start_timestamp: number;\r\n\r\n    constructor() {\r\n        super();\r\n        this._touch_start_position = cc.Vec3.ZERO;\r\n        this._touch_start_timestamp = 0;\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        gm.data.catch_error_log();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.on_touch_start_handler, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move_handler, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.on_touch_end_handler, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.node.off(cc.Node.EventType.TOUCH_START, this.on_touch_start_handler, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE, this.on_touch_move_handler, this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END, this.on_touch_end_handler, this);\r\n    }\r\n\r\n    private on_touch_move_handler(event: cc.Touch | cc.Event.EventMouse): void {\r\n        this.node.y += event.getDelta().y;\r\n        this.node.x += event.getDelta().x;\r\n    }\r\n\r\n    private on_touch_start_handler(): void {\r\n        this._touch_start_position = this.node.position;\r\n        this._touch_start_timestamp = Date.now();\r\n    }\r\n\r\n    private on_touch_end_handler(): void {\r\n        if (Date.now() - this._touch_start_timestamp < 200) {\r\n            gm.ui.show_panel(gm.const.Debug);\r\n        }\r\n    }\r\n}\r\n\r\nexport default DebugEntry;"]}
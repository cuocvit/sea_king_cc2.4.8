{"version":3,"sources":["assets\\start-scene\\scripts\\PolygonButton.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAA8B,EAAE,CAAC,UAAU,EAAzC,OAAO,aAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAkB,CAAC;AAIlD;IAAmC,iCAAS;IAA5C;QAAA,qEAyEC;QAvEW,aAAO,GAA8B,IAAI,CAAC;;IAuEtD,CAAC;sBAzEY,aAAa;IAWZ,8BAAM,GAAhB;QACI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjD;IACL,CAAC;IAEO,oCAAY,GAApB,UAAqB,KAA0B;QAC3C,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,QAAQ,EAAE;YAC/D,IAAM,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC;YAC5B,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAChF,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;YACjC,IAAM,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;YAE1C,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,IAAI,aAAa,EAAE;gBACjE,IAAI,KAAK,EAAE;oBACP,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC;oBACpC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;oBACnD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;oBACnD,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;iBACpC;qBAAM;oBACH,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;oBACd,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;oBAChC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;iBAAM;gBACH,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;aACvD;YAED,KAAK,CAAC,eAAe,EAAE,CAAC;SAC3B;IACL,CAAC;IAEO,gCAAQ,GAAhB,UAAiB,QAAiB,EAAE,QAAqD;QACrF,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,QAAQ,EAAE;YACtC,IAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC7B,IAAM,OAAO,GAAG,KAAK,CAAC,YAAY,CAAC,eAAa,CAAC,CAAC;YAClD,IAAM,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACrG,OAAO,QAAQ,CAAC,cAAc,GAAG,OAAO,CAAC;SAC5C;IACL,CAAC;IAEO,sCAAc,GAAtB,UAAuB,KAAc,EAAE,aAAwB;QAC3D,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;QAC/B,IAAM,CAAC,GAAG,aAAa,CAAC,MAAM,CAAC;QAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE;YACvC,IAAM,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,IAAM,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAEvD,IAAM,SAAS,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;YACxF,IAAI,SAAS;gBAAE,QAAQ,GAAG,CAAC,QAAQ,CAAC;SACvC;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,KAAa,IAAU,CAAC;IACzC,kCAAU,GAAlB;QACI,OAAO;IACX,CAAC;IAAA,CAAC;;IAtEF;QADC,QAAQ,CAAC,EAAE,CAAC,eAAe,CAAC;kDACqB;IAFzC,aAAa;QAFzB,OAAO;QACP,IAAI,CAAC,uBAAuB,CAAC;OACjB,aAAa,CAyEzB;IAAD,oBAAC;CAzED,AAyEC,CAzEkC,EAAE,CAAC,MAAM,GAyE3C;AAzEY,sCAAa","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property, menu } = cc._decorator;\r\n\r\n@ccclass\r\n@menu(\"添加自定义组件/PolygonButton\")\r\nexport class PolygonButton extends cc.Button {\r\n    @property(cc.PolygonCollider)\r\n    private polygon: cc.PolygonCollider | null = null;\r\n\r\n    private time: number;\r\n    private _transitionFinished: boolean;\r\n    private _fromScale: cc.Vec2;\r\n    private _toScale: cc.Vec2;\r\n    private _pressed: boolean;\r\n    private _originalScale: cc.Vec2\r\n\r\n    protected onLoad(): void {\r\n        if (this.polygon && this.polygon.points.length > 0) {\r\n            this.node._hitTest = this._hitTest.bind(this);\r\n        }\r\n    }\r\n\r\n    private _onTouchMove(event: cc.Event.EventTouch): void {\r\n        if (this.interactable && this.enabledInHierarchy && this._pressed) {\r\n            const touch = (event).touch;\r\n            const isHit = this.node._hitTest(touch.getLocation(), this.node._touchListener);\r\n            const target = this._getTarget();\r\n            const originalScale = this._originalScale;\r\n\r\n            if (this.transition === cc.Button.Transition.SCALE && originalScale) {\r\n                if (isHit) {\r\n                    this._fromScale.x = originalScale.x;\r\n                    this._fromScale.y = originalScale.y;\r\n                    this._toScale.x = originalScale.x * this.zoomScale;\r\n                    this._toScale.y = originalScale.y * this.zoomScale;\r\n                    this._transitionFinished = false;\r\n                } else {\r\n                    this.time = 0;\r\n                    this._transitionFinished = true;\r\n                    target.setScale(originalScale.x, originalScale.y);\r\n                }\r\n            } else {\r\n                this._applyTransition(isHit ? 'pressed' : 'normal');\r\n            }\r\n\r\n            event.stopPropagation();\r\n        }\r\n    }\r\n\r\n    private _hitTest(location: cc.Vec2, listener: { owner: cc.Node, swallowTouches: boolean }): boolean {\r\n        if (null != location && null != listener) {\r\n            const owner = listener.owner;\r\n            const Polygon = owner.getComponent(PolygonButton);\r\n            const ischeck = Polygon.pointInPolygon(owner.convertToNodeSpaceAR(location), Polygon.polygon.points);\r\n            return listener.swallowTouches = ischeck;\r\n        }\r\n    }\r\n\r\n    private pointInPolygon(point: cc.Vec2, polygonPoints: cc.Vec2[]): boolean {\r\n        let isInside = false;\r\n        const x = point.x, y = point.y;\r\n        const n = polygonPoints.length;\r\n\r\n        for (let i = 0, j = n - 1; i < n; j = i++) {\r\n            const xi = polygonPoints[i].x, yi = polygonPoints[i].y;\r\n            const xj = polygonPoints[j].x, yj = polygonPoints[j].y;\r\n\r\n            const intersect = ((yi > y) != (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\r\n            if (intersect) isInside = !isInside;\r\n        }\r\n\r\n        return isInside;\r\n    }\r\n\r\n    private _applyTransition(param: string): void { }\r\n    private _getTarget(): cc.Node {\r\n        return;\r\n    };\r\n}\r\n"]}
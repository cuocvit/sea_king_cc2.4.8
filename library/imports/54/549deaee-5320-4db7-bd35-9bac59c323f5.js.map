{"version":3,"sources":["assets\\start-scene\\scripts\\LadderTempData.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { SingletonBase } from './SingletonBase';\r\nimport { gm } from './GameManager';\r\nimport { BuildTypeEnum } from './Constants';\r\nimport { LadderBuildding } from \"../../common/configs/ladder_building\";\r\nimport { LadderLVConfig } from '../../common/configs/ladder_lv';\r\nimport { request } from './DataManager';\r\n\r\n// @\r\nclass LadderMyItemData {\r\n    public lv: number = 0;\r\n    public config: LadderLVConfig = null;\r\n}\r\n/* \r\n// cũng có thể viết ES5 Constructor Function như bên dưới để tạo ra mã giống phiên bản\r\n// gốc nhưng cần phải tạo thêm interface, không thuận tiện bằng sử dụng ES6 Classes.\r\ninterface LadderMyItemData {\r\n    lv: number;\r\n    config: any;\r\n}\r\nexport const LadderMyItemData = function () {\r\n    this.lv = 0 as number,\r\n    this.config = null as any;\r\n}; */\r\n\r\n// @\r\nexport class LadderRankItemData {\r\n    public lv: number = 0;\r\n    public rank: number = 0;\r\n    public name: string = \"\";\r\n    public star: number = 0;\r\n    public uid: string = \"\";\r\n}\r\n\r\n// @\r\nexport class LadderBuildingRankItemData {\r\n    public lv: number = 0;\r\n    public rank: number = 0;\r\n    public name: string = \"\";\r\n    public castle_level: number = 0;\r\n    public uid: string = \"\";\r\n}\r\n\r\n// @\r\nexport class LadderAchievementItemData {\r\n    public id: number = 0;\r\n    public star: number = 0;\r\n    public state: number = 0;\r\n    public reward_array: LadderRewardData[] = [];\r\n}\r\n\r\n// @\r\nexport class LadderRankRewardItemData {\r\n    public lv: number = 0;\r\n    public rank_a: number = 0;\r\n    public rank_b: number = 0;\r\n    public reward_array: LadderRewardData[] = [];\r\n}\r\n\r\n//\r\nexport class LadderRewardData {\r\n    public reward_id: number = 0;\r\n    public reward_num: number = 0;\r\n}\r\n\r\n// @\r\nexport class LadderTempData extends SingletonBase {\r\n    private _ladder_achievement_data_array: LadderAchievementItemData[] = [];\r\n    private _ladder_reward_data_array: LadderRankRewardItemData[] = [];\r\n    private _total_star: number = 0;\r\n    public rank: number = 0;\r\n    public arch_rank: number = 0;\r\n    public castle_level: number = 0;\r\n    private _ladder_my_item_data_array: LadderMyItemData[] = [];\r\n    public ladder_rank_item_data_array: LadderRankItemData[] = [];\r\n    public ladder_building_rank_item_data_array: LadderBuildingRankItemData[] = [];\r\n    public self_rank_item_data: LadderRankItemData | null = null;\r\n    public self_building_rank_item_data: LadderBuildingRankItemData | null = null;\r\n\r\n    // @\r\n    get total_star(): number {\r\n        const buildData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n        return !buildData || buildData.buildLvl < 1 ? gm.data.ladder_data.ladder_star : this._total_star;\r\n    }\r\n\r\n    // @\r\n    set total_star(value: number) {\r\n        this._total_star = value;\r\n    }\r\n\r\n    // @\r\n    public change_star_num(value: number): void {\r\n        if (value > 0) {\r\n            gm.data.ladder_data.add_ladder_achievement_star(value);\r\n            this._total_star += value;\r\n        } else {\r\n            this._total_star = Math.max(0, this._total_star + value);\r\n        }\r\n        gm.data.event_emitter.emit(\"ladder_star_change\");\r\n    }\r\n\r\n    // @\r\n    get ladder_my_item_data_array(): LadderMyItemData[] {\r\n        if (this._ladder_my_item_data_array.length === 0) {\r\n            this.build_ladder_my_item_data_array();\r\n        }\r\n        return this._ladder_my_item_data_array;\r\n    }\r\n\r\n    // @\r\n    get ladder_achievement_data_array(): LadderAchievementItemData[] {\r\n        if (this._ladder_achievement_data_array.length === 0) {\r\n            this.build_ladder_achievement_data_array();\r\n        }\r\n        return this._ladder_achievement_data_array;\r\n    }\r\n\r\n    // @\r\n    private build_ladder_achievement_data_array(): void {\r\n        this._ladder_achievement_data_array = [];\r\n        const configData = gm.config.get_config_data(\"LadderAchievementConfigData\");\r\n        for (const key in configData.data) {\r\n            const achievementData = configData.data[key] as LadderAchievementItemData;\r\n            const achievementItem = new LadderAchievementItemData();\r\n            achievementItem.id = achievementData.id;\r\n            achievementItem.star = achievementData.star;\r\n            achievementItem.state = 0;\r\n            achievementItem.reward_array = [];\r\n\r\n            for (const reward of achievementData.reward_array) {\r\n                if (reward.reward_id > 0 && reward.reward_num > 0) {\r\n                    const rewardItem = new LadderRewardData();\r\n                    rewardItem.reward_id = reward.reward_id;\r\n                    rewardItem.reward_num = reward.reward_num;\r\n                    achievementItem.reward_array.push(rewardItem);\r\n                }\r\n            }\r\n            this._ladder_achievement_data_array[achievementItem.id - 1] = achievementItem;\r\n        }\r\n    }\r\n\r\n    // @\r\n    private build_ladder_my_item_data_array(): void {\r\n        this._ladder_my_item_data_array = [];\r\n        const configData = gm.config.get_config_data(\"LadderLvConfigData\");\r\n        const totalItems = Object.keys(configData.data).length;\r\n\r\n        for (const key in configData.data) {\r\n            const itemData = configData.data[key] as LadderLVConfig;\r\n            const myItem = new LadderMyItemData();\r\n            myItem.lv = itemData.lv;\r\n            myItem.config = itemData;\r\n            this._ladder_my_item_data_array[totalItems - myItem.lv] = myItem;\r\n        }\r\n    }\r\n\r\n    // @\r\n    public async_get_ladder_rank_item_data_array(callback: () => void): void {\r\n        const requestData: request = {\r\n            uid: gm.data.server_data.uid,\r\n            token: gm.data.server_data.token,\r\n            op_type: \"1\"\r\n        };\r\n\r\n        gm.data.server_data.get_score_rank((response) => {\r\n            if (response.ResultCode === 0 && response.data != null) {\r\n                this.ladder_rank_item_data_array = [];\r\n                this.self_rank_item_data = null;\r\n\r\n                for (const rankData of response.data) {\r\n                    const rankItem = new LadderRankItemData();\r\n                    rankItem.lv = this.convert_rank_to_lv(rankData.rank);\r\n                    rankItem.rank = rankData.rank;\r\n                    rankItem.name = rankData.nickname;\r\n                    rankItem.star = rankData.scores;\r\n                    rankItem.uid = rankData.uid.toString();\r\n\r\n                    if (rankItem.uid === gm.data.server_data.uid) {\r\n                        this.self_rank_item_data = rankItem;\r\n                    }\r\n                    this.ladder_rank_item_data_array.push(rankItem);\r\n                }\r\n\r\n                if (!this.self_rank_item_data) {\r\n                    this.self_rank_item_data = new LadderRankItemData();\r\n                    this.self_rank_item_data.lv = this.convert_rank_to_lv(this.rank);\r\n                    this.self_rank_item_data.name = gm.data.server_data.nickname;\r\n                    this.self_rank_item_data.star = this.total_star;\r\n                    this.self_rank_item_data.rank = this.rank;\r\n                }\r\n                callback();\r\n            }\r\n        }, requestData);\r\n    } // end: async_get_ladder_rank_item_data_array\r\n\r\n    // @\r\n    public async_get_building_rank_item_data_array(callback: () => void): void {\r\n        const requestData = {\r\n            uid: gm.data.server_data.uid,\r\n            token: gm.data.server_data.token\r\n        };\r\n\r\n        gm.data.server_data.get_arch_rank((response) => {\r\n            if (response.ResultCode === 0 && response.data != null) {\r\n                this.ladder_building_rank_item_data_array = [];\r\n                this.self_building_rank_item_data = null;\r\n\r\n                for (const buildingRankData of response.data) {\r\n                    const buildingRankItem = new LadderBuildingRankItemData();\r\n                    buildingRankItem.lv = this.convert_building_rank_to_lv(buildingRankData.rank);\r\n                    buildingRankItem.rank = buildingRankData.rank;\r\n                    buildingRankItem.name = buildingRankData.nickname;\r\n                    buildingRankItem.castle_level = buildingRankData.castle_level;\r\n                    buildingRankItem.uid = buildingRankData.uid.toString();\r\n\r\n                    if (buildingRankItem.uid === gm.data.server_data.uid) {\r\n                        this.self_building_rank_item_data = buildingRankItem;\r\n                    }\r\n                    this.ladder_building_rank_item_data_array.push(buildingRankItem);\r\n                }\r\n\r\n                if (!this.self_building_rank_item_data) {\r\n                    this.self_building_rank_item_data = new LadderBuildingRankItemData();\r\n                    this.self_building_rank_item_data.lv = this.convert_building_rank_to_lv(this.arch_rank);\r\n                    this.self_building_rank_item_data.name = gm.data.server_data.nickname;\r\n                    this.self_building_rank_item_data.castle_level = this.castle_level;\r\n                    this.self_building_rank_item_data.rank = this.arch_rank;\r\n                }\r\n                callback();\r\n            }\r\n        }, requestData);\r\n    } // end: async_get_building_rank_item_data_array\r\n\r\n    // @\r\n    public convert_rank_to_lv(rank: number): number {\r\n        const configData = gm.config.get_config_data(\"LadderLvConfigData\");\r\n        for (const key in configData.data) {\r\n            const levelData = configData.data[key] as LadderLVConfig;\r\n            if (rank >= levelData.ranking_a && rank <= levelData.ranking_b) {\r\n                return levelData.lv;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    // @\r\n    public convert_building_rank_to_lv(rank: number): number {\r\n        const configData = gm.config.get_config_data(\"LadderBuildingConfigData\");\r\n        for (const key in configData.data) {\r\n            const levelData = configData.data[key] as LadderBuildding;\r\n            if (rank >= levelData.ranking_a && rank <= levelData.ranking_b) {\r\n                return levelData.lv;\r\n            }\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    // @\r\n    public get_ladder_reward_data_array(index: number): LadderRankRewardItemData[] {\r\n        this._ladder_reward_data_array = [];\r\n        const rowData = gm.config.get_row_data_array(\"LadderRewardConfigData\", index.toString()) as LadderBuildding[];\r\n        console.log(\"rowData\", rowData);\r\n        for (const rewardData of rowData) {\r\n            const rewardItem = new LadderRankRewardItemData();\r\n            rewardItem.lv = rewardData.lv;\r\n            rewardItem.rank_a = rewardData.ranking_a;\r\n            rewardItem.rank_b = rewardData.ranking_b;\r\n            rewardItem.reward_array = [];\r\n\r\n            for (const reward of rewardData.reward_array) {\r\n                if (reward.reward_id > 0 && reward.reward_num > 0) {\r\n                    const rewardDetail = new LadderRewardData();\r\n                    rewardDetail.reward_id = reward.reward_id;\r\n                    rewardDetail.reward_num = reward.reward_num;\r\n                    rewardItem.reward_array.push(rewardDetail);\r\n                }\r\n            }\r\n            this._ladder_reward_data_array[rewardItem.lv - 1] = rewardItem;\r\n        }\r\n        return this._ladder_reward_data_array;\r\n    }\r\n}\r\n"]}
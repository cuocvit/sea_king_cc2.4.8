{"version":3,"sources":["assets\\start-scene\\scripts\\UnlockTree.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// *-*\r\nimport { Utils } from './Utils';\r\nimport { SpecialEnum, BundleName, SetItemNumEnum } from './Constants';\r\nimport { gm } from './GameManager';\r\nimport { TaskConditionType } from './TaskData';\r\nimport { ReportData } from './NetUtils';\r\nimport { special } from './MapCellCfgData';\r\nimport { Special } from '../../common/configs/special';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass UnlockTree extends cc.Component {\r\n    @property([cc.Node])\r\n    private meterialNode: cc.Node[] = [];\r\n\r\n    @property(cc.Label)\r\n    private lblCoin: cc.Label | null = null;\r\n\r\n    @property([cc.SpriteFrame])\r\n    private btnSprList: cc.SpriteFrame[] = [];\r\n\r\n    @property(cc.Sprite)\r\n    private btnSpr: cc.Sprite | null = null;\r\n\r\n    private _curSpecialCfg: Special | null = null;\r\n    private _localdData: special | null = null;\r\n    private _curFunID: number = SpecialEnum.SPIRIT_TYPE;\r\n    private _clickIndex: number = 0;\r\n    private _matraEnough: boolean = true;\r\n    private _tempList: number[] = [];\r\n\r\n    protected onEnable(): void {\r\n        this.node.getComponent(cc.Animation).play();\r\n        this._curSpecialCfg = gm.data.config_data.getSpecialByID(this._curFunID);\r\n        this._localdData = gm.data.mapCell_data.specialList[this._curFunID];\r\n        this.refreshPanel();\r\n    }\r\n\r\n    private refreshPanel(): void {\r\n        this._matraEnough = true;\r\n        this._tempList = [];\r\n        if (this._curSpecialCfg && this._localdData) {\r\n            for (let t = 0; t < this.meterialNode.length; t++) {\r\n                this.meterialNode[t].active = false;\r\n            }\r\n            for (let t = 0; t < this._curSpecialCfg.prop.length; t++) {\r\n                const prop = this._curSpecialCfg.prop[t];\r\n                if (0 < prop) {\r\n                    this._tempList.push(prop);\r\n                    this.meterialNode[t].active = true;\r\n                    this.meterialNode[t].children[1].getComponent(cc.Label).string = this._localdData.mertrail[prop] + \"/\" + this._curSpecialCfg.value[t];\r\n                    const itemCfg = gm.data.config_data.getItemCfgByID(prop);\r\n                    if (itemCfg) {\r\n                        Utils.async_set_sprite_frame(this.meterialNode[t].children[0].getComponent(cc.Sprite), BundleName.MAP, \"res/\" + itemCfg.icon)\r\n                    }\r\n\r\n                    if (this._localdData.mertrail[prop] < this._curSpecialCfg.value[t]) {\r\n                        this._matraEnough = false;\r\n                        this.meterialNode[t].color = cc.Color.WHITE;\r\n                        this.meterialNode[t].children[2].active = true;\r\n                        this.meterialNode[t].children[3].active = false;\r\n                        this.meterialNode[t].children[2].children[0].width = this._localdData.mertrail[prop] / this._curSpecialCfg.value[t] * 80;\r\n                        this.meterialNode[t].children[2].children[1].children[0].active = !gm.data.mapCell_data.getCoinNum(itemCfg.type, prop);\r\n                    } else {\r\n                        this.meterialNode[t].children[2].active = false;\r\n                        this.meterialNode[t].children[3].active = true;\r\n                        this.meterialNode[t].color = cc.Color.BLACK.fromHEX(\"#86cbB4e\");\r\n                    }\r\n                }\r\n            }\r\n            this.refreshCoin();\r\n        }\r\n    }\r\n\r\n    private onClickClose(): void {\r\n        this.node.active = false;\r\n    }\r\n\r\n    private onClickAddMetrail(event: cc.Event, index: string): void {\r\n        const idx = parseInt(index);\r\n        gm.data.mapCell_data.onekeyGetAllSpecialMertrail(this._curFunID, this._tempList[idx]);\r\n        this.refreshPanel();\r\n    }\r\n\r\n    private onClickWatchAd(event: cc.Event, index: string): void {\r\n        this._clickIndex = parseInt(index);\r\n        gm.channel.show_video_ad(this.watchAdCb, this);\r\n    }\r\n\r\n    private watchAdCb(): void {\r\n        gm.data.mapCell_data.onekeyWatchAdGetSoul(this._curFunID, this._tempList[this._clickIndex]);\r\n        this.refreshPanel();\r\n    }\r\n\r\n    private onClickUpgrade(): void {\r\n        if (this._matraEnough && gm.data.mapCell_data.roleCoinData.coinNum < this._curSpecialCfg.coin) {\r\n            gm.ui.set_module_args(gm.const.GETCOINOP.key, false);\r\n            gm.ui.async_show_module(gm.const.GETCOINOP);\r\n            return;\r\n        }\r\n        if (this._matraEnough) {\r\n            gm.data.mapCell_data.specialList[SpecialEnum.SPIRIT_TYPE].state = 2;\r\n            gm.data.mapCell_data.setAddGameCoin(SetItemNumEnum.REDUCE_ITEM_TYPE, this._curSpecialCfg.coin);\r\n            gm.ui.emit(\"open_special_fun\", 223);\r\n            gm.ui.emit(\"play_spriti_fly\");\r\n            gm.data.task_data.update_task_progress(TaskConditionType.UNLOCK_ELF);\r\n            gm.channel.report_event(\"unlock_play\", {\r\n                event_desc: \"解锁玩法\",\r\n                desc: cc.js.formatStr(\"解锁玩法%s\", \"精灵树\")\r\n            });\r\n            ReportData.instance.report_once_point(10603);\r\n            this.onClickClose();\r\n            gm.data.mapCell_data.splitItemNum(31, 22008, 1);\r\n            gm.data.mapCell_data.async_write_data();\r\n            gm.ui.async_show_module(gm.const.POSEIDON);\r\n        }\r\n    }\r\n\r\n    private refreshCoin(): void {\r\n        this.lblCoin.string = this._curSpecialCfg.coin + \"\";\r\n        this.lblCoin.node.color = cc.Color.RED;\r\n        if (gm.data.mapCell_data.roleCoinData.coinNum >= this._curSpecialCfg.coin) {\r\n            this.lblCoin.node.color = cc.Color.BLACK.fromHEX(\"#FFD53C\");\r\n        }\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        gm.ui.off(\"coin_change\", this.refreshCoin, this);\r\n    }\r\n}\r\n\r\nexport default UnlockTree;"]}
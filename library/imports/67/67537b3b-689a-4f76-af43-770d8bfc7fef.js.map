{"version":3,"sources":["assets\\start-scene\\scripts\\UIManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//\r\nimport { EventEmitter } from \"./EventEmitter\";\r\nimport { gm } from \"./GameManager\";\r\nimport {\r\n    LayerType,\r\n    BundleName,\r\n    RewardIdEnum,\r\n    ModuleType,\r\n    INotice,\r\n} from \"./Constants\";\r\nimport { Utils } from \"./Utils\";\r\nimport { CoinFlyAnim } from \"./CoinFlyAnim\";\r\nimport MainMapUI from \"./MainMapUI\";\r\nimport NewerGuideOp from \"./NewerGuideOp\";\r\nimport { ItemFly } from \"./ItemFly\";\r\nimport { LoadingState } from \"./Launch\";\r\nimport { MailDetailsArgs } from \"../../mail/scripts/MailDetails\";\r\nimport { DoubleOp } from \"./GetDoubleRewardOp\";\r\nimport { Loading } from \"./Loading\";\r\nimport { Mail } from \"../../mail/scripts/Mail\";\r\nimport Sign from \"../../sign/scripts/Sign\";\r\nimport { Task, TaskArgs } from \"../../task/scripts/Task\";\r\nimport { Ladder } from \"../../ladder/scripts/Ladder\";\r\nimport { Start } from \"../../start/scripts/Start\";\r\nimport { AutoMergeMessage } from \"./AutoMergeMessage\";\r\nimport OfflineOp from \"./OfflineOp\";\r\nimport { GuideConfig } from \"../../common/configs/guide\";\r\nimport SceneBookView from \"../../book/scripts/SceneBookView\";\r\nimport { GameModule } from \"./GameModule\";\r\nimport { Fight } from \"../../fight/scripts/Fight\";\r\nimport { Login } from \"../../login/scripts/Login\";\r\n\r\nexport interface ModuleAgrs {\r\n    itemID: number;\r\n    itemNum: number;\r\n    buildType: number;\r\n    buildItemID: number;\r\n}\r\n\r\ninterface Notice extends GameModule {\r\n    show_notice?: (message: string) => void;\r\n    show_fly_notice?: (\r\n        message: string,\r\n        duration: number,\r\n        position: cc.Vec3\r\n    ) => void;\r\n}\r\n\r\ntype Map =\r\n    | Loading\r\n    | Mail\r\n    | MainMapUI\r\n    | Sign\r\n    | Task\r\n    | Ladder\r\n    | Start\r\n    | AutoMergeMessage\r\n    | OfflineOp\r\n    | SceneBookView\r\n    | Notice;\r\nexport type Mudule =\r\n    | ModuleAgrs\r\n    | number[]\r\n    | MailDetailsArgs\r\n    | number\r\n    | DoubleOp\r\n    | GuideConfig\r\n    | boolean\r\n    | TaskArgs;\r\n\r\nexport class UIManager extends EventEmitter {\r\n    public MODULE_SHOW: string;\r\n    public MODULE_HIDE: string;\r\n\r\n    public Login: boolean;\r\n\r\n    private static _instance: UIManager | null = null;\r\n    private _current_module: INotice;\r\n    private _scene_node: cc.Node;\r\n    private _ui_node: cc.Node;\r\n    private _top_node: cc.Node;\r\n    private _drag_node: cc.Node;\r\n    private _map_drag_node: cc.Node;\r\n    private _args_map: Record<string, ModuleAgrs>;\r\n    private _map: Record<string, Map>;\r\n    private _stack: any[];\r\n    private main_camera: cc.Camera;\r\n    private _map_node: cc.Node;\r\n    private _guide_node: cc.Node;\r\n\r\n    protected constructor() {\r\n        super();\r\n        this.MODULE_SHOW = \"module-show\";\r\n        this.MODULE_HIDE = \"module-hide\";\r\n        this._args_map = {};\r\n        this._map = {};\r\n        this._stack = [];\r\n        this.main_camera;\r\n        this.Login = false;\r\n    }\r\n\r\n    public static get instance(): UIManager {\r\n        if (!UIManager._instance) {\r\n            UIManager._instance = new UIManager();\r\n        }\r\n        return UIManager._instance;\r\n    }\r\n\r\n    public get current_module(): INotice {\r\n        return this._current_module;\r\n    }\r\n\r\n    public get map_drag_node(): cc.Node {\r\n        return this._map_drag_node;\r\n    }\r\n\r\n    public get mapMainUI(): MainMapUI | null {\r\n        if (!gm.ui._map_node) {\r\n            gm.ui._map_node = cc.find(\"Canvas/ui_node/mainUI\");\r\n        }\r\n        return gm.ui._map_node ? gm.ui._map_node.getComponent(MainMapUI) : null;\r\n    }\r\n\r\n    public get newerGuideOp(): NewerGuideOp | null {\r\n        if (!gm.ui._guide_node) {\r\n            gm.ui._guide_node = cc.find(\"Canvas/ui_node/newerGuideOp\");\r\n        }\r\n        return gm.ui._guide_node\r\n            ? gm.ui._guide_node.getComponent(NewerGuideOp)\r\n            : null;\r\n    }\r\n\r\n    public init(params: () => void): void {\r\n        this.main_camera = cc\r\n            .find(\"Canvas/Main Camera\")\r\n            .getComponent(cc.Camera);\r\n        const canvasNode: cc.Node = cc.Canvas.instance.node;\r\n\r\n        this._scene_node =\r\n            cc.find(\"Canvas/scene_node\") || new cc.Node(\"scene_node\");\r\n        canvasNode.addChild(this._scene_node);\r\n        Utils.align_with_parent(this._scene_node);\r\n\r\n        this._ui_node = cc.find(\"Canvas/ui_node\") || new cc.Node(\"ui_node\");\r\n        canvasNode.addChild(this._ui_node);\r\n        Utils.align_with_parent(this._ui_node);\r\n\r\n        this._top_node = cc.find(\"Canvas/top_node\") || new cc.Node(\"top_node\");\r\n        canvasNode.addChild(this._top_node);\r\n        Utils.align_with_parent(this._top_node);\r\n\r\n        this._drag_node =\r\n            cc.find(\"Canvas/drag_node\") || new cc.Node(\"drag_node\");\r\n        canvasNode.addChild(this._drag_node);\r\n        Utils.align_with_parent(this._drag_node);\r\n\r\n        this._map_drag_node =\r\n            cc.find(\"Canvas/map_drag_node\") || new cc.Node(\"map_drag_node\");\r\n        canvasNode.addChild(this._map_drag_node);\r\n        Utils.align_with_parent(this._map_drag_node);\r\n        if (gm.ui.Login) {\r\n            this.async_show_module(gm.const.Loading, params);\r\n        } else {\r\n            this.async_show_module(gm.const.Login);\r\n        }\r\n        // this.async_show_module(gm.const.Loading, params);\r\n    }\r\n\r\n    public get drag_node(): cc.Node {\r\n        return this._drag_node;\r\n    }\r\n\r\n    public get_layer_node(type: LayerType): cc.Node | null {\r\n        switch (type) {\r\n            case LayerType.SCENE:\r\n                return this._scene_node;\r\n            case LayerType.TOP:\r\n                return this._top_node;\r\n            case LayerType.DRAG:\r\n                return this._drag_node;\r\n            default:\r\n                return this._ui_node;\r\n        }\r\n    }\r\n\r\n    public get start(): Start {\r\n        return this._map[gm.const.Start.key] as Start;\r\n    }\r\n\r\n    public get loading(): Loading {\r\n        return this._map[gm.const.Loading.key] as Loading;\r\n    }\r\n\r\n    public get task(): Task {\r\n        return this._map[gm.const.Task.key] as Task;\r\n    }\r\n\r\n    public get ladder(): Ladder {\r\n        return this._map[gm.const.Ladder.key] as Ladder;\r\n    }\r\n\r\n    public get sign(): Sign {\r\n        return this._map[gm.const.Sign.key] as Sign;\r\n    }\r\n\r\n    public get mail(): Mail {\r\n        return this._map[gm.const.Mail.key] as Mail;\r\n    }\r\n\r\n    public get auto_merge_message(): AutoMergeMessage {\r\n        return this._map[gm.const.AutoMergeMessage.key] as AutoMergeMessage;\r\n    }\r\n\r\n    public get offline_op(): OfflineOp {\r\n        return this._map[gm.const.OFFLINEOP.key] as OfflineOp;\r\n    }\r\n\r\n    public get_module(data: INotice): SceneBookView {\r\n        return this._map[data.key] as SceneBookView;\r\n    }\r\n\r\n    public set_module_args(key: string, data: any): void {\r\n        this._args_map[key] = data;\r\n    }\r\n\r\n    public get_module_args(key: string): Mudule {\r\n        return this._args_map[key];\r\n    }\r\n\r\n    private clear_module_args(): void {}\r\n\r\n    public async_load_module(\r\n        moduleNotice: INotice,\r\n        callback: (success: boolean) => void\r\n    ): void {\r\n        if (this._map[moduleNotice.key]) {\r\n            callback(true);\r\n        } else {\r\n            console.log(moduleNotice.bundle_name);\r\n            Utils.async_get_bundle(moduleNotice.bundle_name, (bundle) => {\r\n                bundle.load(\r\n                    moduleNotice.load_url,\r\n                    cc.Prefab,\r\n                    (error, prefab: cc.Prefab) => {\r\n                        if (error) {\r\n                            cc.error(error);\r\n                            this.show_notice(\r\n                                cc.js.formatStr(\r\n                                    \"Không tải được Module %s\",\r\n                                    moduleNotice.key\r\n                                )\r\n                            );\r\n                            if (this.loading) {\r\n                                this.loading.state = LoadingState.COMPLETE;\r\n                            }\r\n                        } else {\r\n                            if (this._map[moduleNotice.key]) {\r\n                                callback(true);\r\n                            } else {\r\n                                const instantiatedNode = cc.instantiate(prefab);\r\n                                instantiatedNode.active = false;\r\n                                instantiatedNode.parent = this.get_layer_node(\r\n                                    moduleNotice.layer_type\r\n                                );\r\n\r\n                                const component = instantiatedNode.getComponent(\r\n                                    moduleNotice.key\r\n                                );\r\n                                if (component == null) {\r\n                                    cc.error(\r\n                                        `${moduleNotice.key} module need extend GameModule`\r\n                                    );\r\n                                }\r\n                                this._map[moduleNotice.key] = component;\r\n                                callback(false);\r\n                            }\r\n                        }\r\n                    }\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    private preload_module(event: INotice): void {\r\n        Utils.async_get_bundle(event.bundle_name, (t) => {\r\n            t.preload(event.load_url, cc.Prefab);\r\n        });\r\n    }\r\n\r\n    public async_show_module(\r\n        moduleNotice: INotice,\r\n        callback?: (component: Map) => void\r\n    ): void {\r\n        console.log(moduleNotice.key);\r\n        this.async_load_module(moduleNotice, () => {\r\n            const map = this._map[moduleNotice.key];\r\n\r\n            if (map) {\r\n                this._current_module = moduleNotice;\r\n                if (this._current_module.module_type == ModuleType.SCENE) {\r\n                    for (\r\n                        let index = this._stack.length - 1;\r\n                        0 <= index;\r\n                        index--\r\n                    ) {\r\n                        if (\r\n                            this._stack[index] != gm.const.Loading &&\r\n                            this._stack[index] != gm.const.Story &&\r\n                            this._stack[index] != gm.const.Guide &&\r\n                            this._stack[index] != gm.const.Login\r\n                        ) {\r\n                            const stack = this._stack.splice(index, 1)[0];\r\n                            this._map[stack.key].node.active = false;\r\n                        }\r\n                    }\r\n                } else if (!(moduleNotice.module_type != ModuleType.WINDOW)) {\r\n                    const parentNode = map.node.parent;\r\n                    if (parentNode) {\r\n                        map.node.removeFromParent(false);\r\n                        parentNode.addChild(map.node);\r\n                    }\r\n                }\r\n\r\n                const index = this._stack.indexOf(moduleNotice);\r\n                if (-1 < index) {\r\n                    this._stack.splice(index, 1);\r\n                }\r\n\r\n                if (\r\n                    moduleNotice != gm.const.FlyNotice &&\r\n                    moduleNotice != gm.const.Notice\r\n                ) {\r\n                    this._stack.push(moduleNotice);\r\n                }\r\n\r\n                if (map.node.parent) {\r\n                    Utils.align_with_parent(map.node);\r\n                }\r\n\r\n                // if (moduleNotice.key != \"Ladder\") {\r\n                //     map.node.active = true;\r\n                // }\r\n\r\n                map.node.active = true;\r\n\r\n                if (moduleNotice.has_open_effect) {\r\n                    map.node.scale = 0;\r\n                    const action = cc.sequence(\r\n                        cc.scaleTo(0.1, 1),\r\n                        cc.delayTime(0),\r\n                        cc.callFunc(() => {\r\n                            this.emit(\"module-show\", map);\r\n                            if (callback) {\r\n                                callback(map);\r\n                            }\r\n                        })\r\n                    );\r\n                    map.node.runAction(action);\r\n                } else {\r\n                    this.emit(\"module-show\", map);\r\n                    if (callback) {\r\n                        callback(map);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public async_hide_module(notice: INotice): void {\r\n        const item = this._map[notice.key];\r\n        if (item) {\r\n            const index = this._stack.indexOf(notice);\r\n            if (index > -1) {\r\n                this._stack.splice(index, 1);\r\n                if (notice.has_open_effect) {\r\n                    const action = cc.sequence(\r\n                        cc.scaleTo(0.1, 0),\r\n                        cc.callFunc(() => {\r\n                            item.node.active = false;\r\n                            item.node.scale = 1;\r\n                            this.emit(\"module-hide\", item);\r\n                        })\r\n                    );\r\n                    item.node.runAction(action);\r\n                } else {\r\n                    item.node.active = false;\r\n                    this.emit(\"module-hide\", item);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private hide_upper_module(notice: INotice): void {\r\n        const index = this._stack.indexOf(notice);\r\n        if (index > -1) {\r\n            for (let a = this._stack.length - 1; a > index; a--) {\r\n                this.async_hide_module(this._stack[a]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private get_top_module(): Map | null {\r\n        for (let t = this._stack.length - 1; t >= 0; t--) {\r\n            const event = this._stack[t];\r\n            if (event !== gm.const.Notice) {\r\n                return this._map[event.key];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private get notice(): Notice {\r\n        return this._map[gm.const.Notice.key] as Notice;\r\n    }\r\n\r\n    private get fly_notice(): Notice {\r\n        return this._map[gm.const.FlyNotice.key];\r\n    }\r\n\r\n    public get fight(): Fight {\r\n        return this._map[gm.const.Fight.key] as Fight;\r\n    }\r\n\r\n    public show_notice_array(notices: string[]): void {\r\n        this.async_show_module(gm.const.Notice, () => {\r\n            for (let index = 0; index < notices.length; index++) {\r\n                this.notice.show_notice(notices[index]);\r\n            }\r\n        });\r\n    }\r\n\r\n    public show_notice(message: string, callback?: () => void): void {\r\n        this.async_show_module(gm.const.Notice, () => {\r\n            this.notice.show_notice(message);\r\n            if (callback) callback();\r\n        });\r\n    }\r\n\r\n    private show_fly_notice(\r\n        message: string,\r\n        duration: number,\r\n        targetNode: cc.Node,\r\n        callback?: () => void\r\n    ): void {\r\n        this.async_show_module(gm.const.FlyNotice, () => {\r\n            const worldPosition = targetNode.convertToWorldSpaceAR(\r\n                cc.v3(0, (1 - targetNode.anchorY) * targetNode.height)\r\n            );\r\n            this.fly_notice.show_fly_notice(message, duration, worldPosition);\r\n            if (callback) callback();\r\n        });\r\n    }\r\n\r\n    public show_item_fly(\r\n        itemId: number,\r\n        startPosition: cc.Vec3,\r\n        endPosition: cc.Vec3\r\n    ): void {\r\n        gm.pool.async_get(\r\n            BundleName.MAP,\r\n            gm.const.ItemFly.load_url,\r\n            ItemFly,\r\n            (component) => {\r\n                if (!component) return;\r\n\r\n                const itemFlyAnimation = component;\r\n                itemFlyAnimation.init_fly_anim(\r\n                    itemId,\r\n                    startPosition,\r\n                    endPosition\r\n                );\r\n\r\n                if (this.mapMainUI?.mapContent) {\r\n                    this.mapMainUI.mapContent.addChild(component.node);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    public show_coin_fly(\r\n        rewardType: RewardIdEnum,\r\n        startPosition: cc.Vec3,\r\n        count: number = 3,\r\n        endPosition: cc.Vec3 = null\r\n    ): void {\r\n        gm.pool.async_get(\r\n            BundleName.COMMON,\r\n            gm.const.CoinFlyAnim.load_url,\r\n            CoinFlyAnim,\r\n            (CoinFly) => {\r\n                CoinFly.init_fly_anim(\r\n                    rewardType,\r\n                    startPosition,\r\n                    endPosition,\r\n                    count\r\n                );\r\n                this.get_layer_node(LayerType.TOP).addChild(CoinFly.node);\r\n            }\r\n        );\r\n\r\n        if (rewardType == RewardIdEnum.GOLD) {\r\n            gm.audio.play_effect(gm.const.AUDIO_17_GOLD_FLY);\r\n        } else if (rewardType == RewardIdEnum.DIAMOND) {\r\n            gm.audio.play_effect(gm.const.AUDIO_162_DIAMOND_FLY);\r\n        } else if (rewardType == RewardIdEnum.STAR) {\r\n            gm.audio.play_effect(gm.const.AUDIO_25_LADDER_STAR_FLY);\r\n        }\r\n    }\r\n\r\n    public show_start(callback?: () => void): void {\r\n        const mapUI = this._map[gm.const.MAPUI.key];\r\n        const startTime = Date.now();\r\n\r\n        if (mapUI) {\r\n            if (gm.data.fight_temp_data.play_type === 0) {\r\n                gm.ui.loading.state = LoadingState.BOAT_IN;\r\n                gm.ui.async_show_module(gm.const.MAPUI);\r\n                setTimeout(() => {\r\n                    gm.ui.loading.state = LoadingState.COMPLETE;\r\n                    if (callback) callback();\r\n                }, gm.const.MIN_LOADING_TIME);\r\n            } else {\r\n                gm.ui.async_show_module(gm.const.MAPUI);\r\n                if (callback) callback();\r\n            }\r\n        } else {\r\n            gm.ui.loading.state =\r\n                gm.data.fight_temp_data.play_type === 0\r\n                    ? LoadingState.BOAT_IN\r\n                    : LoadingState.START_FULL;\r\n            gm.ui.async_show_module(gm.const.MAPUI, () => {\r\n                const elapsedTime = Date.now() - startTime;\r\n\r\n                if (\r\n                    gm.ui.loading.state !== LoadingState.BOAT_IN ||\r\n                    elapsedTime > gm.const.MIN_LOADING_TIME\r\n                ) {\r\n                    gm.ui.loading.state = LoadingState.COMPLETE;\r\n                    if (callback) callback();\r\n                } else {\r\n                    setTimeout(() => {\r\n                        gm.ui.loading.state = LoadingState.COMPLETE;\r\n                        if (callback) callback();\r\n                    }, gm.const.MIN_LOADING_TIME - elapsedTime);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public show_panel(notice: INotice): void {\r\n        if (this._map[notice.key]) {\r\n            console.log(\"Buy\");\r\n            gm.ui.async_show_module(notice);\r\n        } else {\r\n            gm.ui.loading.state = LoadingState.START;\r\n            gm.ui.async_show_module(notice, () => {\r\n                gm.ui.loading.state = LoadingState.COMPLETE;\r\n            });\r\n        }\r\n    }\r\n\r\n    public show_auto_merge_message(): void {\r\n        if (this.mapMainUI && this.mapMainUI.autoCompose._stopTime > 0) {\r\n            gm.ui.show_notice(\"Không đủ dung lượng bản đồ, vui lòng thử lại\");\r\n        } else if (\r\n            this.auto_merge_message &&\r\n            (!this.auto_merge_message ||\r\n                !this.auto_merge_message.node.activeInHierarchy)\r\n        ) {\r\n            gm.ui.show_panel(gm.const.AutoMergeMessage);\r\n        }\r\n    }\r\n\r\n    public show_fight(): void {\r\n        const fightTempData = gm.data.fight_temp_data;\r\n        const fightModule = gm.const.Fight;\r\n\r\n        if (fightTempData.play_type === 0) {\r\n            gm.ui.loading.state = LoadingState.BOAT_OUT;\r\n        } else if (fightTempData.play_type === 1) {\r\n            gm.ui.loading.state = LoadingState.REWARD_FULL;\r\n        } else if (fightTempData.play_type === 2) {\r\n            gm.ui.loading.state = LoadingState.CAVES_FULL;\r\n            gm.audio.play_music(gm.const.AUDIO_92_LOADING_ISLAND_MUSIC);\r\n        }\r\n\r\n        const startTime = Date.now();\r\n        gm.ui.async_show_module(fightModule, () => {\r\n            const elapsedTime = Date.now() - startTime;\r\n\r\n            if (elapsedTime > gm.const.MIN_LOADING_TIME) {\r\n                gm.ui.loading.state = LoadingState.COMPLETE;\r\n            } else {\r\n                setTimeout(() => {\r\n                    gm.ui.loading.state = LoadingState.COMPLETE;\r\n                }, gm.const.MIN_LOADING_TIME - elapsedTime);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["assets\\fight\\scripts\\SkillItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { NodePoolItem } from '../../start-scene/scripts/NodePoolItem';\r\nimport { gm } from '../../start-scene/scripts/GameManager';\r\nimport { BundleName } from '../../start-scene/scripts/Constants';\r\nimport { FightConstants } from '../../start-scene/scripts/FightConstants';\r\nimport { ParabolaPath } from '../../start-scene/scripts/ParabolaPath';\r\nimport { SkillConfig } from '../../common/configs/skill';\r\nimport { FightHeroItem } from './FightHeroItem';\r\nimport { FightBuildingItem } from './FightBuildingItem';\r\nimport { FightWallItem } from './FightWallItem';\r\n\r\nconst { ccclass } = cc._decorator;\r\n\r\nexport class SkillItemData {\r\n  public id: number;\r\n  public type: number;\r\n  public skill_damage: number;\r\n  public move_speed: number;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.type = 0;\r\n    this.skill_damage = 0;\r\n    this.move_speed = 100;\r\n  }\r\n}\r\n\r\n\r\n@ccclass\r\nexport class SkillItem extends NodePoolItem {\r\n  private _data: SkillItemData | null = null;\r\n  private _is_move: boolean = false;\r\n  private _hero_item: FightWallItem | null | FightBuildingItem | FightHeroItem = null;\r\n  private _offset: cc.Vec3 | null = null;\r\n  private _end_offset: cc.Vec3 | null = null;\r\n  private _target_node: cc.Node | null = null;\r\n  private _speed: number = 0;\r\n  private _skill_node: cc.Node | null = null;\r\n  private _is_fly_rotate: number = 0;\r\n  private _callback: (() => void) | null = null;\r\n  private _fly_callback: (() => void) | null = null;\r\n  private _move_type: number = 0;\r\n  private _path: ParabolaPath | null = null;\r\n\r\n  get data(): SkillItemData | null {\r\n    return this._data;\r\n  }\r\n\r\n  set data(value: SkillItemData | null) {\r\n    this._data = value;\r\n  }\r\n\r\n  public reset(): void {\r\n    this._data = null;\r\n    this._is_move = false;\r\n    this._hero_item = null;\r\n    this._offset = null;\r\n    this._end_offset = null;\r\n    this._target_node = null;\r\n    this._speed = 0;\r\n    this._skill_node = null;\r\n    this._is_fly_rotate = 0;\r\n    this._callback = null;\r\n    this._fly_callback = null;\r\n    gm.pool.put_children(this.node);\r\n\r\n    const skillItemArray = gm.data.fight_temp_data.skill_item_array;\r\n    let index = skillItemArray.indexOf(this);\r\n    if (- 1 < index) {\r\n      const e = skillItemArray.splice(index, 1)[0];\r\n      gm.pool.put(e.node);\r\n    }\r\n  }\r\n\r\n  public unuse(): void {\r\n    super.unuse();\r\n    this.reset();\r\n  }\r\n\r\n  public reuse(): void {\r\n    super.reuse();\r\n  }\r\n\r\n  public update(deltaTime: number): void {\r\n    if (this._is_move) {\r\n      if (this._move_type == 0) {\r\n        const startPoint = gm.ui.fight.convert_to_scene_point(this._hero_item.node, this._offset);\r\n        const endPoint = gm.ui.fight.convert_to_scene_point(this._target_node, this._end_offset);\r\n        const direction = endPoint.sub(startPoint);\r\n        let angle = Math.atan2(direction.y, direction.x) / Math.PI * 180;\r\n        this._skill_node.angle = 0 < this._is_fly_rotate ? angle : 0;\r\n        const currentPosition = this._skill_node.position.add(direction.normalize().mulSelf(deltaTime * this._speed * cc.director.getScheduler().getTimeScale()));\r\n\r\n        if (currentPosition.sub(startPoint).mag() > direction.mag()) {\r\n          this._skill_node.position = endPoint;\r\n          this._is_move = false;\r\n          if (this._fly_callback) {\r\n            this._fly_callback();\r\n          }\r\n        } else {\r\n          this._skill_node.position = currentPosition\r\n        }\r\n\r\n\r\n      } else if (this._move_type == 1) {\r\n        if (this._path.time < this._path.totalTime) {\r\n          const speedFactor = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? 60 : 20;\r\n          this._path.time += deltaTime * speedFactor;\r\n          this._skill_node.position = this._path.position;\r\n          const direction = this._path.getPosition(this._path.time + deltaTime).sub(this._skill_node.position);\r\n          this._skill_node.angle = 180 * Math.atan2(direction.y, direction.x) / Math.PI;\r\n\r\n        } else {\r\n          this._skill_node.position = this._path.end;\r\n          this._is_move = false;\r\n          if (this._fly_callback) {\r\n            this._fly_callback();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public set_attack_target(heroItem: FightHeroItem, offset: cc.Vec3, endOffset: cc.Vec3, targetNode: number, skillType: cc.Node, callback: () => void): void {\r\n\r\n    if (cc.isValid(skillType)) {\r\n      const skillData = heroItem.data;\r\n      gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + skillData.fly_weapon_name, NodePoolItem, (t) => {\r\n        this.node.addChild(t.node);\r\n        this._is_move = true;\r\n        this._move_type = targetNode;\r\n\r\n        if (targetNode == 0) {\r\n          const startPoint = gm.ui.fight.convert_to_scene_point(heroItem.node, offset);\r\n          const scenePoint = gm.ui.fight.convert_to_scene_point(skillType, endOffset);\r\n          const endPoint = scenePoint.sub(startPoint);\r\n          const angle = Math.atan2(endPoint.y, endPoint.x) / Math.PI * 180;\r\n\r\n          this.node.position = startPoint;\r\n          this.node.angle = angle;\r\n          this._hero_item = heroItem;\r\n          this._offset = offset;\r\n          this._end_offset = endOffset;\r\n          this._target_node = skillType;\r\n          this._speed = FightConstants.FLY_WEAPON_SPEED;\r\n          this._skill_node = this.node;\r\n          this._callback = callback;\r\n          this._fly_callback = () => {\r\n            this._callback();\r\n            this.put_to_pool();\r\n          }\r\n\r\n        } else if (targetNode == 1) {\r\n          const startPoint = gm.ui.fight.convert_to_effect_point(heroItem.node, offset);\r\n          const scenePoint = gm.ui.fight.convert_to_effect_point(skillType, endOffset);\r\n          this.node.position = startPoint;\r\n          this._skill_node = this.node;\r\n          this._offset = offset, this._end_offset = endOffset;\r\n          this._path = new ParabolaPath(startPoint, scenePoint, 16, -9.8);\r\n          this._path.isClampStartEnd = true;\r\n          const endPoint = this._path.getPosition(this._path.time + 1).sub(this._skill_node.position);\r\n          this._skill_node.angle = 180 * Math.atan2(endPoint.y, endPoint.x) / Math.PI;\r\n          this._callback = callback;\r\n          this._fly_callback = () => {\r\n            this._callback();\r\n            this.put_to_pool();\r\n          }\r\n\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  public set_fly_skill_target(skill: SkillConfig, heroItem: FightHeroItem, offset: cc.Vec3, endOffset: cc.Vec3, targetNode: number, skillType: cc.Node, callback: () => void): void {\r\n\r\n    if (cc.isValid(skillType)) {\r\n      heroItem.data;\r\n      gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + skill.skill_name, NodePoolItem, (t) => {\r\n        this.node.addChild(t.node);\r\n        this._is_move = true;\r\n        this._move_type = targetNode;\r\n        if (targetNode == 0) {\r\n          const startPoint = gm.ui.fight.convert_to_scene_point(heroItem.node, offset);\r\n          const scenePoint = gm.ui.fight.convert_to_scene_point(skillType, endOffset);\r\n          const endPoint = scenePoint.sub(startPoint);\r\n          const angle = Math.atan2(endPoint.y, endPoint.x) / Math.PI * 180;\r\n\r\n          this.node.angle = 0 < skill.is_fly_rotate ? angle : 0;\r\n          this.node.position = startPoint;\r\n          this._hero_item = heroItem;\r\n          this._offset = offset;\r\n          this._end_offset = endOffset;\r\n          this._target_node = skillType;\r\n          this._speed = FightConstants.FLY_WEAPON_SPEED;\r\n          this._skill_node = this.node;\r\n          this._is_fly_rotate = skill.is_fly_rotate;\r\n          this._callback = callback;\r\n          this._fly_callback = () => {\r\n            this._callback();\r\n            this.put_to_pool();\r\n          }\r\n\r\n        } else if (targetNode == 1) {\r\n          const startPoint = gm.ui.fight.convert_to_effect_point(heroItem.node, offset);\r\n          const effectPoint = gm.ui.fight.convert_to_effect_point(skillType, endOffset);\r\n\r\n          this.node.position = startPoint;\r\n          this._skill_node = this.node;\r\n          this._offset = offset;\r\n          this._end_offset = endOffset;\r\n          this._path = new ParabolaPath(startPoint, effectPoint, 16, -9.8);\r\n          this._path.isClampStartEnd = true;\r\n\r\n          const endPoint = this._path.getPosition(this._path.time + 1).sub(this._skill_node.position);\r\n          this._skill_node.angle = 180 * Math.atan2(endPoint.y, endPoint.x) / Math.PI;\r\n          this._callback = callback;\r\n\r\n          this._fly_callback = () => {\r\n            this._callback();\r\n            this.put_to_pool();\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  public set_skill_target(skill: SkillConfig, targetNode: FightHeroItem, offset: cc.Vec3, endOffset: cc.Node, callback: () => void): void {\r\n\r\n    gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + skill.skill_name, NodePoolItem, (t) => {\r\n      this.node.addChild(t.node);\r\n      this.scheduleOnce(() => {\r\n        callback();\r\n        this.put_to_pool();\r\n      }, skill.hit_time)\r\n    })\r\n  }\r\n\r\n  public set_building_attack_target(building: FightBuildingItem | FightWallItem, offset: cc.Vec3, endOffset: cc.Vec3, targetNode: number, skillType: cc.Node, callback: () => void): void {\r\n\r\n    if (cc.isValid(skillType)) {\r\n      const data = building.data;\r\n      gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + data.fly_weapon_name, NodePoolItem, (t) => {\r\n        this.node.addChild(t.node);\r\n        this._is_move = true;\r\n        this._move_type = targetNode;\r\n\r\n        if (targetNode == 0) {\r\n          const startPoint = gm.ui.fight.convert_to_scene_point(building.node, offset);\r\n          const endPoint = gm.ui.fight.convert_to_scene_point(skillType).sub(startPoint);\r\n          const angle = Math.atan2(endPoint.y, endPoint.x) / Math.PI * 180;\r\n\r\n          this.node.position = startPoint;\r\n          this.node.angle = angle;\r\n          this._hero_item = building;\r\n          this._offset = offset;\r\n          this._move_type = 0;\r\n          this._end_offset = cc.Vec3.ZERO;\r\n          this._target_node = skillType;\r\n          this._speed = FightConstants.FLY_WEAPON_SPEED;\r\n          this._skill_node = this.node;\r\n          this._callback = callback;\r\n          this._fly_callback = () => {\r\n            this._callback();\r\n            this.put_to_pool();\r\n          }\r\n\r\n        } else if (targetNode == 1) {\r\n          const startPoint = gm.ui.fight.convert_to_effect_point(building.node, offset);\r\n          const endPoint = gm.ui.fight.convert_to_effect_point(skillType, endOffset);\r\n          this.node.position = startPoint;\r\n          this._skill_node = this.node;\r\n          this._offset = offset;\r\n          this._end_offset = endOffset;\r\n          this._path = new ParabolaPath(startPoint, endPoint, 16, -9.8);\r\n          this._path.isClampStartEnd = true;\r\n          const positiom = this._path.getPosition(this._path.time + 1).sub(this._skill_node.position);\r\n          this._skill_node.angle = 180 * Math.atan2(positiom.y, positiom.x) / Math.PI;\r\n          this._callback = callback;\r\n          this._fly_callback = () => {\r\n            this._callback();\r\n            this.put_to_pool();\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  public put_to_pool(): void {\r\n    this.reset();\r\n  }\r\n}"]}
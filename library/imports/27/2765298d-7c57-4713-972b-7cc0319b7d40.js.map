{"version":3,"sources":["assets\\start-scene\\scripts\\TaskMainEntry.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// *-*\r\nimport { TaskData, TaskState, TaskConditionType, TaskItemData } from './TaskData';\r\nimport { gm } from './GameManager';\r\nimport { NodePoolItem } from './NodePoolItem';\r\nimport { Utils } from './Utils';\r\nimport { ReportData } from './NetUtils';\r\nimport { BundleName, BuildTypeEnum, SpecialEnum } from './Constants';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass TaskMainEntry extends NodePoolItem {\r\n    @property([cc.Sprite])\r\n    private reward_spr_array: cc.Sprite[] = [];\r\n\r\n    @property([cc.Label])\r\n    private reward_lbl_array: cc.Label[] = [];\r\n\r\n    @property(cc.Label)\r\n    private progress_lbl: cc.Label | null = null;\r\n\r\n    @property(cc.Node)\r\n    private flag_new_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private flag_tow_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private flag_complete_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private not_complete_node: cc.Node | null = null;\r\n\r\n    @property(cc.Button)\r\n    private task_btn: cc.Button | null = null;\r\n\r\n    private _data: TaskItemData;\r\n\r\n    protected onEnable(): void {\r\n        gm.data.event_emitter.on(TaskData.EVENT_DATA_CHANGE, this.update_view, this);\r\n        this.data = gm.data.task_data.task_data_array[gm.data.task_data.task_data_array.length - 1];\r\n        this.show_weak_guide();\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        gm.data.event_emitter.off(TaskData.EVENT_DATA_CHANGE, this.update_view, this);\r\n    }\r\n\r\n    public show_weak_guide(num: number = 20): void {\r\n        this.scheduleOnce(() => {\r\n            gm.data.show_weak_guide(this.node, cc.v3(200, 0), \"\", 0, () => {\r\n                this.show_weak_guide();\r\n            });\r\n        }, num);\r\n    }\r\n\r\n    public get data(): TaskItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: TaskItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    private update_view(): void {\r\n        const data = this._data;\r\n        const dataConfig = data.get_config();\r\n        if (this.flag_new_node.active = data.is_new, dataConfig) {\r\n            this.flag_tow_node.active = 1 < dataConfig.times;\r\n            if (data.state == TaskState.ACCEPT) {\r\n                this.not_complete_node.active = true;\r\n                this.progress_lbl.string = cc.js.formatStr(dataConfig.content, data.count + \"/\" + dataConfig.condition_value);\r\n                this.flag_complete_node.active = false;\r\n            }\r\n            else if (data.state == TaskState.FINISH) {\r\n                this.not_complete_node.active = false;\r\n                this.flag_complete_node.active = true;\r\n                this.show_weak_guide();\r\n\r\n                for (let index = 0; index < this.reward_spr_array.length; index++) {\r\n                    const rewardSpr = this.reward_spr_array[index];\r\n                    const rewardLBL = this.reward_lbl_array[index];\r\n                    const reward = dataConfig.reward_array[index];\r\n\r\n                    if (index < dataConfig.reward_array.length) {\r\n                        rewardSpr.node.active = true;\r\n                        rewardLBL.node.active = true;\r\n                        Utils.async_set_sprite_frame(rewardSpr, BundleName.TASK, \"res/\" + reward.reward_id);\r\n                        if (reward.reward_id < 3e4) {\r\n                            const itemCfg = gm.data.config_data.getItemCfgByID(reward.reward_id);\r\n                            if (itemCfg) {\r\n                                rewardLBL.string = itemCfg.name + \" x\" + reward.reward_num;\r\n                            }\r\n\r\n                        } else {\r\n                            const heroCfg = gm.data.config_data.getHeroCfgByID(reward.reward_id);\r\n                            if (heroCfg) {\r\n                                rewardLBL.string = heroCfg.name + \" x\" + reward.reward_num;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        rewardSpr.node.active = false;\r\n                        rewardLBL.node.active = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private reset(): void {\r\n        this.flag_complete_node.active = false;\r\n    }\r\n\r\n    private editor_on_button_click_handler(event: cc.Event): void {\r\n        if (event.target == this.task_btn.node && this._data) {\r\n            if (this._data.state == TaskState.ACCEPT) {\r\n                this._data.is_new = false;\r\n                gm.data.task_data.async_write_data();\r\n                const dataConfig = this.data.get_config();\r\n                if (dataConfig) {\r\n                    switch (dataConfig.condition_type) {\r\n                        case TaskConditionType.CASTLE_UPGRADE:\r\n                        case TaskConditionType.HOUSE_UPGRADE:\r\n                        case TaskConditionType.LIGHTHOUSE_UPGRADE:\r\n                        case TaskConditionType.BOAT_UPGRADE:\r\n                        case TaskConditionType.MINING_WELL_UPGRADE:\r\n                        case TaskConditionType.SAWMILL_UPGRADE:\r\n                        case TaskConditionType.BARRACK_UPGRADE:\r\n                        case TaskConditionType.DEFENSE_HERO_UPGRADE:\r\n                        case TaskConditionType.BOOTH_UPGRADE:\r\n                        case TaskConditionType.FISHING_LODGE_UPGRADE:\r\n                        case TaskConditionType.COOKHOUSE_UPGRADE:\r\n\r\n                        case TaskConditionType.WORKSHOP_UPGRADE:\r\n                            if (TaskConditionType.FISHING_LODGE_UPGRADE == dataConfig.condition_type) {\r\n                                const buildType = this.getBuildType(dataConfig.condition_type);\r\n                                if (!gm.data.mapCell_data.getBuildDataByType(buildType)) {\r\n                                    gm.ui.show_notice(\"Mở khóa vùng đất mới để nâng cấp Poseidon Altar!!!\");\r\n                                    return;\r\n                                }\r\n                            }\r\n                            const buildType = this.getBuildType(dataConfig.condition_type);\r\n                            const buildDataType = gm.data.mapCell_data.getBuildDataByType(buildType);\r\n                            if (buildDataType) {\r\n                                const buildTowerType = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.TOWER_TYPE);\r\n                                if (buildDataType.buildType != BuildTypeEnum.TOWER_TYPE && buildDataType.buildLvl >= buildTowerType.buildLvl) {\r\n                                    gm.ui.show_notice(\"Cấp độ của tòa nhà không thể cao hơn cấp độ thành phố chính!\");\r\n                                    return;\r\n                                }\r\n\r\n                                if (!gm.data.config_data.getBuildCfgByID(buildDataType.buildID + 1)) {\r\n                                    gm.ui.show_notice(\"Tòa nhà đã đạt cấp tối đa!!!\");\r\n                                    return;\r\n                                }\r\n\r\n                                this.onClickShowUpgrade(buildDataType.buildID, buildDataType.cellID);\r\n                            }\r\n                            break;\r\n\r\n                        case TaskConditionType.POSEIDON:\r\n                            const special = gm.data.mapCell_data.specialList[SpecialEnum.SPIRIT_TYPE];\r\n                            if (1 == special.state) {\r\n                                gm.ui.mapMainUI.showSpiritLock();\r\n                            } else if (2 == special.state) {\r\n                                gm.ui.async_show_module(gm.const.POSEIDON);\r\n                            }\r\n                            break;\r\n\r\n                        case TaskConditionType.ATTACK_ISLAND:\r\n\r\n                        case TaskConditionType.GET_STAR:\r\n                            gm.ui.mapMainUI.lockSenceMoveMap(199, 1.5, this.onClickOpenFight, this);\r\n                            break;\r\n\r\n                        case TaskConditionType.BREAK_BARREL:\r\n                            gm.ui.emit(\"show_hand_anim\");\r\n                            break;\r\n\r\n                        case TaskConditionType.AUTOCOMPOSE:\r\n                            gm.ui.emit(\"task_finish_20009\");\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                if (this._data.state == TaskState.FINISH) {\r\n                    this._data.is_new = false;\r\n                    if (20013 == this._data.id) {\r\n                        gm.ui.async_show_module(gm.const.Sign);\r\n\r\n                    } else if (20004 == this._data.id || 20010 == this._data.id) {\r\n                        if (!gm.data.mapCell_data.guideGift.guideIsGet) {\r\n                            gm.ui.async_show_module(gm.const.GUIDEGIFT);\r\n                        }\r\n\r\n                    } else if (20015 == this._data.id) {\r\n                        gm.ui.show_panel(gm.const.SuperRecruit);\r\n\r\n                    } else if (!(20003 != this._data.id && 20018 != this._data.id)) {\r\n                        gm.channel.checkShortcut((count: number) => {\r\n                            if (2 <= count) {\r\n                                gm.ui.show_panel(gm.const.AddDesktop);\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    const dataConfig = this._data.get_config();\r\n                    const formatStr = cc.js.formatStr(dataConfig.content, dataConfig.condition_value + \"\");\r\n\r\n                    gm.channel.report_event(\"complete_main_task\", {\r\n                        event_desc: \"完成主线任务\",\r\n                        task_id: this._data.id,\r\n                        desc: formatStr\r\n                    });\r\n\r\n                    gm.channel.report_event(\"receive_task_reward\", {\r\n                        event_desc: \"领取任务奖励\",\r\n                        desc: \"领取主线任务奖励\"\r\n                    });\r\n\r\n                    gm.data.task_data.main_task_count++;\r\n                    gm.data.task_data.async_write_data();\r\n                    gm.data.task_data.receive_reward(this._data, this.flag_complete_node);\r\n                    ReportData.instance.report_once_point(10100 + this._data.id);\r\n\r\n                    if (this.data && this._data.id < 20095) {\r\n                        this.unscheduleAllCallbacks();\r\n                        this.show_weak_guide(0);\r\n                    }\r\n                }\r\n            }\r\n            this.update_view();\r\n        }\r\n\r\n    }\r\n\r\n    private getBuildType(conditionType: TaskConditionType): BuildTypeEnum | undefined {\r\n        if (conditionType == TaskConditionType.CASTLE_UPGRADE) {\r\n            return BuildTypeEnum.TOWER_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.HOUSE_UPGRADE) {\r\n            return BuildTypeEnum.PRIVATEHOUSING_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.LIGHTHOUSE_UPGRADE) {\r\n            return BuildTypeEnum.WHARFTAX_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.BOAT_UPGRADE) {\r\n            return BuildTypeEnum.SEAGOINGBOAT_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.MINING_WELL_UPGRADE) {\r\n            return BuildTypeEnum.MININGWELL_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.SAWMILL_UPGRADE) {\r\n            return BuildTypeEnum.LOGGINGFIELD_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.BARRACK_UPGRADE) {\r\n            return BuildTypeEnum.BARRACKS_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.DEFENSE_HERO_UPGRADE) {\r\n            return BuildTypeEnum.GARRISION_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.BOOTH_UPGRADE) {\r\n            return BuildTypeEnum.STALL_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.FISHING_LODGE_UPGRADE) {\r\n            return BuildTypeEnum.FISHHOUSE_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.COOKHOUSE_UPGRADE) {\r\n            return BuildTypeEnum.FARMHOUSE_TYPE;\r\n\r\n        } else if (conditionType == TaskConditionType.WORKSHOP_UPGRADE) {\r\n            return BuildTypeEnum.WORKHOUSE_TYPE;\r\n\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    private onClickShowUpgrade(buildID: number, cellID: number): void {\r\n        gm.ui.mapMainUI.showBuildUpgrade(buildID, cellID)\r\n    }\r\n\r\n    private onClickOpenFight(): void {\r\n        gm.ui.set_module_args(gm.const.GOBATTLE.key, 1);\r\n        gm.ui.async_show_module(gm.const.GOBATTLE);\r\n    }\r\n}\r\n\r\nexport { TaskMainEntry };"]}
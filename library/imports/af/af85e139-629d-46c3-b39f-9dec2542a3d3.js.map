{"version":3,"sources":["assets\\start-scene\\scripts\\StorageBase.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAI;AACJ,mDAAkD;AAElD,IAAI;AACJ;IAOI,IAAI;IACJ;QACI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,IAAI;IACJ,uHAAuH;IACzG,wBAAY,GAA1B;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACjB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAO,CAAC;SACpC;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,IAAI;IACM,qCAAe,GAAzB,UAA6B,QAA4B;QAAzD,iBAMC;QALG,+BAAc,CAAC,QAAQ,CAAC,eAAe,CAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,UAAC,IAAO;YAC/E,MAAM,CAAC,MAAM,CAAC,KAAI,EAAE,IAAI,CAAC,CAAC;YAC1B,kFAAkF;YAClF,IAAI,OAAO,QAAQ,KAAK,UAAU;gBAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI;IACM,sCAAgB,GAA1B,UAA2B,QAAqB;QAC5C,8DAA8D;QAC9D,+BAAc,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC7F,CAAC;IAED,IAAI;IACG,uCAAiB,GAAxB,UAAyB,QAAqB;QAC1C,+BAAc,CAAC,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACxF,CAAC;IAxCc,qBAAS,GAAQ,IAAI,CAAC;IAyCzC,kBAAC;CA1CD,AA0CC,IAAA;AA1CY,kCAAW","file":"","sourceRoot":"/","sourcesContent":["// @\r\nimport { StorageManager } from './StorageManager';\r\n\r\n// @\r\nexport class StorageBase {\r\n    private static _instance: any = null;\r\n    // @\r\n    public readonly PREFIX: string;\r\n    public STORAGE_KEY: string;\r\n    protected is_init: boolean;\r\n\r\n    // @\r\n    protected constructor() {\r\n        this.PREFIX = \"P2_\";\r\n        this.STORAGE_KEY = \"STORAGE_KEY\";\r\n        this.is_init = false;\r\n    }\r\n\r\n    // @\r\n    // _instance = new this() [không sử dụng new StorageBase()], tạo một instance của class con đang gọi hàm get_instance()\r\n    public static get_instance<T>(): T {\r\n        if (!this._instance) {\r\n            this._instance = new this() as T;\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    // @\r\n    protected async_read_data<T>(callback?: (data: T) => void): void {\r\n        StorageManager.instance.async_read_data<T>(this.PREFIX + this.STORAGE_KEY, (data: T) => {\r\n            Object.assign(this, data);\r\n            // cc.log(\"StorageBase->async_read_data->success:\", this.STORAGE_KEY, data, this);\r\n            if (typeof callback === \"function\") callback(data);\r\n        });\r\n    }\r\n\r\n    // @\r\n    protected async_write_data(callback?: () => void): void {\r\n        // cc.log(\"StorageBase->async_write_data:\", this.STORAGE_KEY);\r\n        StorageManager.instance.async_write_data(this.PREFIX + this.STORAGE_KEY, this, callback);\r\n    }\r\n\r\n    // @\r\n    public async_delete_data(callback?: () => void): void {\r\n        StorageManager.instance.async_delete_data(this.PREFIX + this.STORAGE_KEY, callback);\r\n    }\r\n}\r\n"]}
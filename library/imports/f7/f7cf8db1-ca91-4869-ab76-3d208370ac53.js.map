{"version":3,"sources":["assets\\start-scene\\scripts\\TaskEntryItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//\r\nimport { TaskData, TaskState, TaskItemData } from './TaskData';\r\nimport { gm } from './GameManager';\r\nimport { NodePoolItem } from './NodePoolItem';\r\nimport { Utils } from './Utils';\r\nimport { BundleName } from './Constants';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TaskEntryItem extends NodePoolItem {\r\n    @property(cc.Node)\r\n    private reward_node: cc.Node | null = null;\r\n\r\n    @property([cc.Sprite])\r\n    private reward_spr_array: cc.Sprite[] = [];\r\n\r\n    @property([cc.Label])\r\n    private reward_lbl_array: cc.Label[] = [];\r\n\r\n    @property(cc.Sprite)\r\n    private avatar_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Node)\r\n    private progress_node: cc.Node | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    private progress_bar_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Node)\r\n    private flag_new_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private flag_tow_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private flag_complete_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private not_complete_node: cc.Node | null = null;\r\n\r\n    @property(cc.Button)\r\n    private task_btn: cc.Button | null = null;\r\n\r\n    private _data: TaskItemData | null = null; // cáº§n xem TaskData\r\n    private _max_progress: number = 0.196;\r\n\r\n    public get data(): TaskItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: TaskItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    private update_view(): void {\r\n        const data = this._data;\r\n        const dataConfig = data.get_config();\r\n\r\n        if (this.flag_new_node.active = data.is_new, dataConfig) {\r\n            this.flag_tow_node.active = 1 < dataConfig.times;\r\n            if (data.state == TaskState.ACCEPT) {\r\n                this.not_complete_node.active = true;\r\n                this.progress_bar_spr.fillRange = data.count / dataConfig.condition_value * this._max_progress;\r\n                this.flag_complete_node.active = false;\r\n                this.reward_node.active = false;\r\n                this.node.width = 93;\r\n\r\n            } else if (data.state == TaskState.FINISH) {\r\n                this.not_complete_node.active = false;\r\n                this.flag_complete_node.active = true;\r\n                this.reward_node.active = true;\r\n\r\n                for (let index = 0; index < this.reward_spr_array.length; index++) {\r\n                    const rewardSpr = this.reward_spr_array[index];\r\n                    const rewardLbl = this.reward_lbl_array[index];\r\n                    const reward = dataConfig.reward_array[index];\r\n                    if (index < dataConfig.reward_array.length) {\r\n                        rewardSpr.node.active = true;\r\n                        rewardLbl.node.active = true;\r\n                        Utils.async_set_sprite_frame(rewardSpr, BundleName.TASK, \"res/\" + reward.reward_id);\r\n                        if (reward.reward_id < 3e4) {\r\n                            const itemCfg = gm.data.config_data.getItemCfgByID(reward.reward_id);\r\n                            if (itemCfg) {\r\n                                rewardLbl.string = itemCfg.name + \" x\" + reward.reward_num;\r\n                            }\r\n                        } else {\r\n                            const heroCfg = gm.data.config_data.getHeroCfgByID(reward.reward_id);\r\n                            if (heroCfg) {\r\n                                rewardLbl.string = heroCfg.name + \" x\" + reward.reward_num;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        rewardSpr.node.active = false;\r\n                        rewardLbl.node.active = false;\r\n                    }\r\n                }\r\n                this.scheduleOnce(() => {\r\n                    this.node.width = 93 + this.reward_node.width - 61;\r\n                });\r\n            }\r\n\r\n            Utils.async_set_sprite_frame(this.avatar_spr, BundleName.TASK, \"res/\" + dataConfig.icon_id);\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.flag_complete_node.active = false;\r\n        this.reward_node.active = false;\r\n    }\r\n\r\n    public editor_on_button_click_handler(event: cc.Event): void {\r\n        if (event.target == this.task_btn.node && this._data) {\r\n            if (!(this._data.state != TaskState.ACCEPT && this._data.state != TaskState.FINISH)) {\r\n                this._data.is_new = false;\r\n            }\r\n\r\n            gm.data.task_data.async_write_data();\r\n            this.update_view();\r\n            const worldPoint = this.node.convertToWorldSpaceAR(cc.v3(94, 0));\r\n\r\n            gm.ui.set_module_args(gm.const.Task.key, {\r\n                data: this._data,\r\n                world_point: worldPoint\r\n            });\r\n\r\n            gm.ui.async_show_module(gm.const.Task);\r\n        }\r\n    }\r\n}"]}
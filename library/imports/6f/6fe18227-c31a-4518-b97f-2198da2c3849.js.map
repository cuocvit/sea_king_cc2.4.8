{"version":3,"sources":["assets\\buildFunction\\scripts\\BarracksList.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { gm } from '../../start-scene/scripts/GameManager';\r\nimport { BarracksItem } from \"./BarracksItem\";\r\nimport { BuildTypeEnum } from '../../start-scene/scripts/Constants';\r\nimport { GameModule } from '../../start-scene/scripts/GameModule';\r\nimport { Build } from '../../common/configs/build';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass BraraclList extends GameModule {\r\n    @property([cc.Node])\r\n    private heroItemList: cc.Node[];\r\n\r\n    @property(cc.Node)\r\n    private hero_list: cc.Node | null;\r\n\r\n    @property(cc.Button)\r\n    private btn_close: cc.Button | null;\r\n\r\n    @property(cc.Button)\r\n    private btn_book: cc.Button | null;\r\n\r\n    @property(cc.Button)\r\n    private btn_back: cc.Button | null;\r\n\r\n    @property(cc.Label)\r\n    private hp_lbl: cc.Label | null;\r\n\r\n    @property(cc.Label)\r\n    private lvl_lbl: cc.Label | null;\r\n\r\n    private _mainbgStartRolation: number;\r\n    private _endRotation: number;\r\n    private _startX: number;\r\n    private _endX: number;\r\n    private _curIndex: number;\r\n    private _max_list_count: number;\r\n    private readonly ROTATION_PER_CARD: number;\r\n    private _animation: cc.Animation | null;\r\n    private readonly _posArr: cc.Vec3[];\r\n    private _maxHeroCount: number;\r\n    private _moveX: number;\r\n\r\n    private constructor() {\r\n        super();\r\n        this.heroItemList = [];\r\n        this.hero_list = null;\r\n        this.btn_close = null;\r\n        this.btn_book = null;\r\n        this.btn_back = null;\r\n        this.hp_lbl = null;\r\n        this.lvl_lbl = null;\r\n        this._mainbgStartRolation = 0;\r\n        this._endRotation = 0;\r\n        this._startX = 0;\r\n        this._endX = 0;\r\n        this._curIndex = 0;\r\n        this._max_list_count = 0;\r\n        this.ROTATION_PER_CARD = 15;\r\n        this._animation = null;\r\n        this._posArr = [\r\n            cc.v3(-400, 1500), cc.v3(0, 1552), cc.v3(400, 1500),\r\n            cc.v3(774, 1345), cc.v3(1100, 1096), cc.v3(1344, 776),\r\n            cc.v3(1500, 404), cc.v3(1551, 2), cc.v3(1500, -403),\r\n            cc.v3(1344, -776), cc.v3(1100, -1096), cc.v3(777, -1342),\r\n            cc.v3(400, -1500), cc.v3(0, -1552), cc.v3(-400, -1500),\r\n            cc.v3(-774, -1345), cc.v3(-1100, -1096), cc.v3(-1344, -776),\r\n            cc.v3(-1500, -404), cc.v3(-1551, 2), cc.v3(-1500, 403),\r\n            cc.v3(-1344, 776), cc.v3(-1100, 1096), cc.v3(-777, 1342)\r\n        ];\r\n\r\n        this._maxHeroCount = 0;\r\n        this._moveX = 1;\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this._maxHeroCount = gm.data.mapCell_data.barracks_unlock_data.length;\r\n        this._animation = this.node.getComponent(cc.Animation);\r\n        this._animation.stop();\r\n        this._animation.play(\"barracks_open\");\r\n        gm.audio.play_effect(gm.const.AUDIO_2_BARRACK_OPEN);\r\n        gm.data.mapCell_data.sortTask(gm.data.mapCell_data.barracks_unlock_data);\r\n\r\n        this._curIndex = 0;\r\n        let firstUnlockedIndex = -1;\r\n        for (let index = 0; index < gm.data.mapCell_data.barracks_unlock_data.length; ++index) {\r\n            if (gm.data.mapCell_data.barracks_unlock_data[index].ani_state == 0 && gm.data.mapCell_data.barracks_unlock_data[index].state == 1 && firstUnlockedIndex == -1) {\r\n                firstUnlockedIndex = index;\r\n                this._curIndex = firstUnlockedIndex;\r\n                break;\r\n            }\r\n        }\r\n        const buildData = gm.data.mapCell_data.buildData[BuildTypeEnum.BARRACKS_TYPE];\r\n        const buildConfigData = gm.config.get_row_data(\"BuildConfigData\", buildData.buildID.toString()) as Build;\r\n\r\n        this.hp_lbl.string = buildConfigData.hp + \"\";\r\n        this.lvl_lbl.string = \"Lv.\" + buildData.buildLvl;\r\n        this.refreshPanel();\r\n\r\n        this.hero_list.rotation = -this._curIndex * this.ROTATION_PER_CARD;\r\n        this.hero_list.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.hero_list.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.hero_list.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.hero_list.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private refreshPanel(): void {\r\n        this._curIndex;\r\n        let heroIdx;\r\n        const curIndex = this._curIndex;\r\n        for (let index = 0; index < this.heroItemList.length; index++) {\r\n            if (this._curIndex != 0 || index != 0) {\r\n                if (this._curIndex == this._maxHeroCount - 1) {\r\n                    if (index == 3 || index == 2) {\r\n                        this.heroItemList[index].active = false;\r\n                        continue;\r\n                    }\r\n                } else if (this._curIndex == this._maxHeroCount - 2 && index == 3) {\r\n                    this.heroItemList[index].active = false;\r\n                    continue;\r\n                }\r\n\r\n                heroIdx = this._curIndex + index;\r\n                this.heroItemList[index].zIndex = 1 == index ? 5 : 3 - index + 1;\r\n                this.heroItemList[index].active = true;\r\n                this.heroItemList[index].position = this._posArr[heroIdx % 24];\r\n                this.heroItemList[index].rotation = 15 * (curIndex + index - 1);\r\n                this.heroItemList[index].getComponent(BarracksItem).update_view(gm.data.mapCell_data.barracks_unlock_data[this._curIndex + index - 1].heroId, 1 == index, this._curIndex + index - 1);\r\n\r\n            } else {\r\n                this.heroItemList[index].active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    protected onDisable(): void {\r\n        this.hero_list.off(cc.Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n        this.hero_list.off(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n        this.hero_list.off(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        this.hero_list.off(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancel, this);\r\n    }\r\n\r\n    private onTouchStart(event: cc.Event.EventTouch): void {\r\n        if (this.hero_list.getNumberOfRunningActions() > 0) {\r\n            this.hero_list.stopAllActions();\r\n            this.hero_list.rotation = this._endRotation, this.checkEndPos();\r\n        }\r\n\r\n        this._mainbgStartRolation = this.hero_list.rotation;\r\n        this._startX = event.touch.getLocation().x;\r\n        gm.audio.play_effect(gm.const.AUDIO_1_BARRACK_CARD_MOVE);\r\n    }\r\n\r\n    public changeItemRolation(): void { }\r\n\r\n    private onTouchMove(event): void {\r\n        if (Math.abs(event.touch.getLocation().x - event.touch._startPoint.x) >= 15) {\r\n            this.hero_list.rotation = this._mainbgStartRolation + Math.floor((event.touch.getLocation().x - event.touch._startPoint.x) / 56);\r\n            this._endX = event.touch.getLocation().x;\r\n            console.log(this.hero_list.rotation);\r\n\r\n            if (this.hero_list.rotation <= this._mainbgStartRolation - this.ROTATION_PER_CARD) {\r\n                this.hero_list.rotation = this._mainbgStartRolation - this.ROTATION_PER_CARD;\r\n            }\r\n            if (this.hero_list.rotation >= this._mainbgStartRolation + this.ROTATION_PER_CARD) {\r\n                this.hero_list.rotation = this._mainbgStartRolation + this.ROTATION_PER_CARD;\r\n            }\r\n            this.checkEndPos();\r\n        }\r\n    }\r\n\r\n    private onTouchEnd(event): void {\r\n        if (!(Math.abs(event.touch.getLocation().x - event.touch._startPoint.x) < 14)) {\r\n            if (Math.abs(this.hero_list.rotation - this._mainbgStartRolation) < 5) {\r\n                this.setMapChangeAnma(this._mainbgStartRolation);\r\n            }\r\n            else if (this.hero_list.rotation < this._mainbgStartRolation) {\r\n                this.setMapChangeAnma(this._mainbgStartRolation - this.ROTATION_PER_CARD);\r\n            }\r\n            else if (this.hero_list.rotation > this._mainbgStartRolation) {\r\n                this.setMapChangeAnma(this._mainbgStartRolation + this.ROTATION_PER_CARD);\r\n            }\r\n            else {\r\n                this.setMapChangeAnma(this._mainbgStartRolation);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setMapChangeAnma(num: number): void {\r\n        this.hero_list.stopAllActions();\r\n        var positionRotation = this.hero_list.rotation > num ? -1 : 1;\r\n        this._moveX = positionRotation;\r\n        this._endRotation = num;\r\n\r\n        if (this._endRotation == 0) {\r\n            this.setCurIndex(0);\r\n        }\r\n        else if (this._mainbgStartRolation != num) {\r\n            this.setCurIndex(positionRotation);\r\n        }\r\n        else {\r\n            this.setCurIndex(99);\r\n        }\r\n\r\n        this.refreshPanel();\r\n        this.hero_list.runAction(cc.sequence(\r\n            cc.rotateTo(0.2, num + 2 * positionRotation).easing(cc.easeSineOut()),\r\n            cc.rotateTo(0.21, num + -1 * positionRotation).easing(cc.easeSineOut()),\r\n            cc.rotateTo(0.3, num).easing(cc.easeCubicActionOut()),\r\n            cc.callFunc(() => {\r\n                this.hero_list.rotation = num;\r\n                this.checkEndPos();\r\n            })));\r\n    }\r\n\r\n    private checkEndPos(): void {\r\n        this.hero_list.rotation = 0 < this.hero_list.rotation ? 0 : this.hero_list.rotation;\r\n        this.hero_list.rotation = this.hero_list.rotation < -(this._maxHeroCount - 1) * this.ROTATION_PER_CARD ? -(this._maxHeroCount - 1) * this.ROTATION_PER_CARD : this.hero_list.rotation;\r\n    }\r\n\r\n    private setCurIndex(index: number): void {\r\n        if (index != 0) {\r\n            if (index != 99) {\r\n                this._curIndex -= index;\r\n                this._curIndex;\r\n                this._maxHeroCount;\r\n            }\r\n        } else {\r\n            this._curIndex = 0;\r\n        }\r\n    }\r\n\r\n\r\n    private onTouchCancel(): void {\r\n        if (this.hero_list.rotation < 0 && this.hero_list.rotation > -(this._maxHeroCount - 1) * this.ROTATION_PER_CARD) {\r\n            if (this._endX > this._startX) {\r\n                this.hero_list.rotation = this._mainbgStartRolation + this.ROTATION_PER_CARD;\r\n            } else {\r\n                this._endX < this._startX && (this.hero_list.rotation = this._mainbgStartRolation - this.ROTATION_PER_CARD);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private editor_on_button_click_handler(event: cc.Event): void {\r\n        if (event.target == this.btn_close.node || event.target == this.btn_back.node) {\r\n            this._animation.stop();\r\n            this._animation.play(\"barracks_close\");\r\n            this._animation.on(\"finished\", () => {\r\n                if (\"barracks_close\" == this._animation.currentClip.name) {\r\n                    gm.ui.async_hide_module(gm.const.BARRACKS_LIST);\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            event.target;\r\n            this.btn_book.node;\r\n        }\r\n    }\r\n}\r\n"]}
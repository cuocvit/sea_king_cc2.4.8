{"version":3,"sources":["assets\\fight\\scripts\\FightBuildingItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { NodePoolItem } from '../../start-scene/scripts/NodePoolItem';\r\nimport { BundleName } from '../../start-scene/scripts/Constants';\r\nimport { Utils } from '../../start-scene/scripts/Utils';\r\nimport { gm } from '../../start-scene/scripts/GameManager';\r\nimport { SkillItem } from './SkillItem';\r\nimport { TaskConditionType } from '../../start-scene/scripts/TaskData';\r\nimport { FightDynamicNodeLayer } from '../../start-scene/scripts/FightConstants';\r\nimport { GraphicsUtils } from '../../start-scene/scripts/GraphicsUtils';\r\nimport { FightMapItem } from './FightMapItem';\r\nimport { FightBuildingItemData } from '../../start-scene/scripts/FightTempData';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class FightBuildingItem extends NodePoolItem {\r\n    @property(cc.Sprite)\r\n    private building_spr: cc.Sprite = null;\r\n\r\n    @property(cc.Label)\r\n    private lv_lbl: cc.Label = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    private hp_prg: cc.ProgressBar = null;\r\n\r\n    @property(cc.Label)\r\n    private star_count: cc.Label = null;\r\n\r\n    @property(cc.Vec3)\r\n    private one_star_pos: cc.Vec3 = null;\r\n\r\n    @property([cc.Vec3])\r\n    private two_star_pos_array: cc.Vec3[] = [];\r\n\r\n    @property([cc.Vec3])\r\n    private three_star_pos_array: cc.Vec3[] = [];\r\n\r\n    @property([cc.Node])\r\n    private star_node_array: cc.Node[] = [];\r\n\r\n    @property([cc.Sprite])\r\n    public reward_spr_array: cc.Sprite[] = [];\r\n\r\n    private _data: FightBuildingItemData;\r\n    private _hit_anim: cc.Animation;\r\n\r\n    public get data(): FightBuildingItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: FightBuildingItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    public update_view(): void {\r\n        if (gm.data.fight_temp_data.is_debug) {\r\n            this.lv_lbl.node.active = true;\r\n            this.lv_lbl.string = \"\" + this._data.lv;\r\n            GraphicsUtils.draw_line(this.node, cc.Color.WHITE, cc.Vec3.ZERO, cc.v3(0, this._data.call_range), 1, this._data.call_range);\r\n            GraphicsUtils.draw_circle(this.node, cc.Color.WHITE, cc.Vec3.ZERO, this._data.call_range);\r\n        } else {\r\n            this.lv_lbl.node.active = false;\r\n        }\r\n\r\n        let currentMapItem;\r\n        let buildingConfig = gm.config.get_row_data(\"BuildConfigData\", this._data.id + \"\") as FightMapItem;\r\n\r\n        if (buildingConfig) {\r\n            Utils.async_set_sprite_frame(this.building_spr, BundleName.MAP, \"res/build/\" + buildingConfig.model);\r\n        }\r\n\r\n        if (gm.data.fight_temp_data.is_lighthouse(this._data.id)) {\r\n            this.building_spr.node.position = cc.v3(19, -40);\r\n            currentMapItem = gm.data.fight_temp_data.get_fight_map_item(this._data.grid_position.x, this._data.grid_position.y);\r\n            buildingConfig = gm.data.fight_temp_data.get_fight_map_item(this._data.grid_position.x, this._data.grid_position.y - 1);\r\n\r\n            if (currentMapItem && buildingConfig) {\r\n                buildingConfig.land_node.position = currentMapItem.land_node.position.add(cc.v3(-1, 3));\r\n            }\r\n\r\n        } else {\r\n            this.building_spr.node.position = cc.v3(0, -37);\r\n        }\r\n\r\n        this.hp_prg.progress = 0 < this._data.max_hp ? this._data.hp / this._data.max_hp : 0;\r\n\r\n        for (let index = 0; index < this.star_node_array.length; index++) {\r\n            this.star_node_array[index].active = index < this._data.star_count;\r\n        }\r\n\r\n        if (this._data.star_count <= 0) {\r\n            this.star_count.node.active = false;\r\n\r\n        } else if (1 == this._data.star_count) {\r\n            this.star_count.node.active = false;\r\n            this.star_node_array[0].position = this.one_star_pos;\r\n\r\n        } else if (2 == this._data.star_count) {\r\n            this.star_count.node.active = false;\r\n            for (let index = 0; index < this.two_star_pos_array.length; index++) {\r\n                this.star_node_array[index].position = this.two_star_pos_array[index];\r\n            }\r\n\r\n        } else {\r\n            this.star_count.node.active = true;\r\n            this.star_count.string = \"x\" + this._data.star_count;\r\n            for (let index = 0; index < this.three_star_pos_array.length; index++) {\r\n                this.star_node_array[index].position = this.three_star_pos_array[index];\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < this.reward_spr_array.length; index++) {\r\n            if (index < this._data.reward_array.length) {\r\n                this.reward_spr_array[index].node.parent.active = true;\r\n                const reward = this._data.reward_array[index];\r\n                Utils.async_set_sprite_frame(this.reward_spr_array[index], BundleName.COMMON, \"res/handbook/\" + reward.id);\r\n            } else {\r\n                this.reward_spr_array[index].node.parent.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void { }\r\n\r\n    public change_hp(value: number): void {\r\n        if (this._data && value < 0) {\r\n            value = Math.min(0, value + this._data.defense);\r\n            this._data.hp = Math.max(0, Math.min(this._data.max_hp, this._data.hp + value));\r\n            gm.ui.fight.building_call_defense_hero(this._data);\r\n        }\r\n        this.update_view();\r\n    }\r\n\r\n    public play_hit_anim(position: cc.Node, animationName: string = \"hit\"): void {\r\n        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + (animationName = void 0 === animationName ? \"hit\" : animationName), NodePoolItem, (t) => {\r\n            gm.ui.fight.effect_node.addChild(t.node);\r\n            t.node.scale = 0.5;\r\n            const offset = gm.data.fight_temp_data.is_lighthouse(this._data.id) ? cc.v3(31, 51) : cc.Vec3.ZERO;\r\n            t.node.position = gm.ui.fight.convert_to_scene_point(position, offset);\r\n            const animation = t.getComponent(cc.Animation);\r\n            if (animation) {\r\n                animation.once(cc.Animation.EventType.FINISHED, () => {\r\n                    gm.pool.put(animation.node)\r\n                });\r\n                animation.play();\r\n            }\r\n        });\r\n\r\n        if (!this._hit_anim) {\r\n            this._hit_anim = this.building_spr.getComponent(cc.Animation);\r\n        }\r\n        if (this._hit_anim) {\r\n            this._hit_anim.play();\r\n        }\r\n    }\r\n\r\n    public play_skill_hit_anim(position: cc.Node, animationName: string, effectNode: cc.Node = gm.ui.fight.effect_node, zIndex: number = 0): void {\r\n        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + animationName, NodePoolItem, (t) => {\r\n            let fightTempData = gm.data.fight_temp_data;\r\n            effectNode.addChild(t.node);\r\n            t.node.zIndex = zIndex;\r\n            const lighthouse = fightTempData.is_lighthouse(this._data.id) ? cc.v3(31, 51) : cc.Vec3.ZERO;\r\n            t.node.position = gm.ui.fight.convert_to_scene_point(position, lighthouse);\r\n            t.node.scale = 0.5;\r\n            const animation = t.getComponent(cc.Animation);\r\n            if (animation) {\r\n                animation.once(cc.Animation.EventType.FINISHED, () => {\r\n                    gm.pool.put(animation.node)\r\n                });\r\n                animation.play();\r\n            }\r\n        });\r\n\r\n        if (!this._hit_anim) {\r\n            this._hit_anim = this.building_spr.getComponent(cc.Animation);\r\n        }\r\n        if (this._hit_anim) {\r\n            this._hit_anim.play();\r\n        }\r\n    }\r\n\r\n    public put_to_pool(): void {\r\n        const data = this._data;\r\n        if (data) {\r\n            if (this._hit_anim) {\r\n                this._hit_anim.setCurrentTime(0);\r\n                this._hit_anim.stop();\r\n            }\r\n\r\n            const gridIndex = data.grid_index;\r\n            data.grid_position;\r\n\r\n            const fightTempData = gm.data.fight_temp_data;\r\n            fightTempData.get_building_destroy_reward(data.array_index, data);\r\n            fightTempData.building_item_array[data.array_index] = null;\r\n            fightTempData.building_data_array[data.array_index] = null;\r\n\r\n            const parent = this.node.parent;\r\n            const position = this.node.position;\r\n            gm.pool.put(this.node);\r\n            gm.data.task_data.update_task_progress(TaskConditionType.DESTROY_BUILDING);\r\n            gm.pool.async_get(BundleName.FIGHT, \"prefabs/building_destroy\", NodePoolItem, (t) => {\r\n                fightTempData.building_destroy_array.push(t);\r\n                const ischeck = data && fightTempData.is_lighthouse(data.id) ? cc.v3(31, 51) : cc.Vec3.ZERO;\r\n                ischeck.addSelf(cc.v3(0, 4)).addSelf(position);\r\n                t.node.position = gm.ui.fight.convert_to_map_point(parent, ischeck);\r\n                const dynamic = gm.data.fight_temp_data.get_dynamic_node_layer(gridIndex, FightDynamicNodeLayer.DESTROY_EFFECT);\r\n                gm.ui.fight.map_node.addChild(t.node, dynamic);\r\n\r\n                if (gm.data.fight_temp_data.is_debug) {\r\n                    t.node.name = cc.js.formatStr(\"building_destroy_gridIndex@%d_zIndex@%d\", gridIndex, dynamic);\r\n                }\r\n\r\n                const anim = t.getComponent(cc.Animation);\r\n                if (anim) {\r\n                    anim.play();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public play_weapon_fly_anim(target: cc.Node, skillName: number, callback: () => void): void {\r\n        gm.pool.async_get(BundleName.FIGHT, \"prefabs/skill_item\", SkillItem, (t) => {\r\n            gm.ui.fight.effect_node.addChild(t.node);\r\n            gm.data.fight_temp_data.skill_item_array.push(t);\r\n            const offset = cc.v3(0, 40);\r\n            t.set_building_attack_target(this, offset, cc.v3(0, 10), 0, target, callback)\r\n        })\r\n    }\r\n}"]}
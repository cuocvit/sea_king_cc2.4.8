{"version":3,"sources":["assets\\start-scene\\scripts\\DataManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// import { saveAs } from 'file-saver';\r\n// import { FileSaver } from './FileSaver';\r\nimport { saveAs } from './FileSaver';\r\n//\r\nimport { EventEmitter } from './EventEmitter';\r\nimport { ServerData } from './ServerData';\r\nimport { MainData } from './MainData';\r\nimport { ConfigData } from './ConfigData';\r\nimport { RecordData } from './RecordData';\r\nimport { FightData } from './FightData';\r\nimport { FightTempData } from './FightTempData';\r\nimport { LadderData } from './LadderData';\r\nimport { LadderTempData } from './LadderTempData';\r\nimport { TurtleExchangeData } from './TurtleExchangeData';\r\nimport { SuperHeroTimer } from './SuperHeroTimer';\r\nimport { BundleName, BuildTypeEnum } from './Constants';\r\nimport { SignData } from './SignData';\r\nimport { MailTempData, MailLogItemData, MailInboxItemData } from './MailTempData';\r\nimport { Utils } from './Utils';\r\nimport { LuckyWheelData } from './LuckyWheelData';\r\nimport { WeakGuide, Direction } from './WeakGuide';\r\nimport { HeroStarData } from './HeroStarData';\r\nimport { gm } from './GameManager';\r\nimport { BuildData, MapCellCfgData, RoleItemDataVO } from './MapCellCfgData';\r\nimport { TaskData } from './TaskData';\r\nimport { StartData } from './StartData';\r\nimport { StoreData } from './StoreData';\r\nimport { SettingsData } from './SettingsData';\r\nimport { NetUtils, ReportData } from './NetUtils';\r\nimport { SignConfig } from '../../common/configs/sign';\r\nimport { HeroConfig } from '../../common/configs/hero';\r\nimport { LadderLVConfig } from '../../common/configs/ladder_lv';\r\nimport { ItemConfig } from '../../common/configs/item';\r\nimport { LadderRewardConfig } from '../../common/configs/ladder_reward';\r\nimport { LadderBuildding } from '../../common/configs/ladder_building';\r\nimport { StorageBase } from './StorageBase';\r\nimport { PoolConfig } from '../../common/configs/pool';\r\n// import { StorageManager } from './StorageManager';\r\n\r\n// @\r\ninterface fightTempData {\r\n  play_type: number;\r\n  map_id: number;\r\n  map_data_id: number;\r\n  boat_id: number;\r\n  name: string;\r\n}\r\n\r\ninterface mapReportItem {\r\n  cell_id: number;\r\n  skill_lv: number;\r\n  star_lv: number;\r\n  item_type: number;\r\n  item_id: number;\r\n  unique_id: number;\r\n  hero_id?: number;\r\n}\r\n\r\ninterface heroDefense {\r\n  unique_id: number;\r\n  hero_id: number;\r\n  skill_lv: number;\r\n  star_lv: number;\r\n};\r\n\r\nexport enum FightState {\r\n  NONE = 0,\r\n  RUN = 1,\r\n  PAUSE = 2,\r\n  SUCCESS = 3,\r\n  FAIL = 4\r\n};\r\n\r\n\r\n\r\nexport interface request {\r\n  uid: string;\r\n  token: string;\r\n  op_type?: string;\r\n  star?: number;\r\n  data?: string;\r\n  arch_data?: string;\r\n  arch_score?: number;\r\n  target_uid?: string;\r\n  nickname?: string;\r\n  change_star?,\r\n  target_nickname?,\r\n  target_star?,\r\n  target_change_star?,\r\n  op_result?,\r\n  op_reward?: string,\r\n  op_loss_reward?: string,\r\n  op_battle?: string,\r\n  target_op_battle?: string;\r\n  replay_id?: number\r\n  is_deduct_loss_reward?: number;\r\n}\r\n// !!!\r\n\r\n//\r\nexport class DataManager {\r\n  // @\r\n  private static _instance: DataManager | null = null;\r\n  // @ private\r\n  private init_callback: () => void;\r\n  private total_num: number;\r\n  private current_num: number;\r\n  private last_error_content: string;\r\n  private error_content: string;\r\n\r\n  // @ public\r\n  public is_init: boolean; // (not use)\r\n  public event_emitter: EventEmitter;\r\n  public server_data: ServerData;\r\n  public main_data: MainData;\r\n  public config_data: ConfigData;\r\n  public record_data: RecordData;\r\n  public start_data: StartData;\r\n  public fight_data: FightData;\r\n  public fight_temp_data: FightTempData;\r\n  public mapCell_data: MapCellCfgData;\r\n  public store_data: StoreData;\r\n  public task_data: TaskData;\r\n  public turtle_exchange_data: TurtleExchangeData;\r\n  public ladder_data: LadderData;\r\n  public ladder_temp_data: LadderTempData;\r\n  public sign_data: SignData;\r\n  public settings_data: SettingsData;\r\n  public mail_temp_data: MailTempData;\r\n  public lucky_wheel_data: LuckyWheelData;\r\n  public hero_star_data: HeroStarData;\r\n  public design_resolution: cc.Vec2;\r\n\r\n  // @\r\n  constructor() {\r\n    this.is_init = false;\r\n    this.event_emitter = new EventEmitter();\r\n    this.total_num = 0;\r\n    this.current_num = 0;\r\n    this.last_error_content = \"\";\r\n    this.error_content = \"\";\r\n  }\r\n\r\n  // @\r\n  public static get instance(): DataManager {\r\n    if (!this._instance) {\r\n      this._instance = new DataManager();\r\n    }\r\n    return this._instance;\r\n  }\r\n\r\n  // @\r\n  public priority_init(callback: () => void): void {\r\n    this.server_data = ServerData.get_instance() as ServerData;\r\n    this.main_data = MainData.get_instance() as MainData;\r\n    this.main_data.async_read_data(() => {\r\n      callback();\r\n    });\r\n  }\r\n\r\n  // @\r\n  public init(callback: () => void): void {\r\n    this.config_data = new ConfigData();\r\n    this.config_data.initAllCfg();\r\n    this.init_callback = callback;\r\n    this.record_data = RecordData.get_instance();\r\n    this.total_num++;\r\n    this.start_data = StartData.get_instance<StartData>();\r\n    this.total_num++;\r\n    this.fight_data = FightData.get_instance();\r\n    this.fight_temp_data = FightTempData.get_instance();\r\n    this.total_num++;\r\n    this.mapCell_data = MapCellCfgData.get_instance();\r\n    this.total_num++;\r\n    this.store_data = StoreData.get_instance();\r\n    this.total_num++;\r\n    this.task_data = TaskData.get_instance();\r\n    this.total_num++;\r\n    this.turtle_exchange_data = TurtleExchangeData.get_instance();\r\n    this.total_num++;\r\n    this.ladder_data = LadderData.get_instance();\r\n    this.ladder_temp_data = LadderTempData.get_instance();\r\n    this.total_num++;\r\n    this.sign_data = SignData.get_instance();\r\n    this.total_num++;\r\n    this.settings_data = SettingsData.get_instance();\r\n    this.total_num++;\r\n    this.mail_temp_data = MailTempData.get_instance();\r\n    this.lucky_wheel_data = LuckyWheelData.get_instance();\r\n    this.total_num++;\r\n    this.hero_star_data = HeroStarData.get_instance();\r\n    this.total_num++;\r\n    //\r\n    this.record_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.start_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.fight_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.mapCell_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.store_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.ladder_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.task_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.turtle_exchange_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.sign_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.settings_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.lucky_wheel_data.async_read_data(() => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    this.hero_star_data.async_read_data((t) => {\r\n      this.check_read_all_data_complete();\r\n    });\r\n    //\r\n    new SuperHeroTimer().init();\r\n  } // end: init\r\n\r\n  // @\r\n  public clear_store_data(): void {\r\n    console.log(\"MainData---------\", MainData.get_instance<MainData>().STORAGE_KEY);\r\n    console.log(\"StartData--------\", StartData.get_instance<StartData>().STORAGE_KEY);\r\n    MainData.get_instance<MainData>().async_delete_data();\r\n    StartData.get_instance<StartData>().async_delete_data();\r\n    RecordData.get_instance<RecordData>().async_delete_data();\r\n    StoreData.get_instance<StoreData>().async_delete_data();\r\n    LadderData.get_instance<LadderData>().async_delete_data();\r\n    TaskData.get_instance<TaskData>().async_delete_data();\r\n    TurtleExchangeData.get_instance<TurtleExchangeData>().async_delete_data();\r\n    MapCellCfgData.get_instance<MapCellCfgData>().async_delete_data();\r\n    FightData.get_instance<FightData>().async_delete_data();\r\n    SignData.get_instance<SignData>().async_delete_data();\r\n    SettingsData.get_instance<SettingsData>().async_delete_data();\r\n    LuckyWheelData.get_instance<LuckyWheelData>().async_delete_data();\r\n    HeroStarData.get_instance<HeroStarData>().async_delete_data();\r\n    ReportData.instance.clear_data();\r\n    NetUtils.remove_uuid();\r\n    gm.ui.show_notice(gm.const.TEXT_1);\r\n  }\r\n\r\n  // @ (used for debugging)\r\n  public export_data(): void {\r\n    const data = {\r\n      error_log: this.export_error_log(),\r\n      store_data: this.export_store_data(),\r\n      fight_data: this.export_fight_data()\r\n    };\r\n\r\n    if (cc.sys.isBrowser) {\r\n      const jsonData = JSON.stringify(data);\r\n      const blob = new Blob([jsonData], { type: 'text/plain;charset=utf-8' });\r\n      saveAs(blob, 'debugging-data.txt');\r\n    } else {\r\n      const jsonStoreData = JSON.stringify(data.store_data);\r\n      for (let i = 0; i < jsonStoreData.length; i += 1000) {\r\n        console.log(jsonStoreData.substr(i, Math.min(1000, jsonStoreData.length - i)));\r\n      }\r\n      console.error('Non-browser platforms cannot export data');\r\n    }\r\n  }\r\n\r\n  // @\r\n  public catch_error_log(isEnabled: boolean = false): void {\r\n    if (window.onerror) return;\r\n    if (!isEnabled) {\r\n      window.onerror = function () { };\r\n      return;\r\n    }\r\n    const self = this;\r\n    window.onerror = function (message: string, source: string, lineno: number, colno: number, error: Error) {\r\n      let errorMessage = message + \">>\" + source + \":\" + lineno;\r\n      if (arguments.length > 3) {\r\n        errorMessage += \" \" + colno + \" stack:\";\r\n        errorMessage += error.stack.substr(0, Math.max(Math.min(10240 - errorMessage.length, error.stack.length), 0));\r\n      }\r\n      if (self.error_content === errorMessage) return true;\r\n      self.last_error_content = self.error_content;\r\n      self.error_content = errorMessage;\r\n      return false;\r\n    }.bind(self);\r\n  }\r\n\r\n  // @\r\n  private export_error_log(): { error_content: string; last_error_content: string } {\r\n    return {\r\n      error_content: this.error_content,\r\n      last_error_content: this.last_error_content\r\n    };\r\n  }\r\n\r\n  // @\r\n  public export_store_data(): { [key: string]: StorageBase | string } {\r\n    const data: { [key: string]: StorageBase | string } = {};\r\n    data[this.main_data.PREFIX + this.main_data.STORAGE_KEY] = this.main_data;\r\n    data[this.start_data.PREFIX + this.start_data.STORAGE_KEY] = this.start_data;\r\n    data[this.record_data.PREFIX + this.record_data.STORAGE_KEY] = this.record_data;\r\n    data[this.store_data.PREFIX + this.store_data.STORAGE_KEY] = this.store_data;\r\n    data[this.ladder_data.PREFIX + this.ladder_data.STORAGE_KEY] = this.ladder_data;\r\n    data[this.task_data.PREFIX + this.task_data.STORAGE_KEY] = this.task_data;\r\n    data[this.turtle_exchange_data.PREFIX + this.turtle_exchange_data.STORAGE_KEY] = this.turtle_exchange_data;\r\n    data[this.mapCell_data.PREFIX + this.mapCell_data.STORAGE_KEY] = this.mapCell_data;\r\n    data[this.fight_data.PREFIX + this.fight_data.STORAGE_KEY] = this.fight_data;\r\n    data[this.settings_data.PREFIX + this.settings_data.STORAGE_KEY] = this.settings_data;\r\n    data[NetUtils.PREFIX + NetUtils.STORAGE_KEY] = gm.channel.get_device_id();\r\n    data.P2_UID = gm.data.server_data.uid;\r\n    data.P2_ReportData = cc.sys.localStorage.getItem(\"P2_ReportData\");\r\n    return data;\r\n  }\r\n\r\n  // @, type !!!\r\n  private export_fight_data(): fightTempData {\r\n    const fightTempData = gm.data.fight_temp_data;\r\n    return {\r\n      play_type: fightTempData.play_type,\r\n      map_id: fightTempData.map_id,\r\n      map_data_id: fightTempData.map_data_id,\r\n      boat_id: fightTempData.boat_id,\r\n      name: fightTempData.name\r\n    };\r\n  }\r\n\r\n  // @\r\n  private check_read_all_data_complete(): void {\r\n    this.current_num++;\r\n    if (this.current_num >= this.total_num) {\r\n      this.check_reset_data();\r\n      this.is_init = true;\r\n      if (this.init_callback) this.init_callback();\r\n    }\r\n  }\r\n\r\n  // @\r\n  private check_reset_data(): void {\r\n    const currentDate = new Date();\r\n    let currentTime = Math.floor(currentDate.getTime() / 1000);\r\n    currentTime = currentTime - (currentTime - 60 * currentDate.getTimezoneOffset()) % 86400;\r\n    if (currentTime < this.sign_data.next_day_time) return;\r\n    //\r\n    const daysPassed = Math.ceil((currentTime - this.sign_data.next_day_time) / 86400) + 1;\r\n    this.sign_data.sign_day += daysPassed;\r\n    this.sign_data.next_day_time = 86400 + currentTime;\r\n    this.sign_data.sign_state = 0;\r\n    //\r\n    if (this.sign_data.sign_day > 0) {\r\n      for (let i = 0; i < SignData.SIGN_LOOP_DAY; i++) {\r\n        const signDataItem = this.sign_data.sign_data_array[i];\r\n        signDataItem.array_index = i;\r\n        signDataItem.day = (this.sign_data.sign_day + i + 1) % SignData.MAX_DAY_COUNT;\r\n        signDataItem.state = i === 0 ? 1 : 0;\r\n        const configData = gm.config.get_row_data(\"SignConfigData\", signDataItem.day.toString()) as SignConfig;\r\n        if (configData) signDataItem.reward_array = configData.reward_array;\r\n      }\r\n      //\r\n      for (let i = 0; i < SignData.MAX_BUY_COUNT; i++) {\r\n        const signBuyDataItem = this.sign_data.sign_buy_data_array[i];\r\n        signBuyDataItem.array_index = i;\r\n        signBuyDataItem.state = 1;\r\n        const configData = gm.config.get_row_data(\"SignConfigData\", (this.sign_data.sign_day + 1).toString()) as SignConfig;\r\n        if (configData) signBuyDataItem.reward_data = configData.other_reward_array[i];\r\n      }\r\n    }\r\n    //\r\n    this.sign_data.async_write_data();\r\n    this.lucky_wheel_data.left_lucky_wheel_free_count = gm.const.MAX_LUCKY_WHEEL_FREE_COUNT;\r\n    this.lucky_wheel_data.left_lucky_wheel_video_count = gm.const.MAX_LUCKY_WHEEL_VIDEO_COUNT;\r\n    this.lucky_wheel_data.last_reward_index = 0;\r\n    this.lucky_wheel_data.free_timestamp = Date.now() + gm.const.FREE_DRAW_TIME_INTERVAL;\r\n    this.lucky_wheel_data.async_write_data();\r\n    this.record_data.share_record_count = 0;\r\n    this.record_data.left_push_share_count = gm.const.MAX_PUSH_SHARE_COUNT;\r\n    this.record_data.async_write_data();\r\n    this.main_data.left_share_count = gm.const.MAX_VIDEO_FAIL_SHARE_COUNT;\r\n    this.main_data.is_today_no_ad = false;\r\n    this.main_data.left_free_super_recruit_count = gm.const.MAX_FREE_SUPER_RECRUIT_COUNT;\r\n    this.main_data.async_write_data();\r\n  }\r\n\r\n  // @ (not use)\r\n  // public reset_daily_data(): void {}\r\n\r\n  // @ (not use)\r\n  /* public print_debug_info(): void {\r\n      StorageManager.instance.print_debug_info();\r\n  } */\r\n\r\n  // @, type !!!\r\n  public show_weak_guide(target: cc.Node, position: cc.Vec3, content: string, disappearTime: number, callback: (() => void) | null = null): void {\r\n    if (target.getChildByName(\"weak_guide\")) return;\r\n    gm.pool.async_get(BundleName.COMMON, \"prefabs/weak_guide\", WeakGuide, (instance) => {\r\n      if (target.getChildByName(\"weak_guide\")) return;\r\n      instance.node.position = position;\r\n      instance.data = {\r\n        tip_content: content,\r\n        tip_offset: cc.v3(-50, 23),\r\n        dir: Direction.RIGHT,\r\n        disappear_time: disappearTime,\r\n        target: target,\r\n        callback: callback\r\n      };\r\n      target.addChild(instance.node);\r\n    });\r\n  }\r\n\r\n  // @, type !!!! items: { prop: number; weight: number }[]\r\n  public setRandomReward(items: PoolConfig[], rewards: RoleItemDataVO[], count: number = 1): void {\r\n    let totalWeight: number = 0;\r\n    const cumulativeWeights: [number, number][] = [];\r\n    for (const item of items) {\r\n      totalWeight += item.weight;\r\n      cumulativeWeights.push([item.prop, totalWeight]);\r\n    }\r\n    while (rewards.length < count) {\r\n      const randomWeight = Math.floor(Math.random() * totalWeight);\r\n      for (let [prop, weight] of cumulativeWeights) {\r\n        if (randomWeight <= weight) {\r\n          const rewardItem = new RoleItemDataVO();\r\n          rewardItem.itemType = prop < 30000 ? 1 : 3;\r\n          rewardItem.itemID = prop;\r\n          rewards.push(rewardItem);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // @, type!!!\r\n  public update_player_data_request(callback?: () => void): void {\r\n    const garrisonData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n    if (!garrisonData || garrisonData.buildLvl < 1) return;\r\n    const mapCellData = gm.data.mapCell_data;\r\n    const mapReportData = mapCellData.role_map_report_data;\r\n    //\r\n    const mapReportItems: mapReportItem[] = [];\r\n    const mapReportMap: Record<number, mapReportItem> = {};\r\n    const heroDataArray: heroDefense[] = [];\r\n    const seagoingBoatData = mapCellData.getBuildDataByType(BuildTypeEnum.SEAGOINGBOAT_TYPE);\r\n    const boatId = seagoingBoatData ? seagoingBoatData.buildID : 60001;\r\n    const itemDataMap: Record<number, { item_id: number, item_num: number }> = {};\r\n    const emptyCells: number[] = [];\r\n    const specialCells: number[] = [224, 233, 234, 210, 211, 212, 222, 223, 189];\r\n    const normalCells: number[] = [208, 209, 200, 201, 187, 188];\r\n\r\n    // for1\r\n    for (let i = 0; i < mapReportData.length; i++) {\r\n      const cellId = mapReportData[i];\r\n      if (specialCells.indexOf(cellId) > -1) continue;\r\n      const cellData = mapCellData.role_map_data[cellId];\r\n      const mapReport_Item: mapReportItem = {\r\n        cell_id: cellId,\r\n        skill_lv: 0,\r\n        star_lv: 0,\r\n        item_type: 0,\r\n        item_id: 0,\r\n        unique_id: 0\r\n      };\r\n      //\r\n      if (cellData) {\r\n        if (cellData.cellState === 2) {\r\n          if (cellData.itemType === 3 && cellData.itemID > 0) {\r\n            const heroConfig = gm.config.get_row_data(\"HeroConfigData\", cellData.itemID.toString()) as HeroConfig;\r\n            if (heroConfig.occupation > 0) {\r\n              const heroStarData = gm.data.hero_star_data.getHeroStarData(heroConfig.arms);\r\n              mapReport_Item.star_lv = heroStarData ? heroStarData.star : 0;\r\n              if (heroConfig.occupation === 10) {\r\n                mapReport_Item.item_type = cellData.itemType,\r\n                  mapReport_Item.item_id = cellData.itemID,\r\n                  mapReport_Item.skill_lv = gm.data.mapCell_data.getRoleSkillData(heroConfig.skill_id).lvl,\r\n                  mapReport_Item.unique_id = cellData.heroUID;\r\n              } else if (heroConfig.occupation === 12) {\r\n                mapReport_Item.item_type = cellData.itemType,\r\n                  mapReport_Item.item_id = cellData.itemID,\r\n                  mapReport_Item.skill_lv = heroConfig.lv,\r\n                  mapReport_Item.unique_id = cellData.heroUID;\r\n              } else if (gm.data.mapCell_data.getHeroDefanseDataByHeroUID(cellData.heroUID)) {\r\n                const skill_lv = heroConfig.hero_type === 1 ? heroConfig.lv : gm.data.mapCell_data.getRoleSkillData(heroConfig.skill_id).lvl;\r\n                const heroDefenseData: heroDefense = {\r\n                  unique_id: cellData.heroUID,\r\n                  hero_id: cellData.itemID,\r\n                  skill_lv: skill_lv,\r\n                  star_lv: mapReport_Item.star_lv\r\n                }; //  as { unique_id: string; hero_id: string; skill_lv: number; star_lv: number }\r\n                heroDataArray.push(heroDefenseData);\r\n                //\r\n                mapReport_Item.item_type = cellData.itemType;\r\n                mapReport_Item.item_id = cellData.itemID;\r\n                mapReport_Item.skill_lv = skill_lv;\r\n                mapReport_Item.unique_id = cellData.heroUID;\r\n              }\r\n            }\r\n          } else if (cellData.itemType === 2 && cellData.itemID > 0) {\r\n            const buildConfig = gm.data.config_data.getBuildCfgByID(cellData.itemID);\r\n            if ((cellData.itemID < 57000 || cellData.itemID >= 58000) && buildConfig && buildConfig.buildLv > 0) {\r\n              mapReport_Item.item_type = cellData.itemType;\r\n              mapReport_Item.item_id = cellData.itemID;\r\n            } else {\r\n              mapReport_Item.item_type = 0;\r\n              mapReport_Item.item_id = 0;\r\n              emptyCells.push(cellId);\r\n            }\r\n          } else { // phần này AI luôn sai\r\n            if (cellData.itemType === 1) {\r\n              if ((cellData.itemID >= 12001 && cellData.itemID <= 18011) || (cellData.itemID >= 25001 && cellData.itemID <= 25008)) {\r\n                const lowLevelProp = this.high_to_low_level_prop(cellData.itemID, 1);\r\n                if (lowLevelProp.item_id > 0 && lowLevelProp.item_num > 0) {\r\n                  const itemData = itemDataMap[lowLevelProp.item_id] || { item_id: lowLevelProp.item_id, item_num: 0 }\r\n                  itemData.item_num += lowLevelProp.item_num;\r\n                  itemDataMap[lowLevelProp.item_id] = itemData;\r\n                }\r\n              } else {\r\n                mapReport_Item.item_type = 0;\r\n                mapReport_Item.item_id = 0;\r\n              }\r\n            }\r\n            emptyCells.push(cellId);\r\n          }\r\n        }\r\n      } else {\r\n        const mapCellConfig = gm.data.config_data.getMapCellCfgByID(cellId);\r\n        mapReport_Item.item_type = mapCellConfig.itemType;\r\n        mapReport_Item.item_id = mapCellConfig.itemID;\r\n      }\r\n      mapReportItems.push(mapReport_Item);\r\n      mapReportMap[mapReport_Item.cell_id] = mapReport_Item;\r\n    } // end: for1\r\n\r\n    // @ for2\r\n    for (let i = 0; i < normalCells.length; i++) {\r\n      const cellId = normalCells[i];\r\n      const mapReport_Item = mapReportMap[cellId];\r\n      if (mapReport_Item && emptyCells.length > 0) {\r\n        const randomIndex = Utils.math_random(true, 0, emptyCells.length);\r\n        const emptyCellId = emptyCells.splice(randomIndex, 1)[0];\r\n        const emptyCellReportItem = mapReportMap[emptyCellId];\r\n        if (emptyCellReportItem) {\r\n          emptyCellReportItem.item_type = mapReport_Item.item_type;\r\n          emptyCellReportItem.item_id = mapReport_Item.item_id;\r\n        }\r\n        delete mapReportMap[emptyCellId];\r\n      }\r\n    } // end: for2\r\n\r\n    // @\r\n    const ladderLevel = gm.data.ladder_temp_data.convert_rank_to_lv(gm.data.ladder_temp_data.rank);\r\n    const ladderLv = gm.config.get_row_data(\"LadderLvConfigData\", ladderLevel.toString()) as LadderLVConfig\r\n    const propRatio = ladderLv.prop_ratio;\r\n\r\n    // @ for3\r\n    for (const itemId in itemDataMap) {\r\n      const itemData = itemDataMap[itemId];\r\n      const propMap = gm.const.MAP_REPORT_PROP_MAP[itemData.item_id];\r\n      if (propMap) {\r\n        itemData.item_num = Math.min(propMap.max_num, Math.ceil(itemData.item_num * propRatio));\r\n      } else {\r\n        itemData.item_num = 1;\r\n        // 出现了未设置最大上限值的道具,道具数量强制改为1\r\n        console.error(\"There is an item without a maximum limit, the item quantity is forcibly changed to 1\");\r\n      }\r\n      console.log(\"Before conversion:\", JSON.stringify(itemData));\r\n      const highLevelProps = this.low_level_to_high_prop(itemData.item_id, itemData.item_num);\r\n      console.log(\"After conversion:\", JSON.stringify(highLevelProps));\r\n      for (let i = 0; i < highLevelProps.length; i++) {\r\n        const highLevelProp = highLevelProps[i];\r\n        for (let j = 0; j < highLevelProp.item_num; j++) {\r\n          if (emptyCells.length > 0) {\r\n            const randomIndex = Utils.math_random(true, 0, emptyCells.length);\r\n            const emptyCellId = emptyCells.splice(randomIndex, 1)[0];\r\n            const emptyCellReportItem = mapReportMap[emptyCellId];\r\n            if (emptyCellReportItem) {\r\n              emptyCellReportItem.item_type = 1;\r\n              emptyCellReportItem.item_id = highLevelProp.item_id;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } // end: for3\r\n\r\n    // @\r\n    const playerData = {\r\n      uid: gm.data.server_data.uid,\r\n      nickname: gm.data.server_data.nickname,\r\n      star: gm.data.ladder_temp_data.total_star,\r\n      hero_data_array: heroDataArray,\r\n      map_data_array: mapReportItems,\r\n      boat_id: boatId\r\n    };\r\n\r\n    // @\r\n    const requestParams = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token\r\n    };\r\n    // @\r\n    const requestData: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      op_type: \"defensive_data\",\r\n      star: gm.data.ladder_temp_data.total_star,\r\n      data: JSON.stringify(playerData)\r\n    };\r\n    // @\r\n    this.server_data.update_player_data_request((result) => {\r\n      if (result.ResultCode === 0) {\r\n        console.log(\"Player data updated successfully\"); // 更新玩家数据成功\r\n        if (callback) callback();\r\n      }\r\n    }, requestParams, requestData);\r\n  } // end: update_player_data_request\r\n\r\n  // @, type!!!\r\n  public low_level_to_high_prop(itemId: number, itemNum: number): { item_id: number, item_num: number }[] {\r\n    const result: { item_id: number, item_num: number }[] = [];\r\n    const itemConfig: ItemConfig | undefined = gm.config.get_row_data(\"ItemConfigData\", itemId.toString()) as ItemConfig;\r\n    //\r\n    if (itemConfig) {\r\n      if (itemConfig.lv > 0) {\r\n        let remainingNum = itemNum;\r\n        for (let level = 4; level >= 1; level--) {\r\n          const highLevelItemId = itemId + level - 1;\r\n          const highLevelItemConfig = gm.config.get_row_data(\"ItemConfigData\", highLevelItemId.toString()) as ItemConfig;\r\n          if (highLevelItemConfig) {\r\n            const maxNum = Math.max(1, highLevelItemConfig.number);\r\n            const count = Math.floor(remainingNum / maxNum);\r\n            remainingNum %= maxNum;\r\n            if (count > 0) {\r\n              result.push({ item_id: highLevelItemId, item_num: count });\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        result.push({ item_id: itemId, item_num: itemNum });\r\n      }\r\n    }\r\n    return result;\r\n  } // end: low_level_to_high_prop\r\n\r\n  // @\r\n  public high_to_low_level_prop(itemId: number, itemNum: number): { item_id: number, item_num: number } {\r\n    const result = { item_id: 0, item_num: 0 };\r\n    const itemConfig: ItemConfig | undefined = gm.config.get_row_data(\"ItemConfigData\", itemId.toString()) as ItemConfig;\r\n    //\r\n    if (itemConfig) {\r\n      if (itemConfig.lv > 0) {\r\n        const maxNum = Math.max(1, itemConfig.lv);\r\n        result.item_id = itemConfig.id - maxNum + 1;\r\n        result.item_num = Math.max(1, itemConfig.number) * itemNum;\r\n      } else {\r\n        result.item_id = itemId;\r\n        result.item_num = itemNum;\r\n      }\r\n    }\r\n    return result;\r\n  } // end: high_to_low_level_prop\r\n\r\n  // @, type !!!!\r\n  public update_player_fight_data(\r\n    change_star: number,\r\n    target_uid: string,\r\n    target_nickname: string,\r\n    target_star: number,\r\n    target_change_star: number,\r\n    op_result: number,\r\n    op_reward: { id: number, num: number }[],\r\n    op_loss_reward: { id: number, num: number }[],\r\n    op_battle: { unique_id: number, id: number, hp: number }[],\r\n    target_op_battle: { unique_id: number, id: number, hp: number }[]\r\n  ): void {\r\n    const params: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token\r\n    };\r\n    //\r\n    const data: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      nickname: gm.data.server_data.nickname,\r\n      star: gm.data.ladder_temp_data.total_star,\r\n      change_star,\r\n      target_uid,\r\n      target_nickname,\r\n      target_star,\r\n      target_change_star,\r\n      op_type: \"2\",\r\n      op_result,\r\n      op_reward: JSON.stringify(op_reward),\r\n      op_loss_reward: JSON.stringify(op_loss_reward),\r\n      op_battle: JSON.stringify(op_battle),\r\n      target_op_battle: JSON.stringify(target_op_battle)\r\n    };\r\n    //\r\n    this.server_data.update_player_fight_data((response) => {\r\n      if (response.ResultCode === 0) {\r\n        console.log(\"Report combat data successfully\");\r\n      }\r\n    }, params, data);\r\n  } // end: update_player_fight_data\r\n\r\n  // @ (not use)\r\n  /* public get_player_data_request(): void {\r\n    const requestData = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      op_type: \"defensive_data\"\r\n    };\r\n    //\r\n    this.server_data.get_player_data_request((response) => {\r\n      if (response.ResultCode === 0 && response.data) {\r\n        try {\r\n          const data = JSON.parse(response.data.defensive_data);\r\n          console.log(data);\r\n          console.log(\"Get data successfully\"); // 获取数据成功\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    }, requestData);\r\n  } */\r\n\r\n  // @, type!!!\r\n  public get_player_score_data_request(callback?: () => void): void {\r\n    const requestData: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      op_type: \"score\"\r\n    };\r\n    //\r\n    this.server_data.get_player_data_request((response) => {\r\n      if (response.ResultCode === 0 && response.data) {\r\n        try {\r\n          const data = JSON.parse(response.data);\r\n          gm.data.ladder_temp_data.total_star = data.scores;\r\n          gm.data.ladder_temp_data.rank = data.rank || 0;\r\n          gm.data.ladder_temp_data.arch_rank = data.arch_rank || 0;\r\n          gm.data.ladder_temp_data.castle_level = data.castle_level || 0;\r\n          gm.data.event_emitter.emit(ServerData.EVENT_DATA_CHANGE);\r\n          // gm.data.event_emitter <=> this.event_emitter.emit(ServerData.EVENT_DATA_CHANGE);\r\n          console.log(\"Get data successfully\"); // 获取数据成功\r\n          if (callback) callback();\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n    }, requestData);\r\n  } // end: get_player_score_data_request\r\n\r\n  // @, type!!!\r\n  public update_player_score_data_request(star: number, callback?: () => void): void {\r\n    const garrisonData: BuildData | undefined = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n    if (!garrisonData || garrisonData.buildLvl < 1) return;\r\n    //\r\n    let totalBuildLevel = 0;\r\n    let towerLevel = 0;\r\n    let barracksLevel = 0;\r\n    let garrisonLevel = 0;\r\n    let seagoingBoatLevel = 0;\r\n    let wharfTaxLevel = 0;\r\n    let privateHousingLevel = 0;\r\n    //\r\n    const buildData = gm.data.mapCell_data.buildData;\r\n    for (const buildType in buildData) {\r\n      const build = buildData[buildType];\r\n      if (!build) continue;\r\n      totalBuildLevel += build.buildLvl;\r\n      if (buildType == BuildTypeEnum.TOWER_TYPE.toString()) {\r\n        towerLevel = build.buildLvl;\r\n      } else if (buildType == BuildTypeEnum.BARRACKS_TYPE.toString()) {\r\n        barracksLevel = build.buildLvl;\r\n      } else if (buildType == BuildTypeEnum.GARRISION_TYPE.toString()) {\r\n        garrisonLevel = build.buildLvl;\r\n      } else if (buildType == BuildTypeEnum.SEAGOINGBOAT_TYPE.toString()) {\r\n        seagoingBoatLevel = build.buildLvl;\r\n      } else if (buildType == BuildTypeEnum.WHARFTAX_TYPE.toString()) {\r\n        wharfTaxLevel = build.buildLvl;\r\n      } else if (buildType == BuildTypeEnum.PRIVATEHOUSING_TYPE.toString()) {\r\n        privateHousingLevel = build.buildLvl;\r\n      }\r\n    }\r\n    //\r\n    const requestParams = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token\r\n    };\r\n    //\r\n    const requestData: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      op_type: \"score\",\r\n      star: star,\r\n      data: JSON.stringify({\r\n        level: 0,\r\n        scores: star\r\n      }),\r\n      arch_data: JSON.stringify({\r\n        castle: towerLevel,\r\n        camp: barracksLevel,\r\n        defense: garrisonLevel,\r\n        boat: seagoingBoatLevel,\r\n        tower: wharfTaxLevel,\r\n        house: privateHousingLevel\r\n      }),\r\n      arch_score: totalBuildLevel\r\n    };\r\n    //\r\n    this.server_data.update_player_data_request((response) => {\r\n      if (response.ResultCode === 0) {\r\n        console.log(\"Player star data updated successfully\"); // 更新玩家星星数据成功\r\n        if (callback) callback();\r\n      }\r\n    }, requestParams, requestData);\r\n  } // end: update_player_score_data_request\r\n\r\n  // @, type!!!\r\n  public match_player(targetUid: string = \"\"): void {\r\n    const params: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      star: gm.data.ladder_temp_data.total_star,\r\n      target_uid: targetUid\r\n    };\r\n    //\r\n    gm.data.server_data.match_players((response: any) => {\r\n      const fightTempData = gm.data.fight_temp_data;\r\n      if (response.ResultCode === 0) {\r\n        console.log(\"Player matched successfully\"); // 匹配玩家成功\r\n        fightTempData.goal_uid = response.data.goal_uid;\r\n        console.log(\"target_uid:\" + fightTempData.goal_uid);\r\n        //\r\n        try {\r\n          fightTempData.defensive_data = JSON.parse(response.data.player_data.defensive_data);\r\n          if (!fightTempData.defensive_data.hasOwnProperty(\"uid\") || !fightTempData.defensive_data.hasOwnProperty(\"map_data_array\")) {\r\n            fightTempData.defensive_data = {\r\n              uid: \"\",\r\n              nickname: \"\",\r\n              star: 0,\r\n              boat_id: 0,\r\n              map_data_array: [],\r\n              hero_data_array: []\r\n            };\r\n            cc.error(\"Matching player data exception\"); // 匹配玩家数据异常\r\n            fightTempData.goal_uid = \"\";\r\n            fightTempData.match_map_by_ladder_lv();\r\n          }\r\n        } catch (error) {\r\n          cc.error(\"Match player data parsing failed\"); // 匹配玩家数据解析失败\r\n          fightTempData.defensive_data = {\r\n            uid: \"\",\r\n            nickname: \"\",\r\n            star: 0,\r\n            boat_id: 0,\r\n            map_data_array: [],\r\n            hero_data_array: []\r\n          };\r\n          fightTempData.goal_uid = \"\";\r\n          fightTempData.match_map_by_ladder_lv();\r\n        }\r\n        //\r\n        fightTempData.play_type = 0;\r\n        gm.ui.show_fight();\r\n        gm.channel.report_event(\"fight\", {\r\n          event_desc: \"Raid\", // 突袭\r\n          desc: \"start\" // 开始\r\n        });\r\n        ReportData.instance.report_once_point(10821);\r\n        ReportData.instance.report_point(10822);\r\n      } else if (response.ResultCode === -2) {\r\n        // 该玩家今日被攻击次数已经达到上限，不能复仇\r\n        gm.ui.show_notice(\"Bạn đã đạt giới hạn tấn công người này và không thể trả đũa!!!\");\r\n      } else {\r\n        console.log(\"Player match failed, matching NPC map\"); // 匹配玩家失败,匹配NPC地图\r\n        fightTempData.goal_uid = \"\";\r\n        fightTempData.match_map_by_ladder_lv();\r\n        gm.ui.show_fight();\r\n        gm.channel.report_event(\"fight\", {\r\n          event_desc: \"Raid\", // 突袭\r\n          desc: \"start\" // 开始\r\n        });\r\n        ReportData.instance.report_once_point(10821);\r\n        ReportData.instance.report_point(10822);\r\n      }\r\n    }, params);\r\n  } // end: match_player\r\n\r\n  // @ (not use)\r\n  /* public get_player_fight_replay_data(replayId: string, callback?: () => void): void {\r\n    const params: PlayerFightReplayDataParams = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      replay_id: replayId\r\n    };\r\n    //\r\n    this.server_data.get_player_fight_replay_data((response: any) => {\r\n      if (response.ResultCode === 0) {\r\n        console.log(\"Obtaining battle replay data successfully\"); // 获取战斗回放数据成功\r\n        if (callback) callback();\r\n      }\r\n    }, params);\r\n  } // end: get_player_fight_replay_data */\r\n\r\n  // @\r\n  public get_player_notice(callback?: () => void): void {\r\n    const params: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token\r\n    };\r\n    //\r\n    this.server_data.get_player_notice((response: any) => {\r\n      if (response.ResultCode === 0) {\r\n        console.log(\"Get notification data successfully\"); // 获取通知数据成功\r\n        if (response.data) {\r\n          for (const key in response.data) {\r\n            this.server_data.server_notice_data[key] = response.data[key];\r\n            if (this.main_data.server_notice_data) {\r\n              if (this.server_data.server_notice_data[key] > this.main_data.server_notice_data[key]) {\r\n                this.main_data.server_notice_data[key] = this.server_data.server_notice_data[key];\r\n                this.event_emitter.emit(key + \"_change\");\r\n              }\r\n            }\r\n          }\r\n          this.main_data.async_write_data();\r\n        }\r\n        if (callback) callback();\r\n      }\r\n    }, params);\r\n  } // end: get_player_notice\r\n\r\n  // @, type!!!\r\n  public get_player_fight_log_data(opType: string, callback: () => void): void {\r\n    const params: request = {\r\n      uid: this.server_data.uid,\r\n      token: this.server_data.token,\r\n      op_type: opType\r\n    };\r\n    //\r\n    this.server_data.get_player_fight_data((response: any) => {\r\n      if (!response.data || response.ResultCode !== 0) return;\r\n      try {\r\n        this.server_data.mail_log_data_array = response.data;\r\n        if (opType === \"1\") {\r\n          gm.data.mail_temp_data.mail_defense_log_data_array = [];\r\n        } else {\r\n          gm.data.mail_temp_data.mail_attack_log_data_array = [];\r\n        }\r\n        //\r\n        for (let i = this.server_data.mail_log_data_array.length - 1; i >= 0; i--) {\r\n          const logData = this.server_data.mail_log_data_array[i];\r\n          const mailLogItem = new MailLogItemData();\r\n          mailLogItem.replay_id = logData.replay_id;\r\n          mailLogItem.uid = logData.uid;\r\n          mailLogItem.star = logData.star;\r\n          mailLogItem.target_star = logData.target_star;\r\n          mailLogItem.change_star = logData.change_star;\r\n          mailLogItem.target_change_star = logData.target_change_star;\r\n          mailLogItem.op_type = opType;\r\n          mailLogItem.target_uid = logData.target_uid;\r\n          mailLogItem.target_nickname = logData.target_nickname;\r\n          mailLogItem.op_result = logData.op_result;\r\n          mailLogItem.op_reward = logData.op_reward;\r\n          mailLogItem.op_loss_reward = logData.op_loss_reward;\r\n          mailLogItem.is_deduct_loss_reward = logData.is_deduct_loss_reward;\r\n          mailLogItem.op_battle = logData.op_battle;\r\n          mailLogItem.target_op_battle = logData.target_op_battle;\r\n          //\r\n          if (opType === \"1\") {\r\n            gm.data.mail_temp_data.mail_defense_log_data_array.push(mailLogItem);\r\n          } else {\r\n            gm.data.mail_temp_data.mail_attack_log_data_array.push(mailLogItem);\r\n          }\r\n        }\r\n        if (callback) callback();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }, params);\r\n  } // end: get_player_fight_log_data\r\n\r\n  // @, type!!!\r\n  public get_player_email_data(callback: () => void): void {\r\n    const params: request = {\r\n      uid: this.server_data.uid,\r\n      token: this.server_data.token\r\n    };\r\n    //\r\n    this.server_data.get_player_email_data((response: any) => {\r\n      if (!response.data || response.ResultCode !== 0) return;\r\n      try {\r\n        this.server_data.mail_inbox_data_array = response.data;\r\n        gm.data.mail_temp_data.mail_inbox_data_array = [];\r\n        for (let i = this.server_data.mail_inbox_data_array.length - 1; i >= 0; i--) {\r\n          const inboxData = this.server_data.mail_inbox_data_array[i];\r\n          const mailInboxItem = new MailInboxItemData();\r\n          mailInboxItem.mail_id = inboxData.mail_id;\r\n          mailInboxItem.mail_type = inboxData.mail_type;\r\n          mailInboxItem.mail_sender = inboxData.mail_sender;\r\n          mailInboxItem.mail_title = inboxData.mail_title;\r\n          mailInboxItem.mail_text = inboxData.mail_text;\r\n          mailInboxItem.reward = inboxData.reward;\r\n          mailInboxItem.op_status = inboxData.op_status;\r\n          mailInboxItem.reward_status = inboxData.reward_status;\r\n          mailInboxItem.send_time = inboxData.send_time;\r\n          mailInboxItem.reward_array = [];\r\n          //\r\n          if (mailInboxItem.mail_type === 1) {\r\n            const rank = mailInboxItem.reward.rank;\r\n            const level = gm.data.ladder_temp_data.convert_rank_to_lv(rank);\r\n            const configData = gm.config.get_row_data(\"LadderRewardConfigData\", level.toString()) as LadderRewardConfig;\r\n            if (configData) {\r\n              mailInboxItem.reward_array = configData.reward_array;\r\n            }\r\n          } else if (mailInboxItem.mail_type === 2) {\r\n            const level = gm.data.ladder_temp_data.convert_building_rank_to_lv(mailInboxItem.reward.rank);\r\n            const configData = gm.config.get_row_data(\"LadderBuildingConfigData\", level.toString()) as LadderBuildding;\r\n            if (configData) {\r\n              mailInboxItem.reward_array = configData.reward_array;\r\n            }\r\n          }\r\n          gm.data.mail_temp_data.mail_inbox_data_array.push(mailInboxItem);\r\n        }\r\n        if (callback) callback();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }, params);\r\n  } // end: get_player_email_data\r\n\r\n  // @\r\n  public get_rob_record(targetUid: string, callback?: () => void): void {\r\n    const params: request = {\r\n      uid: gm.data.server_data.uid,\r\n      token: gm.data.server_data.token,\r\n      target_uid: targetUid\r\n    };\r\n    //\r\n    this.server_data.get_rob_record((response: any) => {\r\n      if (response.ResultCode === 0) {\r\n        if (callback && response.data && response.data.left_nums > 0) callback();\r\n      } else if (response.ResultCode === -1) {\r\n        // 该玩家今日被攻击次数已经达到上限，不能复仇\r\n        gm.ui.show_notice(\"Đã đạt giới hạn tấn công người này và không thể trả đũa.\");\r\n      }\r\n    }, params);\r\n  } // end: get_rob_record\r\n\r\n  // @ (not use)\r\n  /* public test_score(score: number): void {\r\n    const buildData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n    if (!buildData || buildData.buildLvl < 1) return;\r\n    gm.data.ladder_temp_data.total_star = score;\r\n    const previousScore = gm.data.ladder_temp_data.total_star;\r\n    gm.data.update_player_data_request(() => {\r\n      gm.data.get_player_score_data_request(() => {\r\n        console.log(\"1.update before:\" + previousScore + \" update after:\" + gm.data.ladder_temp_data.total_star);\r\n        gm.data.update_player_score_data_request(previousScore, () => {\r\n          gm.data.get_player_score_data_request(() => {\r\n            console.log(\"2.update before:\" + previousScore + \" update after:\" + gm.data.ladder_temp_data.total_star);\r\n          });\r\n        });\r\n      });\r\n    });\r\n  } // end: test_score */\r\n\r\n  // @ (not use)\r\n  /* public test_loss_reward(): void {\r\n    const data = {\r\n      op_battle: [] as interDataOpBattle[],\r\n      op_loss_reward: [] as interOpLossReward[]\r\n    };\r\n    //\r\n    for (let i = 0; i < data.op_battle.length; i++) {\r\n      const battle = data.op_battle[i];\r\n      if (battle.hp <= 0) {\r\n        gm.data.mapCell_data.delete_hero(battle.unique_id, battle.id);\r\n      }\r\n    }\r\n    //\r\n    for (let i = 0; i < data.op_loss_reward.length; i++) {\r\n      const lossReward = data.op_loss_reward[i];\r\n      if (lossReward.id > 0 && lossReward.num > 0) {\r\n        gm.data.mapCell_data.delCellItem(lossReward.id, lossReward.num);\r\n      }\r\n    }\r\n  } // end: test_loss_reward */\r\n}\r\n"]}
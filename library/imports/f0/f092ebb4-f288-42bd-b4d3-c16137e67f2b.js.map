{"version":3,"sources":["assets\\start-scene\\scripts\\GetReel.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM;AACN,2CAA0C;AAC1C,yCAA4C;AAC5C,6CAAmC;AACnC,6CAAwC;AAElC,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAA6B,2BAAU;IAAvC;QAAA,qEAsDC;QApDW,eAAS,GAAwB,IAAI,CAAC;QAGtC,eAAS,GAAmB,IAAI,CAAC;QAEjC,uBAAiB,GAAY,IAAI,CAAC;;IA+C9C,CAAC;IA7Ca,0BAAQ,GAAlB;QACI,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,gBAAE,CAAC,EAAE,CAAC,eAAe,CAAC,gBAAE,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAChF,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAES,2BAAS,GAAnB,cAA8B,CAAC;IAEvB,kCAAgB,GAAxB;;QACI,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAA,IAAI,CAAC,SAAS,0CAAE,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE;QAClF,IAAM,YAAY,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpD,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC;QAC3B,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;QACvB,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;QACvB,IAAI,QAAQ,GAAY,CAAC,CAAC,YAAY,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;QACtD,IAAM,SAAS,GAAG,gBAAE,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,yBAAa,CAAC,aAAa,CAAC,CAAC;QAEvF,IAAI,SAAS,EAAE;YACX,IAAM,QAAQ,GAAG,gBAAE,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;YACxF,IAAI,QAAQ,EAAE;gBACV,IAAM,YAAY,SAAG,QAAQ,CAAC,YAAY,CAAC,qBAAW,CAAC,0CAAE,YAAY,CAAC;gBACtE,IAAI,YAAY,EAAE;oBACd,IAAI,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAClE,aAAa,GAAG,gBAAE,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;oBAC/E,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;oBAC7C,gBAAE,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;oBACzD,QAAQ,GAAG,IAAI,CAAC;oBAChB,IAAI,kBAAkB,GAAG,YAAY,CAAC,qBAAqB,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAC1E,kBAAkB,GAAG,gBAAE,CAAC,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;oBACzF,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC;yBACjB,QAAQ,CAAC,CAAC,EAAE,aAAa,EAAE,EAAE,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC;yBACpG,IAAI,CAAC;wBACF,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,OAAO,GAAG;wBACxB,gBAAE,CAAC,EAAE,CAAC,iBAAiB,CAAC,gBAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC1C,IAAI,CAAC,iBAAiB,CAAC;oBAC3B,CAAC,CAAC;yBACD,KAAK,EAAE,CAAC;iBAChB;aACJ;SACJ;QACD,IAAI,CAAC,QAAQ,EAAE;YACX,gBAAE,CAAC,EAAE,CAAC,iBAAiB,CAAC,gBAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAC7C;IACL,CAAC;IAnDD;QADC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC;8CACuB;IAG9C;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;8CACuB;IALhC,OAAO;QADnB,OAAO;OACK,OAAO,CAsDnB;IAAD,cAAC;CAtDD,AAsDC,CAtD4B,uBAAU,GAsDtC;AAtDY,0BAAO","file":"","sourceRoot":"/","sourcesContent":["// +-+\r\nimport { GameModule } from './GameModule';\r\nimport { BuildTypeEnum } from './Constants';\r\nimport { gm } from './GameManager';\r\nimport MainMapItem from './MainMapItem';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class GetReel extends GameModule {\r\n    @property(cc.Animation)\r\n    private reel_anim: cc.Animation | null = null;\r\n\r\n    @property(cc.Node)\r\n    private reel_node: cc.Node | null = null;\r\n\r\n    private isShowBarrackList: boolean = true;\r\n\r\n    protected onEnable(): void {\r\n        this.isShowBarrackList = !!gm.ui.get_module_args(gm.const.GetReel.key);\r\n        this.reel_anim.on(cc.Animation.EventType.FINISHED, this.on_anim_finished, this);\r\n        this.reel_anim.play();\r\n    }\r\n\r\n    protected onDisable(): void { }\r\n\r\n    private on_anim_finished(): void {\r\n        const self = this;\r\n        this.reel_anim?.off(cc.Animation.EventType.FINISHED, this.on_anim_finished, this);\r\n        const reelInstance = cc.instantiate(this.reel_node);\r\n        reelInstance.active = true;\r\n        reelInstance.scale = 1;\r\n        reelInstance.angle = 0;\r\n        let isHidden: boolean = !(reelInstance.opacity = 255);\r\n        const buildData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.BARRACKS_TYPE);\r\n\r\n        if (buildData) {\r\n            const mapChild = gm.ui.mapMainUI.mapContent.getChildByName(buildData.cellID.toString());\r\n            if (mapChild) {\r\n                const mapBuildNode = mapChild.getComponent(MainMapItem)?.mapBuildNode;\r\n                if (mapBuildNode) {\r\n                    let worldPosition = this.node.convertToWorldSpaceAR(cc.Vec2.ZERO);\r\n                    worldPosition = gm.ui.mapMainUI.mapContent.convertToNodeSpaceAR(worldPosition);\r\n                    reelInstance.position = cc.v3(worldPosition);\r\n                    gm.ui.mapMainUI.mapContent.addChild(reelInstance, 10000);\r\n                    isHidden = true;\r\n                    let buildWorldPosition = mapBuildNode.convertToWorldSpaceAR(cc.Vec2.ZERO);\r\n                    buildWorldPosition = gm.ui.mapMainUI.mapContent.convertToNodeSpaceAR(buildWorldPosition);\r\n                    cc.tween(reelInstance)\r\n                        .bezierTo(1, worldPosition, cc.v2(worldPosition.x, worldPosition.y + 100), cc.v2(buildWorldPosition))\r\n                        .call(() => {\r\n                            reelInstance?.destroy();\r\n                            gm.ui.async_hide_module(gm.const.GetReel);\r\n                            self.isShowBarrackList;\r\n                        })\r\n                        .start();\r\n                }\r\n            }\r\n        }\r\n        if (!isHidden) {\r\n            gm.ui.async_hide_module(gm.const.GetReel);\r\n        }\r\n    }\r\n}"]}
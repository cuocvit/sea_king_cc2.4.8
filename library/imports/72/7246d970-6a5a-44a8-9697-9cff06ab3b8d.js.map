{"version":3,"sources":["assets\\ladder\\scripts\\LadderRankRewardItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+DAA8D;AAC9D,uEAAsE;AACtE,iEAAiE;AACjE,qEAA2D;AAGrD,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAmC,wCAAY;IAA/C;QAAA,qEA2CC;QAzCW,cAAQ,GAAqB,IAAI,CAAC;QAGlC,cAAQ,GAAoB,IAAI,CAAC;QAGjC,iBAAW,GAAoB,IAAI,CAAC;;IAmChD,CAAC;IAjCG,sBAAW,sCAAI;aAAf;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAgB,KAA+B;YAC3C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;;;OALA;IAOM,0CAAW,GAAlB;QACI,gBAAE,CAAC,IAAI,CAAC,WAAW,CAAC;QACpB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YAClE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAClC,CAAC,CAAC,KAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAE,sBAAU,CAAC,MAAM,EAAE,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACrG;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;SACtE;QACD,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAElD,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACjE,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAI,IAAI,EAAE;gBACN,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;aACvB;SACJ;IACL,CAAC;IAEM,oCAAK,GAAZ;QACI,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;IAxCD;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;0DACsB;IAG1C;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;0DACsB;IAGzC;QADC,QAAQ,CAAC,mBAAQ,CAAC;6DACyB;IAR1C,oBAAoB;QADzB,OAAO;OACF,oBAAoB,CA2CzB;IAAD,2BAAC;CA3CD,AA2CC,CA3CkC,2BAAY,GA2C9C","file":"","sourceRoot":"/","sourcesContent":["import { ListView } from '../../start-scene/scripts/ListView';\r\nimport { ListViewItem } from '../../start-scene/scripts/ListViewItem';\r\nimport { BundleName } from '../../start-scene/scripts/Constants';\r\nimport { gm } from '../../start-scene/scripts/GameManager';\r\nimport { LadderRankRewardItemData } from '../../start-scene/scripts/LadderTempData';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass LadderRankRewardItem extends ListViewItem {\r\n    @property(cc.Sprite)\r\n    private rank_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    private rank_lbl: cc.Label | null = null;\r\n\r\n    @property(ListView)\r\n    private reward_list: ListView | null = null;\r\n\r\n    public get data(): LadderRankRewardItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: LadderRankRewardItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    public update_view(): void {\r\n        gm.data.ladder_data;\r\n        if (this._data.rank_a == this._data.rank_b && 1 == this._data.rank_a) {\r\n            this.rank_spr.node.active = true;\r\n            this.rank_lbl.node.active = false;\r\n            c.Utils.async_set_sprite_frame(this.rank_spr, BundleName.LADDER, \"res/rank_\" + this._data.rank_a);\r\n        } else {\r\n            this.rank_spr.node.active = false;\r\n            this.rank_lbl.node.active = true;\r\n            this.rank_lbl.string = this._data.rank_a + \"-\" + this._data.rank_b;\r\n        }\r\n        this.reward_list.setData(this._data.reward_array);\r\n\r\n        for (let index = 0; index < this._data.reward_array.length; index++) {\r\n            const item = this.reward_list.getItem(index);\r\n            if (item) {\r\n                item.select = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.reward_list.reset();\r\n    }\r\n}"]}
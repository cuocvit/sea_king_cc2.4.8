{"version":3,"sources":["assets\\fight\\scripts\\FightMapItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uEAAsE;AACtE,yEAAqF;AACrF,qEAA2D;AAC3D,6DAA4D;AAC5D,yDAAwD;AACxD,+CAAgE;AAChE,iDAAgD;AAChD,iDAAgD;AAChD,iEAAiE;AACjE,2EAAiF;AACjF,yDAAwD;AACxD,iDAAgD;AAE1C,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAkC,gCAAY;IAA9C;QAAA,qEAuSC;QArSU,eAAS,GAAY,IAAI,CAAC;QAG1B,cAAQ,GAAc,IAAI,CAAC;QAG1B,iBAAW,GAAY,IAAI,CAAC;;IA+RxC,CAAC;IA1RG,sBAAI,8BAAI;aAAR;YACI,OAAO,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAS,KAAuB;YAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;YAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;QACvB,CAAC;;;OANA;IAQS,+BAAQ,GAAlB;QACI,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;IAES,gCAAS,GAAnB;QACI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IACrF,CAAC;IAEM,kCAAW,GAAlB;QAAA,iBA+BC;QA9BG,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,QAAQ,CAAC,QAAQ,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;YACtE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;SAC7C;QACD,aAAK,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAE,sBAAU,CAAC,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QAC9F,IAAM,SAAS,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACrD,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,CAAC;QAE7M,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,wBAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,wBAAQ,CAAC,MAAM,EAAE;YACjF,IAAI,CAAC,SAAS,EAAE;gBACZ,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,UAAU,GAAG,SAAS,EAAE,2BAAY,EAAE,UAAC,YAAY;oBACnF,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;wBACtC,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;qBACzC;yBAAM;wBACH,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;qBAClC;gBACL,CAAC,CAAC,CAAC;aACN;SACJ;aAAM,IAAI,SAAS,EAAE;YAClB,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;SAC1B;QAED,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QAC5C,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,EAAE,CAAC;IACvB,CAAC;IAEO,wCAAiB,GAAzB;QAAA,iBA0BC;QAzBG,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,IAAI,CAAC,EAAE;YAClC,IAAM,gBAAc,GAAG,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;YACnF,IAAI,gBAAc,EAAE;gBAChB,IAAM,cAAc,GAAG,QAAQ,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;gBACnF,IAAI,cAAc,EAAE;oBAChB,cAAc,CAAC,IAAI,GAAG,gBAAc,CAAC;iBACxC;qBAAM;oBACH,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,+BAA+B,EAAE,yCAAmB,EAAE,UAAC,IAAI;wBAC3F,IAAI,QAAQ,CAAC,qBAAqB,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE;4BAC7D,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1B;6BAAM;4BACH,IAAM,KAAK,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,gBAAc,CAAC,UAAU,EAAE,sCAAqB,CAAC,UAAU,CAAC,CAAC;4BAC1H,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,yBAAyB,CAAC,gBAAc,CAAC,aAAa,CAAC,CAAC;4BACtF,IAAI,CAAC,IAAI,GAAG,gBAAc,CAAC;4BAC3B,IAAI,QAAQ,CAAC,QAAQ,EAAE;gCACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,8CAA8C,EAAE,gBAAc,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;6BACtH;4BACD,QAAQ,CAAC,qBAAqB,CAAC,KAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC;yBACtE;oBACL,CAAC,CAAC,CAAC;iBACN;aACJ;SACJ;IACL,CAAC;IAEO,sCAAe,GAAvB;QAAA,iBA0BC;QAzBG,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,EAAE;YAChC,IAAM,cAAY,GAAG,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAC7E,IAAI,cAAY,EAAE;gBACd,IAAM,YAAY,GAAG,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAC7E,IAAI,YAAY,EAAE;oBACd,YAAY,CAAC,IAAI,GAAG,cAAY,CAAC;iBACpC;qBAAM;oBACH,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,6BAA6B,EAAE,qCAAiB,EAAE,UAAC,IAAI;wBACvF,IAAI,QAAQ,CAAC,mBAAmB,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;4BACzD,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1B;6BAAM;4BACH,IAAM,KAAK,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,cAAY,CAAC,UAAU,EAAE,sCAAqB,CAAC,QAAQ,CAAC,CAAC;4BACtH,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,yBAAyB,CAAC,cAAY,CAAC,aAAa,CAAC,CAAC;4BACpF,IAAI,CAAC,IAAI,GAAG,cAAY,CAAC;4BACzB,IAAI,QAAQ,CAAC,QAAQ,EAAE;gCACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,4CAA4C,EAAE,cAAY,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;6BAClH;4BACD,QAAQ,CAAC,mBAAmB,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;yBAClE;oBACL,CAAC,CAAC,CAAC;iBACN;aACJ;SACJ;IACL,CAAC;IAEO,kCAAW,GAAnB;QAAA,iBA0BC;QAzBG,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE;YAC5B,IAAM,UAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,UAAQ,IAAI,UAAQ,CAAC,EAAE,GAAG,CAAC,EAAE;gBAC7B,IAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACjE,IAAI,CAAC,QAAQ,EAAE;oBACX,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,yBAAyB,EAAE,6BAAa,EAAE,UAAC,IAAI;wBAC/E,IAAI,QAAQ,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;4BACjD,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1B;6BAAM;4BACH,IAAM,KAAK,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,UAAQ,CAAC,UAAU,EAAE,sCAAqB,CAAC,QAAQ,CAAC,CAAC;4BAClH,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,yBAAyB,CAAC,UAAQ,CAAC,aAAa,CAAC,CAAC;4BAChF,IAAI,CAAC,IAAI,GAAG,UAAQ,CAAC;4BACrB,IAAI,QAAQ,CAAC,QAAQ,EAAE;gCACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,wCAAwC,EAAE,UAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;6BAC1G;4BACD,QAAQ,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;yBAC1D;oBACL,CAAC,CAAC,CAAC;iBACN;qBAAM;oBACH,QAAQ,CAAC,IAAI,GAAG,UAAQ,CAAC;iBAC5B;aACJ;SACJ;IACL,CAAC;IAEO,0CAAmB,GAA3B;QACI,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,MAAM,GAAG,CAAC,EAAE;oCACvC,CAAC;gBACN,IAAM,KAAK,GAAG,OAAK,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;gBACrD,IAAM,QAAQ,GAAG,QAAQ,CAAC,uBAAuB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;gBAC5E,IAAI,QAAQ,EAAE;oBACV,QAAQ,CAAC,UAAU,GAAG,OAAK,KAAK,CAAC,OAAO,CAAC;oBACzC,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,OAAK,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtD,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,OAAK,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;oBACtD,IAAM,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;oBACvE,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE;wBAC9B,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,yBAAyB,EAAE,6BAAa,EAAE,UAAC,IAAI;4BAC/E,IAAI,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,EAAE;gCACvD,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BAC1B;iCAAM;gCACH,IAAM,KAAK,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,EAAE,sCAAqB,CAAC,IAAI,CAAC,CAAC;gCAC9G,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;gCAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,yBAAyB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gCAChF,IAAI,QAAQ,CAAC,QAAQ,EAAE;oCACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,wCAAwC,EAAE,QAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;iCAC1G;gCACD,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gCACrB,QAAQ,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC;6BAChE;wBACL,CAAC,CAAC,CAAC;qBACN;yBAAM,IAAI,QAAQ,EAAE;wBACjB,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;qBAC5B;iBACJ;;;YA1BL,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,MAAM,EAAE,CAAC,EAAE;wBAA1D,CAAC;aA2BT;SACJ;IACL,CAAC;IAEO,kCAAW,GAAnB;QACI,IAAM,aAAa,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QAE9C,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;oCAC/B,SAAS;gBACd,IAAM,aAAa,GAAG,SAAS,CAAC,UAAU,CAAC;gBAC3C,IAAM,QAAQ,GAAG,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;gBAE9D,QAAQ,CAAC,UAAU,GAAG,OAAK,KAAK,CAAC,OAAO,CAAC;gBACzC,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,OAAK,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;gBACtD,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,OAAK,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;gBAEtD,IAAI,QAAQ,GAAG,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;gBAE5D,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE;oBAC9B,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,yBAAyB,EAAE,6BAAa,EAAE,UAAC,UAAU;wBACrF,QAAQ,GAAG,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;wBAExD,IAAI,QAAQ,EAAE;4BACV,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;yBAChC;6BAAM;4BACH,IAAM,gBAAgB,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,QAAQ,CAAC,UAAU,EAAE,sCAAqB,CAAC,IAAI,CAAC,CAAC;4BACzH,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;4BAEjE,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,yBAAyB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;4BAE3F,IAAI,aAAa,CAAC,QAAQ,EAAE;gCACxB,UAAU,CAAC,IAAI,CAAC,IAAI,GAAG,+BAA6B,QAAQ,CAAC,UAAU,gBAAW,gBAAkB,CAAC;6BACxG;4BAED,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;4BAC3B,aAAa,CAAC,eAAe,CAAC,aAAa,CAAC,GAAG,UAAU,CAAC;yBAC7D;oBACL,CAAC,CAAC,CAAC;iBACN;qBAAM,IAAI,QAAQ,EAAE;oBACjB,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;iBAC5B;;;YAhCL,KAAsB,UAA2B,EAA3B,KAAA,IAAI,CAAC,KAAK,CAAC,gBAAgB,EAA3B,cAA2B,EAA3B,IAA2B;gBAA5C,IAAI,SAAS,SAAA;wBAAT,SAAS;aAiCjB;SACJ;IACL,CAAC;IAEO,kCAAW,GAAnB;QAAA,iBA0BC;QAzBG,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE;YAC5B,IAAM,UAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,UAAQ,EAAE;gBACV,IAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBACjE,IAAI,QAAQ,EAAE;oBACV,QAAQ,CAAC,IAAI,GAAG,UAAQ,CAAC;iBAC5B;qBAAM;oBACH,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,yBAAyB,EAAE,6BAAa,EAAE,UAAC,IAAI;wBAC/E,IAAI,QAAQ,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;4BACjD,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;yBAC1B;6BAAM;4BACH,IAAM,KAAK,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,UAAQ,CAAC,UAAU,EAAE,sCAAqB,CAAC,IAAI,CAAC,CAAC;4BAC9G,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;4BAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,yBAAyB,CAAC,UAAQ,CAAC,aAAa,CAAC,CAAC;4BAChF,IAAI,CAAC,IAAI,GAAG,UAAQ,CAAC;4BACrB,IAAI,QAAQ,CAAC,QAAQ,EAAE;gCACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,wCAAwC,EAAE,UAAQ,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;6BAC1G;4BACD,QAAQ,CAAC,eAAe,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;yBAC1D;oBACL,CAAC,CAAC,CAAC;iBACN;aACJ;SACJ;IACL,CAAC;IAEM,mCAAY,GAAnB;QACI,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE;YAC5B,IAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YACjE,IAAI,QAAQ,EAAE;gBACV,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAC7C,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;gBAC3B,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;aACjD;SACJ;IACL,CAAC;IAEM,4BAAK,GAAZ;QACI,iBAAM,KAAK,WAAE,CAAC;QACd,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,4BAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;QACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,EAAE;YAC9C,IAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,2BAAY,CAAC,CAAC;YAC/D,IAAI,KAAK,EAAE;gBACP,gBAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC3B;SACJ;IACL,CAAC;IAEO,2CAAoB,GAA5B;QACI,IAAM,QAAQ,GAAG,gBAAE,CAAC,IAAI,CAAC,eAAe,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QACzH,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,cAAc,IAAI,CAAC,CAAC,IAAI,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,eAAe,CAAC,MAAM,EAAE;YACpL,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACjC;IACL,CAAC;IAEO,+BAAQ,GAAhB,UAAiB,QAA0B;QACvC,IAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QAC1E,IAAM,aAAa,GAAG,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;QAChF,gBAAE,CAAC,IAAI,CAAC,SAAS,CAAC,sBAAU,CAAC,KAAK,EAAE,wBAAwB,EAAE,2BAAY,EAAE,UAAC,IAAI;YAC7E,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;YACrB,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;YACnC,gBAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACP,CAAC;IApSD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;mDACe;IAGjC;QADC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;kDACc;IAGlC;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;qDACkB;IAR3B,YAAY;QADxB,OAAO;OACK,YAAY,CAuSxB;IAAD,mBAAC;CAvSD,AAuSC,CAvSiC,2BAAY,GAuS7C;AAvSY,oCAAY","file":"","sourceRoot":"/","sourcesContent":["import { NodePoolItem } from '../../start-scene/scripts/NodePoolItem';\r\nimport { EdgeEnum, FightMapItemData } from '../../start-scene/scripts/FightTempData';\r\nimport { gm } from '../../start-scene/scripts/GameManager';\r\nimport { FightDecorationItem } from './FightDecorationItem';\r\nimport { FightBuildingItem } from './FightBuildingItem';\r\nimport { FightNumItem, FightNumItemData } from './FightNumItem';\r\nimport { FightPropItem } from './FightPropItem';\r\nimport { FightWallItem } from './FightWallItem';\r\nimport { BundleName } from '../../start-scene/scripts/Constants';\r\nimport { FightDynamicNodeLayer } from '../../start-scene/scripts/FightConstants';\r\nimport { Utils } from '../../start-scene/scripts/Utils';\r\nimport { FightHeroItem } from './FightHeroItem';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class FightMapItem extends NodePoolItem {\r\n    @property(cc.Node)\r\n    public land_node: cc.Node = null;\r\n\r\n    @property(cc.Sprite)\r\n    public land_spr: cc.Sprite = null;\r\n\r\n    @property(cc.Node)\r\n    private yellow_node: cc.Node = null;\r\n\r\n    private _data: FightMapItemData;\r\n    public model: number;\r\n\r\n    get data(): FightMapItemData {\r\n        return this._data;\r\n    }\r\n\r\n    set data(value: FightMapItemData) {\r\n        this._data = value;\r\n        this.land_spr.node.color = cc.Color.WHITE;\r\n        this.update_view();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.land_node.on(cc.Node.EventType.TOUCH_END, this.on_touch_end_handler, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.land_node.off(cc.Node.EventType.TOUCH_END, this.on_touch_end_handler, this);\r\n    }\r\n\r\n    public update_view(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (tempData.is_debug && !tempData.getWalkable(this._data.grid_position)) {\r\n            this.land_spr.node.color = cc.Color.BLACK;\r\n        }\r\n        Utils.async_set_sprite_frame(this.land_spr, BundleName.TEST, \"res/\" + this._data.land_img_id);\r\n        const waterName = \"water_\" + this._data.water_img_id;\r\n        const waterNode = this.node.getChildByName(waterName);\r\n        this.yellow_node.active = this._data.edge_flag > 0 && this._data.enter > 0 && this._data.is_obstruct <= 0 && this._data.building_index == -1 && tempData.goto_battle_count < tempData.hero_data_array.length;\r\n\r\n        if (this._data.edge_flag & EdgeEnum.RIGHT || this._data.edge_flag & EdgeEnum.BOTTOM) {\r\n            if (!waterNode) {\r\n                gm.pool.async_get(BundleName.FIGHT, \"prefabs/\" + waterName, NodePoolItem, (nodePoolItem) => {\r\n                    if (!this.node.getChildByName(waterName)) {\r\n                        this.node.addChild(nodePoolItem.node);\r\n                    } else {\r\n                        gm.pool.put(nodePoolItem.node);\r\n                    }\r\n                });\r\n            }\r\n        } else if (waterNode) {\r\n            gm.pool.put(waterNode);\r\n        }\r\n\r\n        this.land_node.y = this._data.land_y_offset;\r\n        this.update_decoration();\r\n        this.update_building();\r\n        this.update_wall();\r\n        this.update_hero();\r\n        this.update_defense_hero();\r\n        this.update_prop();\r\n    }\r\n\r\n    private update_decoration(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (this._data.decoration_index >= 0) {\r\n            const decorationData = tempData.decoration_data_array[this._data.decoration_index];\r\n            if (decorationData) {\r\n                const decorationItem = tempData.decoration_item_array[this._data.decoration_index];\r\n                if (decorationItem) {\r\n                    decorationItem.data = decorationData;\r\n                } else {\r\n                    gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_decoration_item\", FightDecorationItem, (item) => {\r\n                        if (tempData.decoration_item_array[this._data.decoration_index]) {\r\n                            gm.pool.put(item.node);\r\n                        } else {\r\n                            const layer = gm.data.fight_temp_data.get_dynamic_node_layer(decorationData.grid_index, FightDynamicNodeLayer.DECORATION);\r\n                            gm.ui.fight.map_node.addChild(item.node, layer);\r\n                            item.node.position = tempData.grid_position_to_position(decorationData.grid_position);\r\n                            item.data = decorationData;\r\n                            if (tempData.is_debug) {\r\n                                item.node.name = cc.js.formatStr(\"fight_decoration_item_gridIndex@%d_zIndex@%d\", decorationData.grid_index, layer);\r\n                            }\r\n                            tempData.decoration_item_array[this._data.decoration_index] = item;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private update_building(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (this._data.building_index > -1) {\r\n            const buildingData = tempData.building_data_array[this._data.building_index];\r\n            if (buildingData) {\r\n                const buildingItem = tempData.building_item_array[this._data.building_index];\r\n                if (buildingItem) {\r\n                    buildingItem.data = buildingData;\r\n                } else {\r\n                    gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_building_item\", FightBuildingItem, (item) => {\r\n                        if (tempData.building_item_array[this._data.building_index]) {\r\n                            gm.pool.put(item.node);\r\n                        } else {\r\n                            const layer = gm.data.fight_temp_data.get_dynamic_node_layer(buildingData.grid_index, FightDynamicNodeLayer.BUILDING);\r\n                            gm.ui.fight.map_node.addChild(item.node, layer);\r\n                            item.node.position = tempData.grid_position_to_position(buildingData.grid_position);\r\n                            item.data = buildingData;\r\n                            if (tempData.is_debug) {\r\n                                item.node.name = cc.js.formatStr(\"fight_building_item_gridIndex@%d_zIndex@%d\", buildingData.grid_index, layer);\r\n                            }\r\n                            tempData.building_item_array[this._data.building_index] = item;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private update_wall(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (this._data.wall_index > -1) {\r\n            const wallData = tempData.wall_data_array[this._data.wall_index];\r\n            if (wallData && wallData.hp > 0) {\r\n                const wallItem = tempData.wall_item_array[this._data.wall_index];\r\n                if (!wallItem) {\r\n                    gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_wall_item\", FightWallItem, (item) => {\r\n                        if (tempData.wall_item_array[this._data.wall_index]) {\r\n                            gm.pool.put(item.node);\r\n                        } else {\r\n                            const layer = gm.data.fight_temp_data.get_dynamic_node_layer(wallData.grid_index, FightDynamicNodeLayer.BUILDING);\r\n                            gm.ui.fight.map_node.addChild(item.node, layer);\r\n                            item.node.position = tempData.grid_position_to_position(wallData.grid_position);\r\n                            item.data = wallData;\r\n                            if (tempData.is_debug) {\r\n                                item.node.name = cc.js.formatStr(\"fight_wall_item_gridIndex@%d_zIndex@%d\", wallData.grid_index, layer);\r\n                            }\r\n                            tempData.wall_item_array[this._data.wall_index] = item;\r\n                        }\r\n                    });\r\n                } else {\r\n                    wallItem.data = wallData;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private update_defense_hero(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (this._data.defense_hero_index_array.length > 0) {\r\n            for (let i = 0; i < this._data.defense_hero_index_array.length; i++) {\r\n                const index = this._data.defense_hero_index_array[i];\r\n                const heroData = tempData.defense_hero_data_array[index.defense_hero_index];\r\n                if (heroData) {\r\n                    heroData.grid_index = this._data.cell_id;\r\n                    heroData.grid_position.x = this._data.grid_position.x;\r\n                    heroData.grid_position.y = this._data.grid_position.y;\r\n                    const heroItem = tempData.defense_hero_array[index.defense_hero_index];\r\n                    if (!heroItem && heroData.hp > 0) {\r\n                        gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_hero_item\", FightHeroItem, (item) => {\r\n                            if (tempData.defense_hero_array[index.defense_hero_index]) {\r\n                                gm.pool.put(item.node);\r\n                            } else {\r\n                                const layer = gm.data.fight_temp_data.get_dynamic_node_layer(heroData.grid_index, FightDynamicNodeLayer.MOVE);\r\n                                gm.ui.fight.map_node.addChild(item.node, layer);\r\n                                item.node.position = tempData.grid_position_to_position(heroData.grid_position);\r\n                                if (tempData.is_debug) {\r\n                                    item.node.name = cc.js.formatStr(\"fight_hero_item_gridIndex@%d_zIndex@%d\", heroData.grid_index, layer);\r\n                                }\r\n                                item.data = heroData;\r\n                                tempData.defense_hero_array[index.defense_hero_index] = item;\r\n                            }\r\n                        });\r\n                    } else if (heroItem) {\r\n                        heroItem.data = heroData;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private update_hero(): void {\r\n        const fightTempData = gm.data.fight_temp_data;\r\n\r\n        if (this._data.hero_index_array.length > 0) {\r\n            for (let heroIndex of this._data.hero_index_array) {\r\n                const heroDataIndex = heroIndex.hero_index;\r\n                const heroData = fightTempData.hero_data_array[heroDataIndex];\r\n\r\n                heroData.grid_index = this._data.cell_id;\r\n                heroData.grid_position.x = this._data.grid_position.x;\r\n                heroData.grid_position.y = this._data.grid_position.y;\r\n\r\n                let heroItem = fightTempData.hero_item_array[heroDataIndex];\r\n\r\n                if (!heroItem && heroData.hp > 0) {\r\n                    gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_hero_item\", FightHeroItem, (loadedItem) => {\r\n                        heroItem = fightTempData.hero_item_array[heroDataIndex];\r\n\r\n                        if (heroItem) {\r\n                            gm.pool.put(loadedItem.node);\r\n                        } else {\r\n                            const dynamicNodeLayer = gm.data.fight_temp_data.get_dynamic_node_layer(heroData.grid_index, FightDynamicNodeLayer.MOVE);\r\n                            gm.ui.fight.map_node.addChild(loadedItem.node, dynamicNodeLayer);\r\n\r\n                            loadedItem.node.position = fightTempData.grid_position_to_position(heroData.grid_position);\r\n\r\n                            if (fightTempData.is_debug) {\r\n                                loadedItem.node.name = `fight_hero_item_gridIndex@${heroData.grid_index}_zIndex@${dynamicNodeLayer}`;\r\n                            }\r\n\r\n                            loadedItem.data = heroData;\r\n                            fightTempData.hero_item_array[heroDataIndex] = loadedItem;\r\n                        }\r\n                    });\r\n                } else if (heroItem) {\r\n                    heroItem.data = heroData;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private update_prop(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (this._data.prop_index > -1) {\r\n            const propData = tempData.prop_data_array[this._data.prop_index];\r\n            if (propData) {\r\n                const propItem = tempData.prop_item_array[this._data.prop_index];\r\n                if (propItem) {\r\n                    propItem.data = propData;\r\n                } else {\r\n                    gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_prop_item\", FightPropItem, (item) => {\r\n                        if (tempData.prop_item_array[this._data.prop_index]) {\r\n                            gm.pool.put(item.node);\r\n                        } else {\r\n                            const layer = gm.data.fight_temp_data.get_dynamic_node_layer(propData.grid_index, FightDynamicNodeLayer.PROP);\r\n                            gm.ui.fight.map_node.addChild(item.node, layer);\r\n                            item.node.position = tempData.grid_position_to_position(propData.grid_position);\r\n                            item.data = propData;\r\n                            if (tempData.is_debug) {\r\n                                item.node.name = cc.js.formatStr(\"fight_prop_item_gridIndex@%d_zIndex@%d\", propData.grid_index, layer);\r\n                            }\r\n                            tempData.prop_item_array[this._data.prop_index] = item;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public pick_up_prop(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        if (this._data.prop_index > -1) {\r\n            const propItem = tempData.prop_item_array[this._data.prop_index];\r\n            if (propItem) {\r\n                tempData.pick_up_prop(this._data.prop_index);\r\n                this._data.prop_index = -1;\r\n                gm.ui.fight.fly_to_boat(propItem.node, false);\r\n            }\r\n        }\r\n    }\r\n\r\n    public unuse(): void {\r\n        super.unuse();\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.land_spr.spriteFrame = null;\r\n        for (let i = 0; i < this.node.childrenCount; i++) {\r\n            const child = this.node.children[i].getComponent(NodePoolItem);\r\n            if (child) {\r\n                gm.pool.put(child.node);\r\n            }\r\n        }\r\n    }\r\n\r\n    private on_touch_end_handler(): void {\r\n        const tempData = gm.data.fight_temp_data;\r\n        console.log(\"click cell index:%d x:%d y:%d\", this._data.cell_id, this._data.grid_position.x, this._data.grid_position.y);\r\n        if (this._data.edge_flag > 0 && this._data.enter > 0 && this._data.is_obstruct <= 0 && this._data.building_index == -1 && tempData.goto_battle_count < tempData.hero_data_array.length) {\r\n            gm.ui.fight.goto_battle(this);\r\n        }\r\n    }\r\n\r\n    private show_num(itemData: FightNumItemData): void {\r\n        const worldPosition = this.land_node.convertToWorldSpaceAR(cc.v3(0, 100));\r\n        const localPosition = gm.ui.fight.text_node.convertToNodeSpaceAR(worldPosition);\r\n        gm.pool.async_get(BundleName.FIGHT, \"prefabs/fight_num_item\", FightNumItem, (item) => {\r\n            item.data = itemData;\r\n            item.node.position = localPosition;\r\n            gm.ui.fight.text_node.addChild(item.node);\r\n        });\r\n    }\r\n}"]}
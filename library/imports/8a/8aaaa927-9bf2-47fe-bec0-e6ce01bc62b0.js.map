{"version":3,"sources":["assets\\start-scene\\scripts\\cycle.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["function decycle<T>(t: T, n?: (value: T) => T): any {\r\n    const r = new WeakMap<object, string>();\r\n    return function a(e: T, i: string): any {\r\n        let t: string | undefined;\r\n        let o: any;\r\n        e = n !== undefined ? n(e) : e;\r\n        if (typeof e !== \"object\" || e === null || e instanceof Boolean || e instanceof Date || e instanceof Number || e instanceof RegExp || e instanceof String) {\r\n            return e;\r\n        }\r\n        if ((t = r.get(e)) !== undefined) {\r\n            return { $ref: t };\r\n        }\r\n        r.set(e, i);\r\n        if (Array.isArray(e)) {\r\n            o = [];\r\n            e.forEach((t: T, e: number) => {\r\n                o[e] = a(t, `${i}[${e}]`);\r\n            });\r\n        } else {\r\n            o = {};\r\n            Object.keys(e).forEach((t: string) => {\r\n                o[t] = a(e[t], `${i}[${JSON.stringify(t)}]`);\r\n            });\r\n        }\r\n        return o;\r\n    }(t, \"$\");\r\n}\r\n\r\nfunction retrocycle(value: any): any {\r\n    const px = /^\\$(?:\\[(?:\\d+|\"(?:[^\\\\\"\\u0000-\\u001f]|\\\\(?:[\\\\\"\\/bfnrt]|u[0-9a-zA-Z]{4}))*\")\\])*$/;\r\n    return function rez(value: any): void {\r\n        if (value && typeof value === \"object\") {\r\n            if (Array.isArray(value)) {\r\n                value.forEach((element: any, i: number) => {\r\n                    let path: string | undefined;\r\n                    if (typeof element === \"object\" && element !== null) {\r\n                        path = element.$ref;\r\n                        if (typeof path === \"string\" && px.test(path)) {\r\n                            value[i] = eval(path);\r\n                        } else {\r\n                            rez(element);\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                Object.keys(value).forEach((name: string) => {\r\n                    const item = value[name];\r\n                    let path: string | undefined;\r\n                    if (typeof item === \"object\" && item !== null) {\r\n                        path = item.$ref;\r\n                        if (typeof path === \"string\" && px.test(path)) {\r\n                            value[name] = eval(path);\r\n                        } else {\r\n                            rez(item);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }(value);\r\n}"]}
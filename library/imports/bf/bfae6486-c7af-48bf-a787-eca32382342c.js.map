{"version":3,"sources":["assets\\start-scene\\scripts\\TurtleExchangeItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// *-*\r\nimport { BundleName, RewardIdEnum, PropTypeEnum } from './Constants';\r\nimport { gm } from './GameManager';\r\nimport { ListViewItem } from './ListViewItem';\r\nimport { Utils } from './Utils';\r\nimport { ReportData } from './NetUtils';\r\nimport { ItemConfig } from '../../common/configs/item';\r\nimport { TurtleExchangeItemData } from './TurtleExchangeData';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class TurtleExchangeItem extends ListViewItem {\r\n    @property(cc.SpriteFrame)\r\n    private exchange_light_sf: cc.SpriteFrame | null = null;\r\n\r\n    @property(cc.SpriteFrame)\r\n    private exchange_dark_sf: cc.SpriteFrame | null = null;\r\n\r\n    @property(cc.Node)\r\n    private bg_node: cc.Node | null = null;\r\n\r\n    @property(cc.Button)\r\n    private exchange_btn: cc.Button | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    private exchange_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    private prop_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    private prop_lbl: cc.Label | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    private exchange_prop_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Label)\r\n    private exchange_prop_lbl: cc.Label | null = null;\r\n\r\n    public _data: TurtleExchangeItemData;\r\n\r\n    public get data(): TurtleExchangeItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: TurtleExchangeItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    public update_view(): void {\r\n        const data = this._data;\r\n        this.bg_node.color = 0 < data.state ? gm.const.TURTLE_EXCHANGE_COLOR_LIGHT : gm.const.TURTLE_EXCHANGE_COLOR_DART;\r\n        this.exchange_btn.interactable = 0 < data.state;\r\n        this.exchange_spr.spriteFrame = 0 < data.state ? this.exchange_light_sf : this.exchange_dark_sf;\r\n        Utils.async_set_sprite_frame(this.prop_spr, BundleName.MAP, \"res/\" + t.prop_id);\r\n        Utils.async_set_sprite_frame(this.exchange_prop_spr, BundleName.MAP, \"res/\" + t.exchange_prop_id);\r\n        this.prop_lbl.string = data.prop_num + \"\";\r\n        this.exchange_prop_lbl.string = data.exchange_prop_num + \"\";\r\n    }\r\n\r\n    public reset(): void {\r\n        this.prop_spr.spriteFrame = null;\r\n    }\r\n\r\n    public editor_on_button_click_handler(event: cc.Event): void {\r\n        if (event.target == this.exchange_btn.node) {\r\n            const mapCellData = gm.data.mapCell_data;\r\n            const data = this._data;\r\n            const turtleExchangeData = gm.data.turtle_exchange_data;\r\n            if (turtleExchangeData.left_refresh_count <= 0) {\r\n                gm.ui.show_notice(\"Không đủ thời gian đổi thưởng, vui lòng mua thêm\");\r\n            } else {\r\n                if (mapCellData.getIsHaveSpeceCellID()) {\r\n                    if (0 < data.exchange_prop_id && 0 < data.exchange_prop_num) {\r\n                        if (data.exchange_prop_id == RewardIdEnum.GOLD_BARREL || data.exchange_prop_id == RewardIdEnum.SILVER_BARREL) {\r\n                            if (1 == data.exchange_prop_num) {\r\n                                const itemConfig = gm.config.get_row_data(\"ItemConfigData\", data.prop_id.toString()) as ItemConfig;\r\n                                if (itemConfig.type == PropTypeEnum.COIN_TYPE) {\r\n                                    if (data.exchange_prop_id == RewardIdEnum.GOLD_BARREL) {\r\n                                        ReportData.instance.report_once_point(10615);\r\n                                        ReportData.instance.report_point(10616);\r\n                                    } else if (data.exchange_prop_id == RewardIdEnum.SILVER_BARREL) {\r\n                                        ReportData.instance.report_once_point(10611);\r\n                                        ReportData.instance.report_point(10612);\r\n                                    }\r\n\r\n                                } else if (itemConfig.type == PropTypeEnum.DIAMONDS_TYPE) {\r\n                                    if (data.exchange_prop_id == RewardIdEnum.GOLD_BARREL) {\r\n                                        ReportData.instance.report_once_point(10617);\r\n                                        ReportData.instance.report_point(10618);\r\n                                    } else if (data.exchange_prop_id == RewardIdEnum.SILVER_BARREL) {\r\n                                        ReportData.instance.report_once_point(10613);\r\n                                        ReportData.instance.report_point(10614);\r\n                                    }\r\n                                }\r\n                                mapCellData.delCellItem(data.prop_id, data.prop_num);\r\n                                mapCellData.addBarrelInMap(data.exchange_prop_id);\r\n                                turtleExchangeData.left_refresh_count--;\r\n                                turtleExchangeData.async_write_data();\r\n                            }\r\n                        } else {\r\n                            cc.error(\"超出需求的奖励\");\r\n                        }\r\n                    } else {\r\n                        gm.ui.show_auto_merge_message();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}
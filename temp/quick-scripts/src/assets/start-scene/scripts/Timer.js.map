{"version":3,"sources":["assets\\start-scene\\scripts\\Timer.ts"],"names":[],"mappings":";;;;;;;AAGA,IAAI;AACJ;IAAA;QACY,cAAS,GAAW,CAAC,CAAC;QACtB,cAAS,GAAW,CAAC,CAAC;QACtB,eAAU,GAAW,CAAC,CAAC;QACvB,iBAAY,GAAW,CAAC,CAAC;QACzB,gBAAW,GAAY,KAAK,CAAC;IAgDzC,CAAC;IA5CG,sBAAW,6BAAU;QADrB,IAAI;aACJ;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAED,IAAI;IACG,qBAAK,GAAZ,UAAa,QAAuB,EAAE,QAAuB,EAAE,WAAuB;QAAhD,yBAAA,EAAA,eAAuB;QAAE,4BAAA,EAAA,eAAuB;QAClF,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QAClC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,EAAE,CAAC;IAChB,CAAC;IAED,IAAI;IACG,oBAAI,GAAX;QACI,IAAI,CAAC,IAAI,CAAC,WAAW;YAAE,OAAO;QAC9B,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACpB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;QACnC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,IAAI;IACI,oBAAI,GAAZ;QAAA,iBAaC;QAZG,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE;YACtF,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;gBACxB,IAAI,KAAI,CAAC,iBAAiB,EAAE;oBACxB,KAAI,CAAC,UAAU,EAAE,CAAC;oBAClB,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,UAAU,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;oBAC3D,KAAI,CAAC,IAAI,EAAE,CAAC;iBACf;YACL,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACtB;aAAM;YACH,IAAI,CAAC,IAAI,EAAE,CAAC;SACf;IACL,CAAC;IACL,YAAC;AAAD,CArDA,AAqDC,IAAA;AAEQ,sBAAK","file":"","sourceRoot":"/","sourcesContent":["// @\r\ntype TimerCallback = (cur_count: number, total_count: number) => void;\r\n\r\n// @\r\nclass Timer {\r\n    private _timer_id: number = 0;\r\n    private _interval: number = 0;\r\n    private _cur_count: number = 0;\r\n    private _total_count: number = 0;\r\n    private _is_running: boolean = false;\r\n    private _on_timer_handler?: TimerCallback;\r\n\r\n    // @\r\n    public get is_running(): boolean {\r\n        return this._is_running;\r\n    }\r\n\r\n    // @\r\n    public start(callback: TimerCallback, interval: number = 1000, total_count: number = 0): void {\r\n        this._on_timer_handler = callback;\r\n        this._interval = interval;\r\n        this._total_count = total_count;\r\n        this._cur_count = 0;\r\n        this._is_running = true;\r\n        this._on_timer_handler(this._cur_count, this._total_count);\r\n        this.next();\r\n    }\r\n\r\n    // @\r\n    public stop(): void {\r\n        if (!this._is_running) return;\r\n        if (this._timer_id > 0) {\r\n            clearTimeout(this._timer_id);\r\n            this._timer_id = 0;\r\n        }\r\n        this._interval = 0;\r\n        this._cur_count = 0;\r\n        this._total_count = 0;\r\n        this._on_timer_handler = undefined;\r\n        this._is_running = false;\r\n    }\r\n\r\n    // @\r\n    private next(): void {\r\n        if (this._is_running && (this._total_count === 0 || this._cur_count < this._total_count)) {\r\n            clearTimeout(this._timer_id);\r\n            this._timer_id = setTimeout(() => {\r\n                if (this._on_timer_handler) {\r\n                    this._cur_count++;\r\n                    this._on_timer_handler(this._cur_count, this._total_count);\r\n                    this.next();\r\n                }\r\n            }, this._interval);\r\n        } else {\r\n            this.stop();\r\n        }\r\n    }\r\n}\r\n\r\nexport { Timer };\r\n"]}
{"version":3,"sources":["assets\\start-scene\\scripts\\Loading.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// qg ??????\r\nimport { GameModule } from './GameModule';\r\nimport { BundleName } from './Constants';\r\nimport { NodePoolItem } from './NodePoolItem';\r\nimport { Utils } from './Utils';\r\nimport { gm } from './GameManager';\r\nimport { LoadingState } from \"./Launch\"\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass Loading extends GameModule {\r\n    @property(cc.Label)\r\n    private prompt_lbl: cc.Label | null = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    private bar_node: cc.ProgressBar | null = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    private bar_node_2: cc.ProgressBar | null = null;\r\n\r\n    @property(cc.Node)\r\n    private start_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private start_full_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private caves_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private reward_node: cc.Node | null = null;\r\n\r\n    @property(cc.Node)\r\n    private boat_node: cc.Node | null = null;\r\n\r\n    @property(cc.Animation)\r\n    private boat_anim: cc.Animation | null = null;\r\n\r\n    @property([cc.Node])\r\n    private hero_node_array: cc.Node[] = [];\r\n\r\n    @property(cc.Sprite)\r\n    private people_spr: cc.Sprite | null = null;\r\n\r\n    @property(cc.Sprite)\r\n    private people_text_spr: cc.Sprite | null = null;\r\n\r\n    private _low_speed: number = 20;\r\n    private _low_speed_2: number = 100;\r\n    private _total_len: number = 0;\r\n    private _total_len_2: number = 0;\r\n    private _high_speed: number = 500;\r\n    private _count: number = 0;\r\n    private _state: LoadingState;\r\n    private _last_state: LoadingState;\r\n\r\n    get state(): LoadingState {\r\n        return this._state;\r\n    }\r\n\r\n    set state(value: LoadingState) {\r\n        if (this._state != value) {\r\n            this._last_state = this._state;\r\n            this._state = value;\r\n            if (this._state !== LoadingState.COMPLETE) {\r\n                this.start_load();\r\n            } else if (this._state === LoadingState.COMPLETE) {\r\n                this.complete_load();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected update(deltaTime: number): void {\r\n        if (this._state == LoadingState.COMPLETE) {\r\n            this._total_len += deltaTime * this._high_speed;\r\n            this._total_len_2 += deltaTime * this._high_speed;\r\n            this.bar_node!.progress = Math.floor(this._total_len) / 100;\r\n            this.bar_node_2!.progress = this._total_len_2 % 100 / 100;\r\n            if (this._total_len >= 100) {\r\n                this.node.active = false;\r\n            }\r\n            if (cc.sys.platform == cc.sys.OPPO_GAME) {\r\n                qg.setLoadingProgress({ progress: this._total_len });\r\n            }\r\n        } else {\r\n            if (this._total_len < 90) {\r\n                this._total_len += deltaTime * this._low_speed;\r\n                this.bar_node!.progress = Math.floor(this._total_len) / 100;\r\n            }\r\n            this._total_len_2 += deltaTime * this._low_speed_2;\r\n            this.bar_node_2!.progress = this._total_len_2 % 100 / 100;\r\n        }\r\n    }\r\n\r\n    private start_load(): void {\r\n        this.node.active = true;\r\n        this.start_node!.active = this._state == LoadingState.START;\r\n        this.start_full_node!.active = this._state == LoadingState.START_FULL;\r\n        this.caves_node!.active = this._state == LoadingState.CAVES_FULL;\r\n        this.reward_node!.active = this._state == LoadingState.REWARD_FULL;\r\n        this.boat_node!.active = this._state == LoadingState.BOAT_IN || this._state == LoadingState.BOAT_OUT;\r\n\r\n        if (this._state == LoadingState.BOAT_IN) {\r\n            this.people_spr!.node.active = false;\r\n            this.people_text_spr!.node.active = false;\r\n        } else if (this._state == LoadingState.BOAT_OUT) {\r\n            const t: number = this._count % 2 + 1;\r\n            this.people_spr!.node.active = true;\r\n            this.people_text_spr!.node.active = true;\r\n            Utils.async_set_sprite_frame(this.people_spr!, BundleName.LOADING, `res/people_${t}`);\r\n            Utils.async_set_sprite_frame(this.people_text_spr!, BundleName.LOADING, `res/people_text_${t}`);\r\n            this._count++;\r\n        }\r\n\r\n        this._total_len = 0;\r\n        this._total_len_2 = 0;\r\n\r\n        if (this._state == LoadingState.BOAT_IN) {\r\n            this.boat_anim!.once(cc.Animation.EventType.FINISHED, () => {\r\n                this.boat_anim!.play(\"loding_ship_innormal\");\r\n            });\r\n            this.boat_anim!.play(\"loding_ship_inopen\");\r\n            const aliveHeroDataArray = gm.data.fight_temp_data.fight_result_data.alive_hero_data_array;\r\n            for (let i = 0; i < this.hero_node_array.length; i++) {\r\n                const heroData = aliveHeroDataArray[i];\r\n                const heroNode = this.hero_node_array[i];\r\n                this.load_hero_model(heroNode, heroData ? heroData.id : 0, i, aliveHeroDataArray.length);\r\n            }\r\n        } else if (this._state == LoadingState.BOAT_OUT) {\r\n            this.boat_anim!.once(cc.Animation.EventType.FINISHED, () => {\r\n                this.boat_anim!.play(\"loding_ship_outnormal\");\r\n            });\r\n            this.boat_anim!.play(\"loding_ship_outopen\");\r\n            const battleHeroArray = gm.data.fight_temp_data.battle_hero_array;\r\n            for (let i = 0; i < this.hero_node_array.length; i++) {\r\n                const heroData = battleHeroArray[i];\r\n                const heroNode = this.hero_node_array[i];\r\n                this.load_hero_model(heroNode, heroData ? heroData.itemID : 0, i, battleHeroArray.length);\r\n            }\r\n        }\r\n    }\r\n\r\n    private load_hero_model(heroNode: cc.Node, heroId: number, index: number, total: number): void {\r\n        if (heroId > 0) {\r\n            if (heroNode.childrenCount == 0) {\r\n                if (index < total) {\r\n                    heroNode.active = true;\r\n                    gm.pool.async_get(BundleName.COMMON, `prefabs/model/${heroId}`, NodePoolItem, (item) => {\r\n                        if (!item) return;\r\n                        if (heroNode.childrenCount == 0) {\r\n                            heroNode.addChild(item.node);\r\n                            const skeleton = item.getComponent(sp.Skeleton);\r\n                            if (skeleton) {\r\n                                skeleton.setSkin(\"front\");\r\n                                skeleton.setAnimation(0, \"stay\", true);\r\n                            }\r\n                        } else {\r\n                            gm.pool.put(item.node);\r\n                        }\r\n                    });\r\n                }\r\n            } else {\r\n                heroNode.active = false;\r\n                gm.pool.put_children(heroNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    private complete_load(): void {\r\n        if (this._last_state == LoadingState.BOAT_IN) {\r\n            this.boat_anim!.once(cc.Animation.EventType.FINISHED, () => {\r\n                this.do_complete_load();\r\n            });\r\n            this.boat_anim!.play(\"loding_ship_inclose\");\r\n        } else if (this._last_state == LoadingState.BOAT_OUT) {\r\n            this.boat_anim!.once(cc.Animation.EventType.FINISHED, () => {\r\n                this.do_complete_load();\r\n            });\r\n            this.boat_anim!.play(\"loding_ship_outclose\");\r\n        } else {\r\n            this.do_complete_load();\r\n        }\r\n    }\r\n\r\n    private do_complete_load(): void {\r\n        for (let i = 0; i < this.hero_node_array.length; i++) {\r\n            const heroNode = this.hero_node_array[i];\r\n            heroNode.active = false;\r\n            gm.pool.put_children(heroNode);\r\n        }\r\n        this.start_node!.active = false;\r\n        this.start_full_node!.active = false;\r\n        this.caves_node!.active = false;\r\n        this.reward_node!.active = false;\r\n        this.boat_node!.active = false;\r\n        this.node.active = false;\r\n    }\r\n\r\n   protected onDisable(): void {\r\n        this.start_node!.active = false;\r\n        this.start_full_node!.active = false;\r\n        this.caves_node!.active = false;\r\n        this.reward_node!.active = false;\r\n        this.boat_node!.active = false;\r\n        if (cc.sys.platform == cc.sys.OPPO_GAME) {\r\n            qg.loadingComplete({});\r\n        }\r\n    }\r\n}\r\n\r\nexport { Loading };"]}
{"version":3,"sources":["assets\\start-scene\\scripts\\FightTempData.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { ReportData } from './NetUtils';\r\nimport { ChannelManager } from './ChannelManager';\r\nimport { RewardIdEnum, BuildTypeEnum, PropTypeEnum, SetItemNumEnum, HeroTypeEnum } from './Constants';\r\nimport { AStar, Grid, Node } from './AStar';\r\nimport { gm } from './GameManager';\r\nimport { SingletonBase } from './SingletonBase';\r\nimport { Utils } from './Utils';\r\nimport { AttackType, SkillEffectId } from './ConfigData';\r\nimport { ConstantsData } from './ConstantsData';\r\nimport { FightConstants, FightDynamicNodeLayer, HeroInBattleState, HeroType, HeroState, HeroFightState } from './FightConstants';\r\nimport { FightState } from './FightData';\r\nimport { roleGoBattleItemVO } from './MapCellCfgData';\r\nimport { PlayMap } from \"../../common/configs/playmap\";\r\nimport { PlayData } from \"../../common/configs/playdata\";\r\nimport { PlayCaves } from \"../../common/configs/playcaves\";\r\nimport { NamePool } from \"../../common/configs/name_pool\";\r\nimport { Build } from '../../common/configs/build';\r\nimport { HeroConfig } from '../../common/configs/hero';\r\nimport { LadderLVConfig } from '../../common/configs/ladder_lv';\r\nimport { ItemConfig } from '../../common/configs/item';\r\nimport { CavesLevel } from '../../common/configs/caveslevel';\r\nimport { MatchConfig } from '../../common/configs/match';\r\nimport { FightMapItem } from '../../fight/scripts/FightMapItem';\r\nimport { FightPropItem } from '../../fight/scripts/FightPropItem';\r\nimport { FightBuildingItem } from '../../fight/scripts/FightBuildingItem';\r\nimport { FightHeroItem } from '../../fight/scripts/FightHeroItem';\r\nimport { FightDecorationItem } from '../../fight/scripts/FightDecorationItem';\r\nimport { FightWallItem } from '../../fight/scripts/FightWallItem';\r\nimport { NodePoolItem } from './NodePoolItem';\r\nimport { SkillItem, SkillItemData } from '../../fight/scripts/SkillItem';\r\n\r\n// @ !!!!\r\ninterface IDefensiveData {\r\n    uid: string;\r\n    nickname: string;\r\n    star: number;\r\n    boat_id: number;\r\n    map_data_array: FightMapItemData[];\r\n    hero_data_array: FightTempData[];\r\n}\r\n\r\n\r\n//\r\nexport class FightTempData extends SingletonBase {\r\n    public is_debug: boolean | number | string;\r\n    public fight_state: FightState;\r\n    public record_fight_state: FightState;\r\n    public delta_time: number;\r\n    public total_time: number;\r\n    public has_pop_revive: boolean;\r\n    public reward_data_array: FightRewardItemData[];\r\n    public goto_battle_count: number;\r\n    public death_hero_count: number;\r\n    public in_battle_hero_data: FightHeroItemData;\r\n    public map_item_array: FightMapItem[];\r\n    public map_item_data_array: FightMapItemData[];\r\n    public prop_item_array: FightPropItem[];\r\n    public prop_data_array: FightPropItemData[];\r\n    public building_item_array: FightBuildingItem[];\r\n    public building_data_array: FightBuildingItemData[];\r\n    public defense_hero_array: FightHeroItem[];\r\n    public defense_hero_data_array: FightHeroItemData[];\r\n    public passive_hero_data_array: FightHeroItemData[];\r\n    public hero_item_array: FightHeroItem[];\r\n    public hero_data_array: FightHeroItemData[];\r\n    public wall_item_array: FightWallItem[];\r\n    public wall_data_array: FightWallItemData[];\r\n    public decoration_item_array: FightDecorationItem[];\r\n    public decoration_data_array: FightDecorationItemData[];\r\n    public fight_result_data: FightResultData;\r\n    public battle_hero_array: roleGoBattleItemVO[];\r\n    public open_battle_panel_state: number;\r\n    private fight_match_data_array: FightMatchData[];\r\n    public building_destroy_array: NodePoolItem[];\r\n    public hero_death_array: NodePoolItem[];\r\n    public skill_item_array: SkillItem[];\r\n    public skill_data_array: SkillItemData[];\r\n    public play_type: number;\r\n    public map_id: number;\r\n    public map_data_id: number;\r\n    public name: string;\r\n    public boat_id: number;\r\n    public goal_uid: string;\r\n    public defensive_data: IDefensiveData;\r\n    private offset_col: cc.Vec2;\r\n    private offset_row: cc.Vec2;\r\n    public min_offset: cc.Vec2;\r\n    public max_offset: cc.Vec2;\r\n    public map_start_position: cc.Vec3;\r\n    public boat_start_position: cc.Vec3;\r\n    public map_size: cc.Vec2;\r\n    public edge_map: {\r\n        LEFT: cc.Vec2;\r\n        BOTTOM: cc.Vec2;\r\n        RIGHT: cc.Vec2;\r\n        TOP: cc.Vec2;\r\n    };\r\n    public map_end_many_times: number;\r\n    public show_return_btn_timestamp: number;\r\n    public a_star: AStar;\r\n    public grid: Grid;\r\n    public unique_id: number;;\r\n    public hero_id: number;\r\n\r\n    //\r\n    constructor() {\r\n        super();\r\n        this.is_debug = false;\r\n        this.fight_state = FightState.NONE;\r\n        this.record_fight_state = FightState.NONE;\r\n        this.delta_time = 0;\r\n        this.total_time = 0;\r\n        this.has_pop_revive = false;\r\n        this.reward_data_array = [];\r\n        this.goto_battle_count = 0;\r\n        this.death_hero_count = 0;\r\n        this.in_battle_hero_data = null;\r\n        this.map_item_array = [];\r\n        this.map_item_data_array = [];\r\n        this.prop_item_array = [];\r\n        this.prop_data_array = [];\r\n        this.building_item_array = [];\r\n        this.building_data_array = [];\r\n        this.defense_hero_array = [];\r\n        this.defense_hero_data_array = [];\r\n        this.passive_hero_data_array = [];\r\n        this.hero_item_array = [];\r\n        this.hero_data_array = [];\r\n        this.wall_item_array = [];\r\n        this.wall_data_array = [];\r\n        this.decoration_item_array = [];\r\n        this.decoration_data_array = [];\r\n        this.fight_result_data = null;\r\n        this.battle_hero_array = [];\r\n        this.open_battle_panel_state = 0;\r\n        this.fight_match_data_array = [];\r\n        this.building_destroy_array = [];\r\n        this.hero_death_array = [];\r\n        this.skill_item_array = [];\r\n        this.skill_data_array = [];\r\n        this.play_type = -1;\r\n        this.map_id = 2;\r\n        this.map_data_id = 1;\r\n        this.name = \"Unknown Island\"; // 无名岛 -> Unknown Island\r\n        this.boat_id = 60001;\r\n        this.goal_uid = \"\";\r\n        this.defensive_data = {\r\n            uid: \"\",\r\n            nickname: \"\",\r\n            star: 0,\r\n            boat_id: 0,\r\n            map_data_array: [],\r\n            hero_data_array: []\r\n        };\r\n        this.offset_col = cc.v2(75, -20);\r\n        this.offset_row = cc.v2(-31, -51);\r\n        this.min_offset = cc.Vec2.ZERO;\r\n        this.max_offset = cc.Vec2.ZERO;\r\n        this.map_start_position = cc.Vec3.ZERO;\r\n        this.boat_start_position = cc.Vec3.ZERO;\r\n        this.map_size = cc.Vec2.ZERO;\r\n        this.edge_map = {\r\n            LEFT: cc.v2(-1, 0),\r\n            BOTTOM: cc.v2(0, 1),\r\n            RIGHT: cc.v2(1, 0),\r\n            TOP: cc.v2(0, -1)\r\n        };\r\n        this.map_end_many_times = 1;\r\n        this.show_return_btn_timestamp = 0;\r\n    } // end: constructor\r\n\r\n    // @\r\n    public get left_fight_time(): number {\r\n        return Math.max(0, Math.floor(ConstantsData.instance.MAX_FIGHT_TIME - gm.data.fight_temp_data.total_time));\r\n    }\r\n\r\n\r\n    // @\r\n    public build_play_map_data(): FightMapItemData[] {\r\n        let t;\r\n        this.map_item_data_array = [];\r\n        this.building_data_array = [];\r\n        this.prop_data_array = [];\r\n        this.defense_hero_data_array = [];\r\n        this.passive_hero_data_array = [];\r\n        this.wall_data_array = [];\r\n        if (0 == this.play_type && \"\" != this.goal_uid) {\r\n            this.name = this.defensive_data.nickname + \"\\nUID:\" + this.defensive_data.uid;\r\n            this.boat_id = this.defensive_data.boat_id;\r\n            this.map_size.x = gm.const.MAX_ROW;\r\n            this.map_size.y = gm.const.MAX_COLUMN;\r\n\r\n            const o = [181, 195, 204, 216, 215, 225, 243, 254, 253, 248, 232, 221, 207, 199, 186, 170, 153, 154, 171, 187, 200, 208, 209, 201, 188, 189, 174, 123, 122, 108, , 53, 39, 27, 18, 8, 26, 37, 49, 36, 35, 25, 28, 40, 41, 54, 96, 125, 190, 202, 213, 214, 203, 193, 194, 120, 107, 121, 137];\r\n\r\n            const n = [];\r\n\r\n            for (let index = 0; index < this.defensive_data.map_data_array.length; index++) {\r\n                const mapData = this.defensive_data.map_data_array[index];\r\n                if (mapData) {\r\n                    const fightMapItemData = new FightMapItemData;\r\n                    fightMapItemData.item_type = mapData.item_type;\r\n                    fightMapItemData.item_id = mapData.item_id;\r\n                    fightMapItemData.skill_lv = mapData.skill_lv;\r\n                    fightMapItemData.star_lv = mapData.star_lv || 0;\r\n                    fightMapItemData.grid_index = gm.data.config_data.getMapIndexByCellID(mapData.cell_id);\r\n                    fightMapItemData.grid_position = cc.v2(fightMapItemData.grid_index % this.map_size.x, Math.floor(fightMapItemData.grid_index / this.map_size.x));\r\n                    fightMapItemData.position = this.grid_position_to_floor_position(fightMapItemData.grid_position);\r\n\r\n                    const mapcellCfg = gm.data.config_data.getMapCellCfgByID(mapData.cell_id);\r\n                    fightMapItemData.land_id = mapcellCfg.landImgID;\r\n\r\n                    if (0 < mapcellCfg.plantID) {\r\n                        const fightDecorationItemData = new FightDecorationItemData;\r\n                        fightDecorationItemData.decoration_id = mapcellCfg.plantID;\r\n                        fightDecorationItemData.plant_x_offset = mapcellCfg.plantXOffset;\r\n                        fightDecorationItemData.plant_y_offset = mapcellCfg.plantYOffset;\r\n                        fightDecorationItemData.grid_index = fightMapItemData.grid_index;\r\n                        fightDecorationItemData.grid_position = fightMapItemData.grid_position;\r\n                        fightDecorationItemData.array_index = this.decoration_data_array.length;\r\n                        fightMapItemData.decoration_index = this.decoration_data_array.length;\r\n                        this.decoration_data_array.push(fightDecorationItemData);\r\n                    }\r\n\r\n                    fightMapItemData.cell_id = fightMapItemData.grid_index;\r\n                    fightMapItemData.plant_id = mapcellCfg.plantID;\r\n                    fightMapItemData.land_img_id = mapcellCfg.landImgID;\r\n                    fightMapItemData.land_y_offset = mapcellCfg.landYOffset + 9;\r\n                    fightMapItemData.plant_x_offset = mapcellCfg.plantXOffset;\r\n                    fightMapItemData.plant_y_offset = mapcellCfg.plantYOffset;\r\n                    fightMapItemData.water_img_id = 0;\r\n                    fightMapItemData.is_obstruct = mapcellCfg.isObstruct;\r\n                    fightMapItemData.enter = -1 < o.indexOf(mapData.cell_id) ? 0 : 1;\r\n                    0 == mapcellCfg.plantID && 0 == fightMapItemData.is_obstruct && 0 == fightMapItemData.item_type && n.push(fightMapItemData.grid_index);\r\n                    this.map_item_data_array[fightMapItemData.grid_index] = fightMapItemData;\r\n                }\r\n            }\r\n\r\n            let s: FightMapItemData = undefined;\r\n            for (let r = 0; r < this.map_item_data_array.length; r++) {\r\n                if (s = this.map_item_data_array[r]) {\r\n                    if (1 == s.item_type) {\r\n                        const fightPropItemData = new FightPropItemData;\r\n                        fightPropItemData.grid_index = s.grid_index;\r\n                        fightPropItemData.grid_position = s.grid_position;\r\n                        fightPropItemData.id = s.item_id;\r\n                        fightPropItemData.num = 1;\r\n                        s.prop_index = this.prop_data_array.length;\r\n                        this.prop_data_array.push(fightPropItemData);\r\n\r\n                        const common = this.special_prop_to_common_prop(fightPropItemData);\r\n                        this.get_reward_data(common.id).max_num += common.num;\r\n\r\n                    } else if (2 == s.item_type) {\r\n                        const fightBuildingItemData = new FightBuildingItemData;\r\n                        fightBuildingItemData.grid_index = s.grid_index;\r\n                        fightBuildingItemData.grid_position = s.grid_position;\r\n                        fightBuildingItemData.id = s.item_id;\r\n                        fightBuildingItemData.reward_array = [];\r\n\r\n                        const rowData = gm.config.get_row_data(\"BuildConfigData\", fightBuildingItemData.id.toString()) as Build;\r\n                        if (rowData) {\r\n                            fightBuildingItemData.star_count = rowData.star;\r\n                            fightBuildingItemData.hp = fightBuildingItemData.max_hp = rowData.hp;\r\n                            fightBuildingItemData.defense = rowData.defense;\r\n                            fightBuildingItemData.attack_value = rowData.attack;\r\n                            fightBuildingItemData.call_range = rowData.call;\r\n                            fightBuildingItemData.attack_interval = rowData.attack_interval;\r\n                            fightBuildingItemData.attack_range = rowData.attack_range;\r\n                            fightBuildingItemData.fly_weapon_name = rowData.fly_weapon_name;\r\n                            fightBuildingItemData.lv = rowData.buildLv;\r\n                            this.get_reward_data(RewardIdEnum.STAR).max_num += rowData.star;\r\n\r\n                            if (0 < rowData.material) {\r\n                                const basePropItemData = new BasePropItemData;\r\n                                basePropItemData.id = rowData.material;\r\n                                basePropItemData.num = rowData.quantity;\r\n                                fightBuildingItemData.reward_array[fightBuildingItemData.reward_array.length] = basePropItemData;\r\n                                const common = this.special_prop_to_common_prop(basePropItemData);\r\n                                this.get_reward_data(common.id).max_num += common.num;\r\n\r\n                            } else if (0 < rowData.coin) {\r\n                                const basePropItemData = new BasePropItemData\r\n                                basePropItemData.id = RewardIdEnum.GOLD;\r\n                                basePropItemData.num = rowData.coin;\r\n                                fightBuildingItemData.reward_array[fightBuildingItemData.reward_array.length] = basePropItemData;\r\n                                this.get_reward_data(basePropItemData.id).max_num += basePropItemData.num;\r\n                            }\r\n                        }\r\n\r\n                        fightBuildingItemData.array_index = this.building_data_array.length;\r\n                        s.building_index = this.building_data_array.length;\r\n                        this.building_data_array.push(fightBuildingItemData);\r\n                        this.is_main_city(fightBuildingItemData.id) && (t = fightBuildingItemData);\r\n                    } else if (3 == s.item_type) {\r\n                        var l\r\n                        const _ = s.item_id;\r\n                        const F = gm.config.get_row_data(\"HeroConfigData\", _.toString()) as HeroConfig;\r\n                        if (F) {\r\n                            if (10 == F.occupation || 12 == F.occupation) {\r\n                                const fightWallItemData = new FightWallItemData;\r\n                                fightWallItemData.grid_index = s.grid_index;\r\n                                fightWallItemData.grid_position = s.grid_position;\r\n                                fightWallItemData.id = _;\r\n                                fightWallItemData.lv = F.lv;\r\n                                fightWallItemData.skill_id = F.skill_id;\r\n                                fightWallItemData.passive_skill_array = F.passive_skill_array;\r\n                                fightWallItemData.skill_lv = s.skill_lv || 1;\r\n                                fightWallItemData.star_lv = s.star_lv || 0;\r\n\r\n                                var d = gm.data.config_data.getStarCfgByID(F.arms, fightWallItemData.star_lv);\r\n                                fightWallItemData.occupation = F.occupation;\r\n                                fightWallItemData.hp = fightWallItemData.max_hp = Math.floor(F.hp * (d ? d.hp + 1 : 1));\r\n                                fightWallItemData.attack_type = F.attack_type;\r\n                                fightWallItemData.attack_anim_time = F.attack_anim_time;\r\n                                fightWallItemData.fly_weapon_name = F.fly_weapon_name;\r\n                                fightWallItemData.fly_weapon_time = F.fly_weapon_time;\r\n\r\n                                if (\"\" != F.fly_weapon_position_array) {\r\n                                    fightWallItemData.fly_weapon_position_array = [];\r\n                                    const p = F.fly_weapon_position_array.split(\"|\");\r\n                                    for (var h = 0; h < p.length; h++) {\r\n                                        const V = p[h].split(\",\");\r\n                                        if (2 == V.length) {\r\n                                            fightWallItemData.fly_weapon_position_array[h] = cc.v3(parseInt(V[0].trim()), parseInt(V[1].trim()))\r\n                                        } else {\r\n                                            // cc.error(\"配置的数据格式有错误\");\r\n                                            cc.error(\"Định dạng dữ liệu được cấu hình không đúng.\");\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                                fightWallItemData.attack_value = Math.floor(F.attack * (d ? d.attack + 1 : 1));\r\n                                fightWallItemData.attack_interval = F.attack_interval;\r\n                                fightWallItemData.attack_range = F.range;\r\n                                fightWallItemData.search_range = F.search_range;\r\n                                fightWallItemData.defense_value = F.defense + (d ? d.defense : 0);\r\n                                fightWallItemData.last_attack_time = 0;\r\n                                fightWallItemData.call_range = gm.const.WALL_CALL_RANGE;\r\n                                fightWallItemData.array_index = this.wall_data_array.length;\r\n                                s.wall_index = fightWallItemData.array_index;\r\n                                this.wall_data_array.push(fightWallItemData);\r\n\r\n                            } else {\r\n                                const fightHeroItemData = new FightHeroItemData;\r\n                                fightHeroItemData.grid_index = s.grid_index;\r\n                                fightHeroItemData.grid_position = s.grid_position;\r\n                                fightHeroItemData.id = _;\r\n                                fightHeroItemData.lv = F.lv;\r\n                                fightHeroItemData.skill_id = F.skill_id;\r\n                                fightHeroItemData.skill_lv = s.skill_lv || 0;\r\n                                fightHeroItemData.star_lv = s.star_lv || 0;\r\n\r\n                                const d = gm.data.config_data.getStarCfgByID(F.arms, fightHeroItemData.star_lv);\r\n                                fightHeroItemData.passive_skill_array = F.passive_skill_array;\r\n                                fightHeroItemData.hero_type = F.hero_type;\r\n                                fightHeroItemData.hp = fightHeroItemData.max_hp = Math.floor(F.hp * (d ? d.hp + 1 : 1));\r\n                                fightHeroItemData.attack_type = F.attack_type;\r\n                                fightHeroItemData.attack_anim_time = F.attack_anim_time;\r\n                                fightHeroItemData.fly_weapon_name = F.fly_weapon_name;\r\n                                fightHeroItemData.fly_weapon_time = F.fly_weapon_time;\r\n\r\n                                if (\"\" != F.fly_weapon_position_array) {\r\n                                    fightHeroItemData.fly_weapon_position_array = [];\r\n                                    const p = F.fly_weapon_position_array.split(\"|\");\r\n                                    for (var u = 0; u < p.length; u++) {\r\n                                        const V = p[u].split(\",\");\r\n                                        if (2 == V.length) {\r\n                                            fightHeroItemData.fly_weapon_position_array[u] = cc.v3(parseInt(V[0].trim()), parseInt(V[1].trim()));\r\n                                        } else {\r\n                                            // cc.error(\"配置的数据格式有错误\");\r\n                                            cc.error(\"Định dạng dữ liệu được cấu hình không đúng.\");\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                fightHeroItemData.attack_value = Math.floor(F.attack * (d ? d.attack + 1 : 1));\r\n                                fightHeroItemData.attack_interval = F.attack_interval;\r\n                                fightHeroItemData.attack_range = F.range;\r\n                                fightHeroItemData.search_range = F.search_range;\r\n                                fightHeroItemData.move_speed = F.speed + (d ? d.speed : 0);\r\n                                fightHeroItemData.defense_value = F.defense + (d ? d.defense : 0);\r\n                                fightHeroItemData.occupation = F.occupation;\r\n                                fightHeroItemData.type = HeroType.DEFENSE;\r\n                                fightHeroItemData.last_attack_time = 0;\r\n\r\n                                if (11 == F.occupation) {\r\n                                    fightHeroItemData.array_index = this.passive_hero_data_array.length;\r\n                                    this.passive_hero_data_array.push(fightHeroItemData)\r\n                                } else {\r\n                                    fightHeroItemData.array_index = this.defense_hero_data_array.length;\r\n                                    const l = s.add_defense_hero_index(this.defense_hero_data_array.length);\r\n                                    fightHeroItemData.offset = l.offset;\r\n                                    this.defense_hero_data_array.push(fightHeroItemData);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            var m = [16003, 17002, 16002, 17002, 16001, 17002, 16001];\r\n            for (let r = 0; r < m.length; r++) {\r\n                const g = m[r];\r\n                const mathRandom = Utils.math_random(!0, 0, n.length);\r\n                if (- 1 < mathRandom) {\r\n                    const splice = n.splice(mathRandom, 1)[0];\r\n                    const itemData = this.map_item_data_array[splice];\r\n\r\n                    if ((itemData) && 0 == itemData.item_type) {\r\n                        itemData.item_type = 1;\r\n                        itemData.item_id = g;\r\n                        const fightPropItemData = new FightPropItemData\r\n                        fightPropItemData.grid_index = itemData.grid_index;\r\n                        fightPropItemData.grid_position = itemData.grid_position;\r\n                        fightPropItemData.id = g;\r\n                        fightPropItemData.num = 1;\r\n                        itemData.prop_index = this.prop_data_array.length;\r\n                        this.prop_data_array.push(fightPropItemData);\r\n\r\n                        const common = this.special_prop_to_common_prop(fightPropItemData);\r\n                        this.get_reward_data(common.id).max_num += common.num;\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.a_star = new AStar;\r\n            let y = undefined;\r\n\r\n            for (let r = 0; r < this.map_item_data_array.length; r++) {\r\n                y = this.map_item_data_array[r];\r\n                if ((y) && -1 == y.edge_flag) {\r\n                    y.edge_flag = this.calculate_edge_flag(y.grid_position);\r\n                }\r\n            }\r\n\r\n            const v = this.grid = new Grid(this.map_size.x, this.map_size.y);\r\n\r\n            for (let r = 0; r < this.map_item_data_array.length; r++) {\r\n                y = this.map_item_data_array[r];\r\n                if ((y) && -1 == y.building_index && -1 == y.wall_index && y.is_obstruct <= 0) {\r\n                    v.setWalkable(y.grid_position.x, y.grid_position.y, true);\r\n                }\r\n            }\r\n\r\n            if (t) {\r\n                const D = t.grid_position.x - 3;\r\n                const I = t.grid_position.x + 3;\r\n                const E = t.grid_position.y - 3;\r\n                const C = t.grid_position.y + 3;\r\n                let T = undefined;\r\n                for (let r = D; r <= I; r++) {\r\n                    for (let b = E; b <= C; b++) {\r\n                        T = this.get_fight_map_item_data(r, b);\r\n                        if ((T) && 0 < T.enter) {\r\n                            (T.enter = 0);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const w = this.grid_position_to_floor_position(cc.v2(0, this.map_size.y));\r\n            const N = this.grid_position_to_floor_position(cc.v2(this.map_size.x, 0));\r\n            const A = this.grid_position_to_floor_position(cc.v2(0, 0));\r\n            const O = this.grid_position_to_floor_position(cc.v2(this.map_size.x, this.map_size.y));\r\n\r\n            this.min_offset.x = -N.x - cc.Canvas.instance.node.width / 2;\r\n            this.max_offset.x = -w.x + cc.Canvas.instance.node.width / 2;\r\n            this.min_offset.y = 0;\r\n            this.max_offset.y = A.y - O.y;\r\n            this.map_start_position = cc.v3(-396, 1110);\r\n            this.boat_start_position = cc.v3(300, -500);\r\n\r\n        } else {\r\n            const RowData = gm.config.get_row_data_array(\"PlayMapConfigData\", this.map_id.toString()) as PlayMap[];\r\n\r\n            for (let r = 0; r < RowData.length; r++) {\r\n                const S = RowData[r];\r\n                if (S) {\r\n                    if (0 == r) {\r\n                        this.map_size.x = S.col;\r\n                        this.map_size.y = S.row;\r\n                    }\r\n\r\n                    const fightMapItemData = new FightMapItemData();\r\n                    fightMapItemData.grid_index = S.cell_id;\r\n                    fightMapItemData.grid_position = cc.v2(fightMapItemData.grid_index % this.map_size.x,\r\n                        Math.floor(fightMapItemData.grid_index / this.map_size.x));\r\n                    fightMapItemData.position = this.grid_position_to_floor_position(fightMapItemData.grid_position);\r\n                    fightMapItemData.land_id = S.land_img_id;\r\n\r\n                    if (0 < S.plant_id) {\r\n                        const fightDecorationItemData = new FightDecorationItemData();\r\n                        fightDecorationItemData.decoration_id = S.plant_id;\r\n                        fightDecorationItemData.plant_x_offset = S.plant_x_offset;\r\n                        fightDecorationItemData.plant_y_offset = S.plant_y_offset;\r\n                        fightDecorationItemData.grid_index = fightMapItemData.grid_index;\r\n                        fightDecorationItemData.grid_position = fightMapItemData.grid_position;\r\n                        fightDecorationItemData.array_index = this.decoration_data_array.length;\r\n                        fightMapItemData.decoration_index = this.decoration_data_array.length;\r\n                        this.decoration_data_array.push(fightDecorationItemData);\r\n                    }\r\n\r\n                    fightMapItemData.cell_id = S.cell_id;\r\n                    fightMapItemData.plant_id = S.plant_id;\r\n                    fightMapItemData.land_img_id = S.land_img_id;\r\n                    fightMapItemData.land_y_offset = S.land_y_offset + 9;\r\n                    fightMapItemData.plant_x_offset = S.plant_x_offset;\r\n                    fightMapItemData.plant_y_offset = S.plant_y_offset;\r\n                    fightMapItemData.water_img_id = S.water_img_id;\r\n                    this.map_item_data_array[fightMapItemData.grid_index] = fightMapItemData;\r\n                }\r\n            }\r\n\r\n            const map = this.map_id + \"_\" + this.map_data_id;\r\n            let k: PlayCaves[] | PlayCaves[] = undefined;\r\n\r\n            if (0 == this.play_type || 1 == this.play_type) {\r\n                k = gm.config.get_row_data_array(\"PlayDataConfigData\", map) as PlayData[];\r\n\r\n            } else if (2 == this.play_type) {\r\n                k = gm.config.get_row_data_array(\"PlayCavesConfigData\", map) as PlayCaves[];\r\n            }\r\n            let L;\r\n            let s = undefined;\r\n            let H = (s = undefined, 0);\r\n            for (let r = 0; r < k.length; r++) {\r\n                L = k[r];\r\n                const s = this.map_item_data_array[L.cell_id];\r\n                const S = RowData[r];\r\n                if (s) {\r\n                    s.enter = L.enter;\r\n                    0 < s.enter && H++;\r\n                    s.item_type = L.item_type;\r\n                    s.item_id = L.item_id;\r\n                    s.is_obstruct = L.is_obstruct;\r\n                    if (1 == L.item_type) {\r\n                        const fightPropItemData = new FightPropItemData()\r\n                        fightPropItemData.grid_index = s.grid_index;\r\n                        fightPropItemData.grid_position = s.grid_position;\r\n                        fightPropItemData.id = L.item_id;\r\n                        fightPropItemData.num = 1;\r\n                        s.prop_index = this.prop_data_array.length;\r\n                        this.prop_data_array.push(fightPropItemData);\r\n\r\n                        const c = this.special_prop_to_common_prop(fightPropItemData);\r\n                        this.get_reward_data(c.id).max_num += c.num;\r\n\r\n                    } else if (2 == L.item_type) {\r\n                        const fightBuildingItemData = new FightBuildingItemData();\r\n                        fightBuildingItemData.grid_index = s.grid_index;\r\n                        fightBuildingItemData.grid_position = s.grid_position;\r\n                        fightBuildingItemData.id = L.item_id;\r\n                        fightBuildingItemData.reward_array = [];\r\n                        const rowData = gm.config.get_row_data(\"BuildConfigData\", fightBuildingItemData.id.toString()) as Build;\r\n                        if (rowData) {\r\n                            fightBuildingItemData.star_count = rowData.star;\r\n                            fightBuildingItemData.hp = fightBuildingItemData.max_hp = rowData.hp;\r\n                            fightBuildingItemData.defense = rowData.defense;\r\n                            fightBuildingItemData.attack_value = rowData.attack;\r\n                            fightBuildingItemData.call_range = rowData.call;\r\n                            fightBuildingItemData.attack_interval = rowData.attack_interval;\r\n                            fightBuildingItemData.attack_range = rowData.attack_range;\r\n                            fightBuildingItemData.fly_weapon_name = rowData.fly_weapon_name;\r\n                            fightBuildingItemData.lv = rowData.buildLv;\r\n                            this.get_reward_data(RewardIdEnum.STAR).max_num += rowData.star;\r\n\r\n                            if (0 < rowData.material) {\r\n                                const basePropItemData = new BasePropItemData();\r\n                                basePropItemData.id = rowData.material;\r\n                                basePropItemData.num = rowData.quantity;\r\n                                fightBuildingItemData.reward_array[fightBuildingItemData.reward_array.length] = basePropItemData;\r\n                                const common = this.special_prop_to_common_prop(basePropItemData);\r\n                                this.get_reward_data(common.id).max_num += common.num;\r\n                            }\r\n\r\n                            if (0 < rowData.coin) {\r\n                                const basePropItemData = new BasePropItemData();\r\n                                basePropItemData.id = RewardIdEnum.GOLD;\r\n                                basePropItemData.num = rowData.coin;\r\n                                fightBuildingItemData.reward_array[fightBuildingItemData.reward_array.length] = basePropItemData;\r\n                                this.get_reward_data(basePropItemData.id).max_num += basePropItemData.num;\r\n                            }\r\n                        }\r\n\r\n                        fightBuildingItemData.array_index = this.building_data_array.length;\r\n                        s.building_index = this.building_data_array.length;\r\n                        this.building_data_array.push(fightBuildingItemData);\r\n\r\n                    } else if (3 == L.item_type) {\r\n                        const _ = L.item_id;\r\n                        const F = gm.config.get_row_data(\"HeroConfigData\", _.toString()) as HeroConfig;\r\n                        if (F) {\r\n                            if (10 == F.occupation || 12 == F.occupation) {\r\n                                const fightWallItemData = new FightWallItemData();\r\n                                fightWallItemData.grid_index = s.grid_index;\r\n                                fightWallItemData.grid_position = s.grid_position;\r\n                                fightWallItemData.id = _;\r\n                                fightWallItemData.lv = F.lv;\r\n                                fightWallItemData.skill_id = F.skill_id;\r\n                                fightWallItemData.passive_skill_array = F.passive_skill_array;\r\n                                fightWallItemData.skill_lv = L.skill_lv || 0;\r\n                                fightWallItemData.star_lv = L.star_lv || 0;\r\n\r\n                                const d = gm.data.config_data.getStarCfgByID(F.arms, fightWallItemData.star_lv);\r\n                                fightWallItemData.occupation = F.occupation;\r\n                                fightWallItemData.hp = fightWallItemData.max_hp = Math.floor(F.hp * (d ? d.hp + 1 : 1));\r\n                                fightWallItemData.attack_type = F.attack_type;\r\n                                fightWallItemData.attack_anim_time = F.attack_anim_time;\r\n                                fightWallItemData.fly_weapon_name = F.fly_weapon_name;\r\n                                fightWallItemData.fly_weapon_time = F.fly_weapon_time;\r\n\r\n                                if (\"\" != F.fly_weapon_position_array) {\r\n                                    fightWallItemData.fly_weapon_position_array = [];\r\n                                    const p = F.fly_weapon_position_array.split(\"|\");\r\n                                    for (var W = 0; W < p.length; W++) {\r\n                                        const V = p[W].split(\",\")\r\n                                        if (2 == V.length) {\r\n                                            fightWallItemData.fly_weapon_position_array[W] = cc.v3(parseInt(V[0].trim()), parseInt(V[1].trim()));\r\n                                        } else {\r\n                                            // cc.error(\"配置的数据格式有错误\");\r\n                                            cc.error(\"Định dạng dữ liệu được cấu hình không đúng.\");\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                fightWallItemData.attack_value = Math.floor(F.attack * (d ? d.attack + 1 : 1));\r\n                                fightWallItemData.attack_interval = F.attack_interval;\r\n                                fightWallItemData.attack_range = F.range;\r\n                                fightWallItemData.search_range = F.search_range;\r\n                                fightWallItemData.defense_value = F.defense + (d ? d.defense : 0);\r\n                                fightWallItemData.last_attack_time = 0;\r\n                                fightWallItemData.call_range = gm.const.WALL_CALL_RANGE;\r\n                                fightWallItemData.array_index = this.wall_data_array.length;\r\n                                s.wall_index = fightWallItemData.array_index;\r\n                                this.wall_data_array.push(fightWallItemData);\r\n\r\n                            } else {\r\n                                const fightHeroItemData = new FightHeroItemData();\r\n                                fightHeroItemData.grid_index = s.grid_index;\r\n                                fightHeroItemData.grid_position = s.grid_position;\r\n                                fightHeroItemData.id = _;\r\n                                fightHeroItemData.lv = F.lv;\r\n                                fightHeroItemData.skill_id = F.skill_id;\r\n                                fightHeroItemData.skill_lv = L.skill_lv || 0;\r\n                                fightHeroItemData.star_lv = L.star_lv || 0;\r\n\r\n                                const d = gm.data.config_data.getStarCfgByID(F.arms, fightHeroItemData.star_lv);\r\n                                fightHeroItemData.passive_skill_array = F.passive_skill_array;\r\n                                fightHeroItemData.hero_type = F.hero_type;\r\n                                fightHeroItemData.hp = fightHeroItemData.max_hp = Math.floor(F.hp * (d ? d.hp + 1 : 1));\r\n                                fightHeroItemData.attack_type = F.attack_type;\r\n                                fightHeroItemData.attack_anim_time = F.attack_anim_time;\r\n                                fightHeroItemData.fly_weapon_name = F.fly_weapon_name;\r\n                                fightHeroItemData.fly_weapon_time = F.fly_weapon_time;\r\n\r\n                                if (\"\" != F.fly_weapon_position_array) {\r\n                                    fightHeroItemData.fly_weapon_position_array = [];\r\n                                    const p = F.fly_weapon_position_array.split(\"|\");\r\n                                    let V;\r\n                                    for (let K = 0; K < p.length; K++) {\r\n                                        if (2 == (V = p[K].split(\",\")).length) {\r\n                                            fightHeroItemData.fly_weapon_position_array[K] = cc.v3(parseInt(V[0].trim()), parseInt(V[1].trim()));\r\n                                        } else {\r\n                                            // cc.error(\"配置的数据格式有错误\");\r\n                                            cc.error(\"Định dạng dữ liệu được cấu hình không đúng.\");\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                fightHeroItemData.attack_value = Math.floor(F.attack * (d ? d.attack + 1 : 1));\r\n                                fightHeroItemData.attack_interval = F.attack_interval;\r\n                                fightHeroItemData.attack_range = F.range;\r\n                                fightHeroItemData.search_range = F.search_range;\r\n                                fightHeroItemData.move_speed = F.speed + (d ? d.speed : 0);\r\n                                fightHeroItemData.defense_value = F.defense + (d ? d.defense : 0);\r\n                                fightHeroItemData.occupation = F.occupation;\r\n                                fightHeroItemData.type = HeroType.DEFENSE;\r\n                                fightHeroItemData.last_attack_time = 0;\r\n\r\n                                if (11 == F.occupation) {\r\n                                    fightHeroItemData.array_index = this.passive_hero_data_array.length;\r\n                                    this.passive_hero_data_array.push(fightHeroItemData);\r\n                                } else {\r\n                                    fightHeroItemData.array_index = this.defense_hero_data_array.length;\r\n                                    const l = s.add_defense_hero_index(this.defense_hero_data_array.length);\r\n                                    fightHeroItemData.offset = l.offset;\r\n                                    this.defense_hero_data_array.push(fightHeroItemData);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            const D = cc.js.formatStr(\"map_id:%d,map_data_id:%d Bảng cấu hình số điểm hạ cánh %d\", this.map_id, this.map_data_id, H);\r\n            H <= 0 ? console.error(D) : console.log(D);\r\n            this.a_star = new AStar;\r\n            let y = undefined;\r\n            for (let r = 0; r < this.map_item_data_array.length; r++) {\r\n                const y = this.map_item_data_array[r];\r\n                if (y && -1 == y.edge_flag) {\r\n                    (y.edge_flag = this.calculate_edge_flag(y.grid_position));\r\n                }\r\n            }\r\n\r\n            const v = this.grid = new Grid(this.map_size.x, this.map_size.y);\r\n            for (let r = 0; r < this.map_item_data_array.length; r++) {\r\n                const y = this.map_item_data_array[r];\r\n                if (y && -1 == y.building_index && -1 == y.wall_index && y.is_obstruct <= 0) {\r\n                    v.setWalkable(y.grid_position.x, y.grid_position.y, true);\r\n                }\r\n            }\r\n\r\n            const w = this.grid_position_to_floor_position(cc.v2(0, this.map_size.y));\r\n            const N = this.grid_position_to_floor_position(cc.v2(this.map_size.x, 0));\r\n            const A = this.grid_position_to_floor_position(cc.v2(0, 0));\r\n            const O = this.grid_position_to_floor_position(cc.v2(this.map_size.x, this.map_size.y));\r\n\r\n            this.min_offset.x = -N.x - cc.Canvas.instance.node.width / 2;\r\n            this.max_offset.x = -w.x + cc.Canvas.instance.node.width / 2;\r\n            this.min_offset.y = 0;\r\n            this.max_offset.y = A.y - O.y;\r\n            this.map_start_position = cc.v3(-160, 166);\r\n            this.boat_start_position = cc.v3(160, 210);\r\n        }\r\n\r\n        return this.map_item_data_array;\r\n    } // end: build_play_map_data\r\n\r\n    // @\r\n    public getWalkable(position: cc.Vec2): boolean {\r\n        return this.grid.getWalkable(position.x, position.y);\r\n    }\r\n\r\n    // @\r\n    private get_alive_defense_hero_hp(hero_id: number): number {\r\n        for (let index = 0; index < this.fight_result_data.alive_defense_hero_data_array.length; index++) {\r\n            const defenseHero = this.fight_result_data.alive_defense_hero_data_array[index];\r\n            if (defenseHero.id == hero_id) {\r\n                return defenseHero.hp;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    // @\r\n    public get_all_result_data(): void {\r\n        const resultData: number[] = [];\r\n        let propDataArray = this.fight_result_data.prop_data_array;\r\n        if (gm.data.mapCell_data.isGuide) {\r\n            propDataArray = [];\r\n            const guideRewards = [\r\n                [12001, 1],\r\n                [11004, 14],\r\n                [11005, 2],\r\n                [13001, 1]\r\n            ];\r\n            for (let i = 0; i < guideRewards.length; i++) {\r\n                const rewardItem = new FightResultPropItemData();\r\n                rewardItem.type = 1;\r\n                rewardItem.id = guideRewards[i][0];\r\n                rewardItem.num = guideRewards[i][1];\r\n                rewardItem.color = 1;\r\n                propDataArray.push(rewardItem);\r\n            }\r\n        }\r\n        //\r\n        let diamondCount = 0;\r\n        const garrisonData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n        for (let i = 0; i < propDataArray.length; i++) {\r\n            const prop = propDataArray[i];\r\n            if (prop.id !== RewardIdEnum.DIAMOND) {\r\n                if (prop.id === RewardIdEnum.WOOD) {\r\n                    prop.id = 16001;\r\n                } else if (prop.id === RewardIdEnum.IRON) {\r\n                    prop.id = 17001;\r\n                }\r\n                //\r\n                if (!garrisonData || garrisonData.buildLvl < 1) {\r\n                    if (prop.id < 30000) {\r\n                        const itemCfg = gm.data.config_data.getItemCfgByID(prop.id);\r\n                        if (itemCfg) {\r\n                            if (\r\n                                itemCfg.type === PropTypeEnum.WOOD_TYPE ||\r\n                                itemCfg.type === PropTypeEnum.IRON_TYPE ||\r\n                                itemCfg.type === PropTypeEnum.SHELL_MONEY_TYPE\r\n                            ) {\r\n                                let currencyId = 0;\r\n                                if (itemCfg.type === PropTypeEnum.WOOD_TYPE) {\r\n                                    currencyId = 16008;\r\n                                } else if (itemCfg.type === PropTypeEnum.IRON_TYPE) {\r\n                                    currencyId = 17008;\r\n                                } else if (itemCfg.type === PropTypeEnum.SHELL_MONEY_TYPE) {\r\n                                    currencyId = 25008;\r\n                                }\r\n                                gm.data.mapCell_data.splitItemNum(prop.num * this.map_end_many_times, currencyId, 1);\r\n                            } else {\r\n                                for (let j = 0; j < prop.num * this.map_end_many_times; j++) {\r\n                                    resultData.push(prop.id);\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        for (let j = 0; j < prop.num * this.map_end_many_times; j++) {\r\n                            resultData.push(prop.id);\r\n                        }\r\n                    }\r\n                } else {\r\n                    const splitItem = gm.data.high_to_low_level_prop(prop.id, prop.num * this.map_end_many_times);\r\n                    const highProp = gm.data.low_level_to_high_prop(splitItem.item_id, splitItem.item_num);\r\n                    for (let j = 0; j < highProp.length; j++) {\r\n                        const highItem = highProp[j];\r\n                        for (let k = 0; k < highItem.item_num; k++) {\r\n                            resultData.push(highItem.item_id);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                diamondCount = prop.num * this.map_end_many_times;\r\n            }\r\n        } // end: for\r\n\r\n        // Xử lý kết thúc battle\r\n        gm.data.mapCell_data.isFirstBattle = false;\r\n        gm.data.mapCell_data.addWareHouseList(resultData);\r\n        const heroBattleData: { unique_id: number, id: number, hp: number }[] = [];\r\n        const defenseHeroData: { unique_id: number, id: number, hp: number }[] = [];\r\n\r\n        if (this.goal_uid !== \"\" && this.play_type === 0 && this.defensive_data) {\r\n            for (let i = 0; i < this.hero_data_array.length; i++) {\r\n                const hero = this.hero_data_array[i];\r\n                heroBattleData.push({\r\n                    unique_id: 0,\r\n                    id: hero.id,\r\n                    hp: hero.hp\r\n                });\r\n            }\r\n            //\r\n            for (let i = 0; i < this.defensive_data.hero_data_array.length; i++) {\r\n                const defenseHero = this.defensive_data.hero_data_array[i];\r\n                defenseHeroData.push({\r\n                    unique_id: defenseHero.unique_id,\r\n                    id: defenseHero.hero_id,\r\n                    hp: this.get_alive_defense_hero_hp(defenseHero.hero_id)\r\n                });\r\n            }\r\n        }\r\n\r\n        this.hero_data_array = [];\r\n        const ladderLevel = gm.data.ladder_temp_data.convert_rank_to_lv(gm.data.ladder_temp_data.rank);\r\n        const ladderConfig = gm.config.get_row_data(\"LadderLvConfigData\", ladderLevel.toString()) as LadderLVConfig;\r\n        //\r\n        if (this.fight_result_data.result === 1) {\r\n            if (this.goal_uid && this.play_type === 0) {\r\n                const rewardItems: { id: number, num: number }[] = [];\r\n                const nonStarRewards: { id: number, num: number }[] = [];\r\n                for (let i = 0; i < propDataArray.length; i++) {\r\n                    rewardItems.push({\r\n                        id: propDataArray[i].id,\r\n                        num: propDataArray[i].num\r\n                    });\r\n                }\r\n                //\r\n                const specialRewardIds = [RewardIdEnum.STAR, RewardIdEnum.GOLD, RewardIdEnum.DIAMOND];\r\n                for (let i = 0; i < propDataArray.length; i++) {\r\n                    if (specialRewardIds.indexOf(propDataArray[i].id) === -1) {\r\n                        nonStarRewards.push({\r\n                            id: propDataArray[i].id,\r\n                            num: propDataArray[i].num\r\n                        });\r\n                    }\r\n                }\r\n                gm.data.update_player_fight_data(\r\n                    this.fight_result_data.star_num,\r\n                    this.defensive_data.uid,\r\n                    this.defensive_data.nickname,\r\n                    this.defensive_data.star,\r\n                    -this.fight_result_data.star_num,\r\n                    this.fight_result_data.result,\r\n                    rewardItems,\r\n                    nonStarRewards,\r\n                    heroBattleData,\r\n                    defenseHeroData\r\n                );\r\n            } else {\r\n                gm.data.update_player_score_data_request(gm.data.ladder_temp_data.total_star + this.fight_result_data.star_num);\r\n            }\r\n            gm.data.ladder_temp_data.change_star_num(this.fight_result_data.star_num);\r\n        } else {\r\n            const garrisonData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n            if (garrisonData && garrisonData.buildLvl >= 1) {\r\n                gm.data.ladder_temp_data.change_star_num(-ladderConfig.failed_star);\r\n                if (this.goal_uid !== \"\" && this.play_type === 0) {\r\n                    const rewardItems: { id: number, num: number }[] = [];\r\n                    const nonStarRewards: { id: number, num: number }[] = [];\r\n                    for (let i = 0; i < propDataArray.length; i++) {\r\n                        rewardItems.push({\r\n                            id: propDataArray[i].id,\r\n                            num: propDataArray[i].num\r\n                        });\r\n                    }\r\n                    gm.data.update_player_fight_data(\r\n                        -ladderConfig.failed_star,\r\n                        this.defensive_data.uid,\r\n                        this.defensive_data.nickname,\r\n                        this.defensive_data.star,\r\n                        ladderConfig.success_star,\r\n                        this.fight_result_data.result,\r\n                        rewardItems,\r\n                        nonStarRewards,\r\n                        heroBattleData,\r\n                        defenseHeroData\r\n                    );\r\n                } else {\r\n                    gm.data.update_player_score_data_request(gm.data.ladder_temp_data.total_star - ladderConfig.failed_star);\r\n                }\r\n            }\r\n        }\r\n        if (diamondCount > 0) {\r\n            gm.data.mapCell_data.setAddGameDiamond(SetItemNumEnum.ADD_ITEM_TYPE, diamondCount);\r\n            if (gm.ui.mapMainUI && gm.ui.mapMainUI.ship) {\r\n                gm.ui.show_coin_fly(RewardIdEnum.DIAMOND, gm.ui.mapMainUI.ship.convertToWorldSpaceAR(cc.Vec3.ZERO));\r\n            }\r\n        }\r\n        gm.data.mapCell_data.setAddGameCoin(\r\n            SetItemNumEnum.ADD_ITEM_TYPE,\r\n            this.fight_result_data.gold_num * this.map_end_many_times\r\n        );\r\n        gm.ui.mapMainUI.showBattleEndCoin(this.fight_result_data.gold_num * this.map_end_many_times);\r\n    } // end: get_all_result_data\r\n\r\n    // @\r\n    public build_fight_result_data(isDebug = false): void {\r\n        const fightResult = new FightResultData;\r\n\r\n        fightResult.result = this.fight_state == FightState.SUCCESS ? 1 : 2;\r\n        fightResult.attacker_name = \"???\";\r\n        fightResult.defender_name = this.name;\r\n        fightResult.bucket_num = 0;\r\n        fightResult.prop_data_array = [];\r\n\r\n        if (!isDebug) {\r\n            for (let r = 0; r < this.reward_data_array.length; r++) {\r\n                const rewardData = this.reward_data_array[r];\r\n                if (rewardData.id == RewardIdEnum.STAR) {\r\n                    fightResult.star_num = rewardData.num;\r\n                } else if (rewardData.id == RewardIdEnum.GOLD) {\r\n                    fightResult.gold_num = rewardData.num;\r\n                } else if (0 < rewardData.num) {\r\n                    const fightResultPropItemData = new FightResultPropItemData;\r\n                    fightResultPropItemData.type = 1;\r\n                    fightResultPropItemData.id = rewardData.id;\r\n                    fightResultPropItemData.num = 0 < rewardData.max_num ? Math.min(rewardData.num, rewardData.max_num) : rewardData.num;\r\n                    const rowData = gm.config.get_row_data(\"ItemConfigData\", fightResultPropItemData.id.toString()) as ItemConfig;\r\n                    fightResultPropItemData.color = rowData ? rowData.color : 1;\r\n                    fightResult.prop_data_array.push(fightResultPropItemData);\r\n                }\r\n            }\r\n        }\r\n\r\n        fightResult.death_hero_data_array = [];\r\n        fightResult.alive_hero_data_array = [];\r\n        for (let r = 0; r < this.hero_data_array.length; r++) {\r\n            const e = this.hero_data_array[r];\r\n            if (e.hp <= 0 && !isDebug) {\r\n                const fightResultPropItemData = new FightResultPropItemData;\r\n                fightResultPropItemData.type = 2;\r\n                fightResultPropItemData.color = 1;\r\n                fightResultPropItemData.id = e.id;\r\n                fightResultPropItemData.num = 1;\r\n                fightResult.death_hero_data_array.push(fightResultPropItemData);\r\n            } else {\r\n                fightResult.alive_hero_data_array.push(e);\r\n            }\r\n        }\r\n\r\n        fightResult.alive_defense_hero_data_array = [];\r\n        for (let r = 0; r < this.defense_hero_data_array.length; r++) {\r\n            const a = this.defense_hero_data_array[r];\r\n            if (a && 0 < a.hp) {\r\n                fightResult.alive_defense_hero_data_array.push(a);\r\n            }\r\n        }\r\n        this.fight_result_data = fightResult;\r\n    } // end: build_fight_result_data\r\n\r\n    // @\r\n    public get_battle_hero_is_space(): boolean | undefined {\r\n        const boat = gm.data.mapCell_data.buildData[BuildTypeEnum.SEAGOINGBOAT_TYPE];\r\n        const boatConfig = gm.data.config_data.getBuildCfgByID(boat.buildID);\r\n        if (boatConfig) {\r\n            return this.battle_hero_array.length < boatConfig.capacity;\r\n        }\r\n        return undefined;\r\n    }\r\n    // @\r\n    public get_defense_hero_is_space(): boolean {\r\n        const defenseBuilding = gm.data.mapCell_data.buildData[BuildTypeEnum.GARRISION_TYPE];\r\n        if (defenseBuilding && defenseBuilding.buildLvl >= 1) {\r\n            const config = gm.data.config_data.getBuildCfgByID(defenseBuilding.buildID);\r\n            return config ? Object.keys(gm.data.mapCell_data.getDefanseHeroData()).length < config.capacity : undefined;\r\n        }\r\n        return false;\r\n    }\r\n    // @\r\n    public getFightSuperHeroNum(): number {\r\n        let count = 0;\r\n        for (let hero of this.battle_hero_array) {\r\n            if (gm.data.config_data.getHeroCfgByID(hero.itemID).hero_type === HeroTypeEnum.SUPER_HERO_TYPE) {\r\n                count++;\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    // @\r\n    public build_hero_array(isDebug = false): void {\r\n        if (gm.data.fight_temp_data.is_debug) {\r\n            this.battle_hero_array = [];\r\n            const heroIds = [31001, 31002, 31003, 32001, 32002, 32003, 33001, 33002, 33003, 34001, 34002, 34003];\r\n            for (let index = 0; index < heroIds.length; index++) {\r\n                const heroItem = new roleGoBattleItemVO;\r\n                heroItem.itemID = heroIds[index];\r\n                this.battle_hero_array[this.battle_hero_array.length] = heroItem;\r\n\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < this.battle_hero_array.length; index++) {\r\n            var i;\r\n            const battleHerro = this.battle_hero_array[index];\r\n            const fightHeroItemData = new FightHeroItemData;\r\n            fightHeroItemData.id = battleHerro.itemID;\r\n            fightHeroItemData.cellID = battleHerro.cellID;\r\n            const rowData = gm.config.get_row_data(\"HeroConfigData\", fightHeroItemData.id.toString()) as HeroConfig;\r\n            if (rowData) {\r\n                fightHeroItemData.lv = rowData.lv;\r\n                fightHeroItemData.skill_id = rowData.skill_id;\r\n                fightHeroItemData.passive_skill_array = rowData.passive_skill_array;\r\n                fightHeroItemData.hero_type = rowData.hero_type;\r\n\r\n                const heroStar = gm.data.hero_star_data.getHeroStarData(rowData.arms);\r\n\r\n                fightHeroItemData.star_lv = heroStar ? heroStar.star : 0;\r\n                if (1 == rowData.hero_type) {\r\n                    fightHeroItemData.skill_lv = rowData.lv;\r\n                    if (gm.data.fight_temp_data.is_debug) {\r\n                        fightHeroItemData.hp = fightHeroItemData.max_hp = Math.floor(rowData.hp * (heroStar ? heroStar.hp + 1 : 1));\r\n                    } else {\r\n                        fightHeroItemData.max_hp = Math.floor(rowData.hp * (heroStar ? heroStar.hp + 1 : 1));\r\n                        fightHeroItemData.hp = isDebug ? fightHeroItemData.max_hp : battleHerro.hp;\r\n                    }\r\n                } else {\r\n                    if (gm.data.fight_temp_data.is_debug) {\r\n                        fightHeroItemData.skill_lv = 1;\r\n                    } else {\r\n                        fightHeroItemData.skill_lv = gm.data.mapCell_data.getRoleSkillData(fightHeroItemData.skill_id).lvl;\r\n                    }\r\n                    fightHeroItemData.hp = fightHeroItemData.max_hp = Math.floor(rowData.hp * (heroStar ? heroStar.hp + 1 : 1));\r\n                }\r\n                fightHeroItemData.attack_type = rowData.attack_type;\r\n                fightHeroItemData.attack_anim_time = rowData.attack_anim_time;\r\n                fightHeroItemData.fly_weapon_name = rowData.fly_weapon_name;\r\n                fightHeroItemData.fly_weapon_time = rowData.fly_weapon_time;\r\n\r\n                if (\"\" != rowData.fly_weapon_position_array) {\r\n                    fightHeroItemData.fly_weapon_position_array = [];\r\n                    const weaponPosition = rowData.fly_weapon_position_array.split(\"|\");\r\n                    if (2 == weaponPosition.length) {\r\n                        for (let c = 0; c < weaponPosition.length; c++) {\r\n                            const position = weaponPosition[c].split(\",\");\r\n                            if (2 == position.length) {\r\n                                fightHeroItemData.fly_weapon_position_array[c] = cc.v3(parseInt(position[0].trim()), parseInt(position[1].trim()));\r\n                            } else {\r\n                                // cc.error(\"配置的数据格式有错误\");\r\n                                cc.error(\"Định dạng dữ liệu được cấu hình không đúng.\");\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // cc.error(\"配置的数据格式有错误\");\r\n                        cc.error(\"Định dạng dữ liệu được cấu hình không đúng.\");\r\n                    }\r\n                }\r\n                fightHeroItemData.fly_weapon_name = rowData.fly_weapon_name;\r\n                fightHeroItemData.attack_value = Math.floor(rowData.attack * (heroStar ? heroStar.attack + 1 : 1));\r\n                fightHeroItemData.attack_interval = rowData.attack_interval;\r\n                fightHeroItemData.attack_range = rowData.range;\r\n                fightHeroItemData.search_range = rowData.search_range;\r\n                fightHeroItemData.move_speed = rowData.speed + (heroStar ? heroStar.speed : 0);\r\n                fightHeroItemData.defense_value = rowData.defense + (heroStar ? heroStar.defense : 0);\r\n                fightHeroItemData.occupation = rowData.occupation;\r\n            }\r\n\r\n            fightHeroItemData.type = HeroType.ATTACK;\r\n            fightHeroItemData.last_attack_time = 0;\r\n            fightHeroItemData.array_index = index;\r\n            this.hero_data_array.push(fightHeroItemData);\r\n        }\r\n    } // end: build_hero_array\r\n\r\n    // @\r\n    public build_reward_array(): void {\r\n        gm.data.fight_temp_data.is_debug;\r\n    }\r\n\r\n    // @\r\n    private build_fight_match_data_array(): void {\r\n        this.fight_match_data_array = [];\r\n        const configData = gm.config.get_config_data(\"FightMatchConfigData\");\r\n        for (const key in configData.data) {\r\n            const data = configData.data[key] as MatchConfig;\r\n            const matchData = new FightMatchData();\r\n            matchData.id = data.id;\r\n            const randomMapArray = data.random_map_array.split(\"|\");\r\n            for (let n = 0; n < randomMapArray.length; n++) {\r\n                matchData.random_map_array[n] = parseInt(randomMapArray[n]);\r\n            }\r\n            const failTwoRandomMapArray = data.fail_two_random_map_array.split(\"|\");\r\n            for (let n = 0; n < failTwoRandomMapArray.length; n++) {\r\n                matchData.fail_two_random_map_array[n] = parseInt(failTwoRandomMapArray[n]);\r\n            }\r\n            matchData.battle_map_id = data.battle_map_id;\r\n            const battleDataArray = data.battle_data_array.split(\"|\");\r\n            for (let n = 0; n < battleDataArray.length; n++) {\r\n                matchData.battle_data_array[n] = parseInt(battleDataArray[n]);\r\n            }\r\n            matchData.psychedelic_map_id = data.psychedelic_map_id;\r\n            const psychedelicDataArray = data.psychedelic_data_array.split(\"|\");\r\n            for (let n = 0; n < psychedelicDataArray.length; n++) {\r\n                matchData.psychedelic_data_array[n] = parseInt(psychedelicDataArray[n]);\r\n            }\r\n            matchData.random_name_id = data.random_name_id;\r\n            this.fight_match_data_array[matchData.id - 1] = matchData;\r\n        }\r\n    } // end: build_fight_match_data_array\r\n\r\n    // @\r\n    public match_fight(): void {\r\n        this.goal_uid = \"\";\r\n        if (this.goal_uid != gm.data.mail_temp_data.target_uid) {\r\n            gm.data.match_player(gm.data.mail_temp_data.target_uid);\r\n            (gm.data.mail_temp_data.target_uid = \"\");\r\n            return;\r\n        }\r\n        const t = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n\r\n        if (t && 1 <= t.buildLvl && gm.data.ladder_data.fight_count > ChannelManager.LEVEL_CONFIG.level_array.length) {\r\n            gm.data.match_player();\r\n        } else {\r\n            this.match_map_by_ladder_lv();\r\n            gm.ui.show_fight();\r\n            gm.channel.report_event(\"fight\", {\r\n                event_desc: \"突袭\",\r\n                desc: \"开始\"\r\n            });\r\n            ReportData.instance.report_once_point(10821);\r\n            ReportData.instance.report_point(10822);\r\n        }\r\n    }\r\n\r\n    // @\r\n    public match_map_by_ladder_lv(): boolean {\r\n        const ladderData = gm.data.ladder_data;\r\n        if (0 == this.fight_match_data_array.length) {\r\n            this.build_fight_match_data_array();\r\n        }\r\n\r\n        if (gm.data.mapCell_data.isGuide && !this.is_debug) {\r\n            this.play_type = 0;\r\n            this.map_id = 2;\r\n            this.map_data_id = 1;\r\n            this.boat_id = 60001;\r\n            const matchData = this.fight_match_data_array[0];\r\n\r\n            this.name = this.get_random_name(matchData.random_name_id);\r\n            ladderData.fight_count++;\r\n            ladderData.async_write_data();\r\n            return true;\r\n        }\r\n\r\n        if (ladderData.achievement_id < 1) {\r\n            ladderData.achievement_id = 1;\r\n        } else if (ladderData.achievement_id > this.fight_match_data_array.length) {\r\n            ladderData.achievement_id = this.fight_match_data_array.length;\r\n        }\r\n\r\n        if (ladderData.fight_count < ChannelManager.LEVEL_CONFIG.level_array.length) {\r\n            this.play_type = 0;\r\n            const levelConfig = ChannelManager.LEVEL_CONFIG.level_array[ladderData.fight_count].split(\"-\");\r\n            this.map_id = 2 == levelConfig.length ? parseInt(levelConfig[0].trim()) : 2;\r\n            this.map_data_id = 2 == levelConfig.length ? parseInt(levelConfig[1].trim()) : ladderData.fight_count + 1;\r\n\r\n            const matchData = this.fight_match_data_array[0];\r\n            this.name = this.get_random_name(matchData.random_name_id);\r\n            const mapcellData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.SEAGOINGBOAT_TYPE);\r\n            this.boat_id = mapcellData ? mapcellData.buildID : 60001;\r\n            ladderData.fight_count++;\r\n            ladderData.async_write_data();\r\n            return true;\r\n        }\r\n\r\n        const matchData = this.fight_match_data_array[ladderData.achievement_id - 1]\r\n        if (matchData) {\r\n            const randomIndex = ladderData.fail_count < 2 ? this.get_random_index(matchData.random_map_array) : this.get_random_index(matchData.fail_two_random_map_array);\r\n            if (0 == randomIndex) {\r\n                this.play_type = 0;\r\n                this.map_id = matchData.battle_map_id;\r\n                this.map_data_id = matchData.battle_data_array[Utils.math_random(true, 0, matchData.battle_data_array.length)];\r\n                this.name = this.get_random_name(matchData.random_name_id);\r\n                const mapcellData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.SEAGOINGBOAT_TYPE);\r\n                this.boat_id = mapcellData ? mapcellData.buildID : 60001;\r\n                ladderData.fight_count++;\r\n                ladderData.async_write_data();\r\n                return true;\r\n            }\r\n\r\n            if (1 == randomIndex) {\r\n                this.play_type = 1;\r\n                this.map_id = matchData.psychedelic_map_id;\r\n                this.map_data_id = matchData.psychedelic_data_array[Utils.math_random(true, 0, matchData.psychedelic_data_array.length)];\r\n                this.name = \"迷幻岛\";\r\n                const mapcellData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.SEAGOINGBOAT_TYPE);\r\n                this.boat_id = mapcellData ? mapcellData.buildID : 60001;\r\n                ladderData.fight_count++;\r\n                ladderData.async_write_data();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    } // end: match_map_by_ladder_lv\r\n\r\n    // @\r\n    public match_caves_map(): boolean {\r\n        const fightData = gm.data.fight_data;\r\n        const cavesLevelConfig = gm.config.get_config_data(\"CavesLevelConfigData\");\r\n        const totalLayers = Object.keys(cavesLevelConfig.data).length;\r\n        if (fightData.caves_layer <= totalLayers) {\r\n            this.play_type = 2;\r\n            const rowData = gm.config.get_row_data(\"CavesLevelConfigData\", fightData.caves_layer.toString()) as CavesLevel;\r\n            if (rowData) {\r\n                this.map_id = rowData.map_id;\r\n                this.map_data_id = rowData.data_id;\r\n            }\r\n            // 洞窟第%d层 -> Cave level %d\r\n            this.name = cc.js.formatStr(\"Cave level %d\", fightData.caves_layer);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // @\r\n    public match_happy_map(): void {\r\n        this.play_type = 1;\r\n        this.map_id = Utils.math_random(true, 20, 24);\r\n        this.map_data_id = Utils.math_random(true, 1, 9);\r\n        this.name = \"Đảo Ảo Giác\"; // 梦幻岛 -> Neverland\r\n    }\r\n\r\n    // @\r\n    private get_random_index(array: number[]): number {\r\n        let total = 0;\r\n        for (let i = 0; i < array.length; i++) {\r\n            total += array[i];\r\n        }\r\n        const randomValue = Math.random() * total;\r\n        let cumulative = 0;\r\n        for (let i = 0; i < array.length; i++) {\r\n            cumulative += array[i];\r\n            if (cumulative > randomValue) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // @\r\n    private get_random_name(t: number): string {\r\n        // 无名岛 -> Unknown Island\r\n        const namePool = gm.config.get_row_data_array(\"NamePoolConfigData\", t.toString()) as NamePool[];\r\n        return namePool && namePool.length > 0 ? namePool[Utils.math_random(true, 0, namePool.length)].name : \"Unknown Island\";\r\n    }\r\n\r\n    // @\r\n    public get_reward_data(t: number): FightRewardItemData {\r\n        for (let reward of this.reward_data_array) {\r\n            if (reward && reward.id === t) return reward;\r\n        }\r\n        const newReward = new FightRewardItemData();\r\n        newReward.id = t;\r\n        newReward.num = 0;\r\n        let inserted = false;\r\n        for (let i = 0; i < this.reward_data_array.length; i++) {\r\n            const reward = this.reward_data_array[i];\r\n            if (!inserted && newReward.id < reward.id) {\r\n                newReward.index = i;\r\n                this.reward_data_array.splice(i, 0, newReward);\r\n                inserted = true;\r\n            } else {\r\n                reward.index = i;\r\n            }\r\n        }\r\n        if (!inserted) {\r\n            newReward.index = this.reward_data_array.length;\r\n            this.reward_data_array.push(newReward);\r\n        }\r\n        return newReward;\r\n    }\r\n\r\n    // @\r\n    public grid_position_to_position(Vec2: cc.Vec2): cc.Vec3 {\r\n        const itemData = this.get_fight_map_item_data(Vec2.x, Vec2.y);\r\n        const position = this.offset_col.mul(Vec2.x).add(this.offset_row.mul(Vec2.y));\r\n        return itemData ? cc.v3(position.x, position.y + itemData.land_y_offset) : cc.v3(position.x, position.y)\r\n    }\r\n\r\n    // @\r\n    public grid_position_to_floor_position(t: cc.Vec2): cc.Vec3 {\r\n        return cc.v3(this.offset_col.mul(t.x).add(this.offset_row.mul(t.y)))\r\n    }\r\n\r\n    // @\r\n    public get_fight_map_item(x: number, y: number): FightMapItem {\r\n        return this.map_item_array[y * this.map_size.x + x];\r\n    }\r\n\r\n    // @\r\n    public get_fight_map_item_data(x: number, y: number): FightMapItemData {\r\n        return this.map_item_data_array[y * this.map_size.x + x]\r\n    }\r\n\r\n    // @\r\n    public has_wall_item_data(t: cc.Vec2): boolean {\r\n        for (let index = 0; index < this.wall_data_array.length; index++) {\r\n            const wallData = this.wall_data_array[index]\r\n            if (wallData && wallData.grid_position.equals(t)) return true;;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // h (chưa xác định được I)\r\n    private calculate_edge_flag(t: cc.Vec2): number {\r\n        var e, a, i = 0;\r\n        for (a in this.edge_map) {\r\n            !((e = t.add(this.edge_map[a])).x < 0 || e.x >= this.map_size.x || e.y < 0 || e.y >= this.map_size.y) &&\r\n                this.map_item_data_array[e.x + e.y * this.map_size.x] || (i |= EdgeEnum[a as keyof typeof EdgeEnum]);\r\n        }\r\n        return i;\r\n    }\r\n\r\n    // @\r\n    public pick_up_prop(index: number): void {\r\n        if (!(index < 0 || index >= this.prop_data_array.length)) {\r\n            const propData = this.prop_data_array[index];\r\n            if (propData) {\r\n                const commonProp = this.special_prop_to_common_prop(propData);\r\n                const data = this.get_reward_data(commonProp.id)\r\n                data.num += commonProp.num;\r\n                this.prop_data_array[index] = null;\r\n                gm.data.event_emitter.emit(\"pick_up_prop\", data.index);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // @\r\n    public get_building_destroy_reward(t: number, e: FightBuildingItemData): void {\r\n        const starReward = this.get_reward_data(RewardIdEnum.STAR);\r\n        starReward.num += e.star_count;\r\n        gm.data.event_emitter.emit(\"pick_up_prop\", starReward.index);\r\n        // gm.data.event_emitter.emit(\"pick_up_prop\", starReward.index); gốc: lặp lại 2 lần\r\n        const buildingItem = this.building_item_array[t];\r\n        for (let i = 0; i < e.reward_array.length; i++) {\r\n            const reward = e.reward_array[i];\r\n            const commonProp = this.special_prop_to_common_prop(reward);\r\n            const rewardData = this.get_reward_data(commonProp.id);\r\n            rewardData.num += commonProp.num;\r\n            gm.data.event_emitter.emit(\"pick_up_prop\", rewardData.index);\r\n            if (buildingItem) {\r\n                gm.ui.fight.fly_to_boat(buildingItem.reward_spr_array[i].node, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    // @\r\n    public get_main_city(): FightBuildingItemData {\r\n        for (let index = 0; index < this.building_data_array.length; index++) {\r\n            const buildingData = this.building_data_array[index]\r\n            if (buildingData && 51e3 <= buildingData.id && buildingData.id < 52e3) {\r\n                return buildingData;\r\n            }\r\n        }\r\n    }\r\n\r\n    // @\r\n    public is_main_city(t: number): boolean {\r\n        return 51e3 <= t && t < 52e3 || 61001 <= t && t < 62e3 || 63001 <= t && t < 64e3;\r\n    }\r\n\r\n    // @\r\n    public is_lighthouse(t: number): boolean {\r\n        return 59e3 <= t && t < 6e4;\r\n    }\r\n\r\n    // @\r\n    private special_prop_to_common_prop(fightPropItem: BasePropItemData): BasePropItemData { // FightPropItemData\r\n        const commonProp = new BasePropItemData;\r\n        if (16001 <= fightPropItem.id && fightPropItem.id <= 16099) {\r\n            const itemData = gm.config.get_row_data(\"ItemConfigData\", fightPropItem.id + \"\") as ItemConfig;\r\n            commonProp.id = RewardIdEnum.WOOD;\r\n            commonProp.num = itemData.number * fightPropItem.num;\r\n        } else if (17001 <= fightPropItem.id && fightPropItem.id <= 17099) {\r\n            const itemData = gm.config.get_row_data(\"ItemConfigData\", fightPropItem.id + \"\") as ItemConfig;\r\n            commonProp.id = RewardIdEnum.IRON;\r\n            commonProp.num = itemData.number * fightPropItem.num;\r\n        } else if (24001 <= fightPropItem.id && fightPropItem.id <= 24099) {\r\n            const itemData = gm.config.get_row_data(\"ItemConfigData\", fightPropItem.id + \"\") as ItemConfig;\r\n            commonProp.id = RewardIdEnum.DIAMOND;\r\n            commonProp.num = itemData.number * fightPropItem.num;\r\n        } else {\r\n            const convertedProp = gm.data.high_to_low_level_prop(fightPropItem.id, fightPropItem.num);\r\n            commonProp.id = convertedProp.item_id;\r\n            commonProp.num = convertedProp.item_num;\r\n        }\r\n        return commonProp;\r\n    }\r\n\r\n    // @\r\n    public get_dynamic_node_layer(index: number, layer: number): number {\r\n        return index * FightDynamicNodeLayer.MAX + layer\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class FightHeroItemData {\r\n    public grid_index: number;\r\n    public grid_position: cc.Vec2;\r\n    public array_index: number;\r\n    public id: number;\r\n    public cellID: number;\r\n    public lv: number;\r\n    public skill_id: number;\r\n    public skill_lv: number;\r\n    public star_lv: number;\r\n    public in_battle_state: HeroInBattleState;\r\n    public defense_value: number;\r\n    public hp: number;\r\n    public max_hp: number;\r\n    public attack_type: AttackType;\r\n    public attack_anim_time: number;\r\n    public fly_weapon_name: string;\r\n    public fly_weapon_time: number;\r\n    public fly_weapon_position_array: cc.Vec3[];\r\n    public attack_value: number;\r\n    public last_attack_time: number;\r\n    public attack_count: number;\r\n    public attack_interval: number;\r\n    public attack_range: number;\r\n    public search_range: number;\r\n    public move_speed: number;\r\n    public move_start: Node | null; // chưa xác định\r\n    public move_end: Node | null; // chưa xác định\r\n    public move_path: Node[]; // chưa xác định\r\n    public offset: cc.Vec3;\r\n    public type: HeroType;\r\n    public state: HeroState;\r\n    public fight_state: HeroFightState;\r\n    public radian: number;\r\n    public occupation: number;\r\n    public buff_data_array: BuffItemData[]; // ????? chưa xác định\r\n    public move_speed_scale: number;\r\n    public reduce_damage_ratio: number;\r\n    public attack_speed_ratio: number;\r\n    public attack_bonus_ratio: number;\r\n    public defense_bonus_ratio: number;\r\n    public restore_hp_ratio: number;\r\n    public passive_attack_bonus_ratio: number;\r\n    public passive_defense_bonus_ratio: number;\r\n    public passive_skill_array: number[]; // ?????\r\n    public hero_type: HeroTypeEnum;\r\n    public find_path_target: FightPropItemData | FightBuildingItemData | FightHeroItemData | FightWallItemData;\r\n    // call_range: number;\r\n\r\n    // @\r\n    constructor() {\r\n        this.grid_index = 0;\r\n        this.grid_position = cc.Vec2.ZERO;\r\n        this.array_index = -1;\r\n        this.id = 0;\r\n        this.cellID = 0;\r\n        this.lv = 0;\r\n        this.skill_id = 0;\r\n        this.skill_lv = 0;\r\n        this.star_lv = 0;\r\n        this.in_battle_state = HeroInBattleState.NOT_IN_BATTLE;\r\n        this.defense_value = 0;\r\n        this.hp = 0;\r\n        this.max_hp = 0;\r\n        this.attack_type = AttackType.NONE;\r\n        this.attack_anim_time = 0;\r\n        this.fly_weapon_name = \"\";\r\n        this.fly_weapon_time = 0;\r\n        this.fly_weapon_position_array = [];\r\n        this.attack_value = 0;\r\n        this.last_attack_time = 0;\r\n        this.attack_count = 0;\r\n        this.attack_interval = 0;\r\n        this.attack_range = 0;\r\n        this.search_range = 0;\r\n        this.move_speed = 0;\r\n        this.move_start = null;\r\n        this.move_end = null;\r\n        this.move_path = [];\r\n        this.offset = cc.Vec3.ZERO;\r\n        this.type = HeroType.FREEDOM;\r\n        this.state = HeroState.ALIVE;\r\n        this.fight_state = HeroFightState.WAITING;\r\n        this.radian = 0;\r\n        this.occupation = 0;\r\n        this.buff_data_array = [];\r\n        this.move_speed_scale = 1;\r\n        this.reduce_damage_ratio = 0;\r\n        this.attack_speed_ratio = 0;\r\n        this.attack_bonus_ratio = 0;\r\n        this.defense_bonus_ratio = 0;\r\n        this.restore_hp_ratio = 0;\r\n        this.passive_attack_bonus_ratio = 0;\r\n        this.passive_defense_bonus_ratio = 0;\r\n    }\r\n\r\n    // @\r\n    public get real_attack_value(): number {\r\n        return Math.floor(this.attack_value * (1 + Math.max(this.attack_bonus_ratio + this.passive_attack_bonus_ratio, 0)));\r\n    }\r\n\r\n    // @\r\n    public get real_defense_value(): number {\r\n        return Math.floor(this.defense_value * (1 + Math.max(this.defense_bonus_ratio + this.passive_defense_bonus_ratio, 0)));\r\n    }\r\n\r\n    // @\r\n    public get real_attack_interval(): number {\r\n        return this.attack_interval / (1 + Math.max(this.attack_speed_ratio, 0));\r\n    }\r\n\r\n    // @\r\n    public get real_move_speed(): number {\r\n        return Math.floor(this.move_speed * this.move_speed_scale);\r\n    }\r\n\r\n    // @\r\n    public get real_restore_hp(): number {\r\n        return Math.floor(this.max_hp * this.restore_hp_ratio);\r\n    }\r\n\r\n    // @\r\n    public change_hp(amount: number): void {\r\n        if (amount < 0) {\r\n            amount *= Math.max(1 - this.reduce_damage_ratio, 0);\r\n            amount = Math.min(0, amount + this.real_defense_value);\r\n            this.hp = Math.max(0, Math.min(this.max_hp, this.hp + amount));\r\n        } else {\r\n            this.hp = Math.min(this.max_hp, this.hp + amount);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class BasePropItemData {\r\n    public id: number;\r\n    public num: number;\r\n    //\r\n    constructor() {\r\n        this.id = 0;\r\n        this.num = 0;\r\n    }\r\n} // end: BasePropItemData class\r\n\r\n\r\nexport class FightPropItemData extends BasePropItemData {\r\n    public grid_index: number;\r\n    public grid_position: cc.Vec2;\r\n    public hp: number;\r\n    public array_index: number;\r\n    //\r\n    constructor() {\r\n        super();\r\n        this.grid_index = 0;\r\n        this.grid_position = cc.Vec2.ZERO;\r\n    }\r\n} // end: FightPropItemData class\r\n\r\n// @\r\nexport class FightDecorationItemData {\r\n    public grid_index: number;\r\n    public grid_position: cc.Vec2;\r\n    public array_index: number;\r\n    public decoration_id: number;\r\n    public plant_x_offset: number;\r\n    public plant_y_offset: number;\r\n    //\r\n    constructor() {\r\n        this.grid_index = 0;\r\n        this.grid_position = cc.Vec2.ZERO;\r\n        this.array_index = 0;\r\n        this.decoration_id = 0;\r\n        this.plant_x_offset = 0;\r\n        this.plant_y_offset = 0;\r\n    }\r\n} // end: FightDecorationItemData class\r\n\r\n// @\r\nexport class FightResultPropItemData extends BasePropItemData {\r\n    public type: number;\r\n    public color: number;\r\n    //\r\n    constructor() {\r\n        super();\r\n        this.type = 0;\r\n        this.color = 0;\r\n    }\r\n} // end: FightResultPropItemData class\r\n\r\n// @\r\nexport class FightRewardItemData extends BasePropItemData {\r\n    public index: number;\r\n    public max_num: number;\r\n    //\r\n    constructor() {\r\n        super();\r\n        this.index = -1;\r\n        this.max_num = 0;\r\n    }\r\n} // end: FightRewardItemData class\r\n\r\n// @\r\nexport class FightMapConfigData {\r\n    public map_key: string;\r\n    public map_id: number;\r\n    public cell_id: number;\r\n    public row: number;\r\n    public col: number;\r\n    public enter: number;\r\n    public item_type: number;\r\n    public item_id: number;\r\n    public is_obstruct: number;\r\n    public plant_id: number;\r\n    public land_img_id: number;\r\n    public land_y_offset: number;\r\n    public plant_x_offset: number;\r\n    public plant_y_offset: number;\r\n    public water_img_id: number;\r\n    public sea_area: number;\r\n    public skill_lv: number;\r\n    public star_lv: number;\r\n    //\r\n    constructor() {\r\n        this.map_key = \"\";\r\n        this.map_id = 0;\r\n        this.cell_id = 0;\r\n        this.row = 0;\r\n        this.col = 0;\r\n        this.enter = 0;\r\n        this.item_type = 0;\r\n        this.item_id = 0;\r\n        this.is_obstruct = 0;\r\n        this.plant_id = 0;\r\n        this.land_img_id = 0;\r\n        this.land_y_offset = 0;\r\n        this.plant_x_offset = 0;\r\n        this.plant_y_offset = 0;\r\n        this.water_img_id = 0;\r\n        this.sea_area = 0;\r\n        this.skill_lv = 0;\r\n        this.star_lv = 0;\r\n    }\r\n} // end: FightMapConfigData class\r\n\r\n// @\r\ninterface IHeroIndex {\r\n    hero_index: number;\r\n    offset: cc.Vec3;\r\n}\r\n\r\n// @\r\ninterface IDefenseHeroIndex {\r\n    defense_hero_index: number;\r\n    offset: cc.Vec3;\r\n}\r\n\r\n// @\r\nexport class FightMapItemData extends FightMapConfigData {\r\n    public grid_index: number;\r\n    public grid_position: cc.Vec2;\r\n    public edge_flag: number;\r\n    public land_id: number;\r\n    public decoration_index: number;\r\n    public hero_index_array: IHeroIndex[];\r\n    public defense_hero_index_array: IDefenseHeroIndex[];\r\n    public offset_array: cc.Vec3[];\r\n    public prop_index: number;\r\n    public building_index: number;\r\n    public wall_index: number;\r\n    public position: cc.Vec3;\r\n    // @\r\n    constructor() {\r\n        super();\r\n        this.grid_index = 0;\r\n        this.grid_position = cc.Vec2.ZERO;\r\n        this.edge_flag = -1;\r\n        this.land_id = 0;\r\n        this.decoration_index = -1;\r\n        this.hero_index_array = [];\r\n        this.defense_hero_index_array = [];\r\n        this.offset_array = [];\r\n        this.prop_index = -1;\r\n        this.building_index = -1;\r\n        this.wall_index = -1;\r\n        this.position = cc.Vec3.ZERO;\r\n    }\r\n\r\n    public add_hero_index(heroIndex: number): IHeroIndex {\r\n        if (0 == this.offset_array.length) {\r\n            this.offset_array = [].concat(FightConstants.HERO_OFFSET_ARRAY);\r\n        }\r\n\r\n        for (let index = 0; index < this.hero_index_array.length; index++) {\r\n            if (this.hero_index_array[index].hero_index == t) {\r\n                return this.hero_index_array[index];\r\n            }\r\n        }\r\n\r\n        const newHeroIndex = {\r\n            hero_index: heroIndex,\r\n            offset: this.offset_array.shift()\r\n        };\r\n        this.hero_index_array.push(newHeroIndex);\r\n        return newHeroIndex;\r\n    }\r\n\r\n    // @\r\n    public remove_hero_index(heroIndex: number): IHeroIndex[] {\r\n        for (let i = this.hero_index_array.length - 1; i >= 0; i--) {\r\n            if (this.hero_index_array[i].hero_index === heroIndex) {\r\n                return this.hero_index_array.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    // @\r\n    public add_defense_hero_index(defenseHeroIndex: number): IDefenseHeroIndex {\r\n        if (0 == this.offset_array.length) {\r\n            this.offset_array = [].concat(FightConstants.HERO_OFFSET_ARRAY);\r\n        }\r\n\r\n        for (let index = 0; index < this.defense_hero_index_array.length; index++) {\r\n            if (this.defense_hero_index_array[index].defense_hero_index == t) {\r\n                return this.defense_hero_index_array[index];\r\n            }\r\n        }\r\n        const newDefenseHeroIndex = {\r\n            defense_hero_index: defenseHeroIndex,\r\n            offset: this.offset_array.shift()\r\n        };\r\n\r\n        this.defense_hero_index_array.push(newDefenseHeroIndex);\r\n        return newDefenseHeroIndex;\r\n    }\r\n\r\n    // @\r\n    public remove_defense_hero_index(defenseHeroIndex: number): IDefenseHeroIndex[] {\r\n        for (let i = this.defense_hero_index_array.length - 1; i >= 0; i--) {\r\n            if (this.defense_hero_index_array[i].defense_hero_index == defenseHeroIndex) {\r\n                return this.defense_hero_index_array.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport enum EdgeEnum {\r\n    TOP = 1,\r\n    RIGHT = 2,\r\n    BOTTOM = 4,\r\n    LEFT = 8\r\n}\r\n\r\n// @\r\nexport class FightBuildingItemData {\r\n    public grid_index: number;\r\n    public grid_position: cc.Vec2;\r\n    public array_index: number;\r\n    public id: number;\r\n    public lv: number;\r\n    public star_count: number;\r\n    public reward_array: BasePropItemData[];\r\n    public hp: number;\r\n    public max_hp: number;\r\n    public defense: number;\r\n    public attack_value: number;\r\n    public call_range: number;\r\n    public last_attack_time: number;\r\n    public attack_interval: number;\r\n    public attack_range: number;\r\n    public attack_type: AttackType;\r\n    public fly_weapon_name: string;\r\n    public lock_attack_target: FightHeroItemData;\r\n\r\n    // @\r\n    constructor() {\r\n        this.grid_index = 0;\r\n        this.grid_position = cc.Vec2.ZERO;\r\n        this.array_index = -1;\r\n        this.id = 0;\r\n        this.lv = 0;\r\n        this.star_count = 0;\r\n        this.reward_array = [];\r\n        this.hp = 0;\r\n        this.max_hp = 0;\r\n        this.defense = 0;\r\n        this.attack_value = 0;\r\n        this.call_range = 0;\r\n        this.last_attack_time = 0;\r\n        this.attack_interval = 0;\r\n        this.attack_range = 0;\r\n        this.attack_type = AttackType.REMOTE;\r\n        this.fly_weapon_name = \"\";\r\n    }\r\n} // end: FightBuildingItemData class\r\n\r\n// @\r\nexport class FightWallItemData {\r\n    public grid_index: number;\r\n    public grid_position: cc.Vec2;\r\n    public array_index: number;\r\n    public id: number;\r\n    public lv: number;\r\n    public skill_id: number;\r\n    public skill_lv: number;\r\n    public star_lv: number;\r\n    public defense_value: number;\r\n    public hp: number;\r\n    public max_hp: number;\r\n    public attack_type: AttackType;\r\n    public attack_anim_time: number;\r\n    public fly_weapon_name: string;\r\n    public fly_weapon_time: number;\r\n    public fly_weapon_position_array: cc.Vec3[];\r\n    public attack_value: number;\r\n    public last_attack_time: number;\r\n    public attack_interval: number;\r\n    public attack_range: number;\r\n    public search_range: number;\r\n    public state: HeroState;\r\n    public fight_state: HeroFightState;\r\n    public call_range: number;\r\n    public radian: number;\r\n    public damage_ratio: number;\r\n    public defense_ratio: number;\r\n    public passive_skill_array: number[];\r\n    public occupation: number;\r\n    public lock_attack_target: FightHeroItemData;\r\n\r\n    // @\r\n    constructor() {\r\n        this.grid_index = 0;\r\n        this.grid_position = cc.Vec2.ZERO;\r\n        this.array_index = -1;\r\n        this.id = 0;\r\n        this.lv = 0;\r\n        this.skill_id = 0;\r\n        this.skill_lv = 0;\r\n        this.star_lv = 0;\r\n        this.defense_value = 0;\r\n        this.hp = 0;\r\n        this.max_hp = 0;\r\n        this.attack_type = AttackType.NONE;\r\n        this.attack_anim_time = 0;\r\n        this.fly_weapon_name = \"\";\r\n        this.fly_weapon_time = 0;\r\n        this.fly_weapon_position_array = [];\r\n        this.attack_value = 0;\r\n        this.last_attack_time = 0;\r\n        this.attack_interval = 0;\r\n        this.attack_range = 0;\r\n        this.search_range = 0;\r\n        this.state = HeroState.ALIVE;\r\n        this.fight_state = HeroFightState.ATTACKING;\r\n        this.call_range = 0;\r\n        this.radian = 0;\r\n        this.damage_ratio = 1;\r\n        this.defense_ratio = 1;\r\n    }\r\n\r\n    // @\r\n    public get real_attack_value(): number {\r\n        return Math.floor(this.attack_value * this.damage_ratio);\r\n    }\r\n\r\n    // @\r\n    public get real_defense_value(): number {\r\n        return Math.floor(this.defense_value * this.defense_ratio);\r\n    }\r\n} // end: FightWallItemData class\r\n\r\n// @\r\nexport class FightTargetSortData {\r\n    public distance: number;\r\n    public find_path_distance: number;\r\n    public pixel_distance: number;\r\n    public priority: number;\r\n    public type: number;\r\n    public index: number;\r\n    //\r\n    constructor() {\r\n        this.distance = 0;\r\n        this.find_path_distance = 0;\r\n        this.pixel_distance = 0;\r\n        this.priority = 0;\r\n        this.type = 0;\r\n        this.index = -1;\r\n    }\r\n} // end: FightTargetSortData class\r\n\r\n// @\r\nexport class FightResultData {\r\n    public result: number;\r\n    public attacker_name: string;\r\n    public defender_name: string;\r\n    public star_num: number;\r\n    public gold_num: number;\r\n    public bucket_num: number;\r\n    public prop_data_array: FightResultPropItemData[];\r\n    public death_hero_data_array: FightResultPropItemData[];\r\n    public alive_hero_data_array: FightHeroItemData[];\r\n    public alive_defense_hero_data_array: FightHeroItemData[];\r\n    //\r\n    constructor() {\r\n        this.result = 0;\r\n        this.attacker_name = \"\";\r\n        this.defender_name = \"\";\r\n        this.star_num = 0;\r\n        this.gold_num = 0;\r\n        this.bucket_num = 0;\r\n        this.prop_data_array = [];\r\n        this.death_hero_data_array = [];\r\n        this.alive_hero_data_array = [];\r\n        this.alive_defense_hero_data_array = [];\r\n    }\r\n} // end: FightResultData class\r\n\r\n// @\r\nexport class FightMatchData {\r\n    public id: number;\r\n    public random_map_array: number[];\r\n    public fail_two_random_map_array: number[];\r\n    public battle_map_id: number;\r\n    public battle_data_array: number[];\r\n    public psychedelic_map_id: number;\r\n    public psychedelic_data_array: number[];\r\n    public random_name_id: number;\r\n    //\r\n    constructor() {\r\n        this.id = 0;\r\n        this.random_map_array = [];\r\n        this.fail_two_random_map_array = [];\r\n        this.battle_map_id = 0;\r\n        this.battle_data_array = [];\r\n        this.psychedelic_map_id = 0;\r\n        this.psychedelic_data_array = [];\r\n        this.random_name_id = 0;\r\n    }\r\n} // end: FightMatchData class\r\n\r\n// @\r\nexport class BuffItemData {\r\n    public id: SkillEffectId;\r\n    public valid_time: number;\r\n    public start_time: number;\r\n    public is_start: boolean;\r\n    public is_end: boolean;\r\n    public trigger_count: number;\r\n    public max_trigger_count: number;\r\n    public damage_value: number;\r\n    public move_speed_scale: number;\r\n    public reduce_damage_ratio: number;\r\n    public attack_speed_ratio: number;\r\n    public attack_bonus_ratio: number;\r\n    public defense_bonus_ratio: number;\r\n    public restore_hp_ratio: number;\r\n    public value: number;\r\n    //\r\n    constructor() {\r\n        this.id = SkillEffectId.NONE;\r\n        this.valid_time = 0;\r\n        this.start_time = 0;\r\n        this.is_start = false;\r\n        this.is_end = false;\r\n        this.trigger_count = 0;\r\n        this.max_trigger_count = 0;\r\n        this.damage_value = 0;\r\n        this.move_speed_scale = 1;\r\n        this.reduce_damage_ratio = 0;\r\n        this.attack_speed_ratio = 0;\r\n        this.attack_bonus_ratio = 0;\r\n        this.defense_bonus_ratio = 0;\r\n        this.restore_hp_ratio = 0;\r\n        this.value = 0;\r\n    }\r\n} // end: BuffItemData class\r\n"]}
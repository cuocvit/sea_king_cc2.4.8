{"version":3,"sources":["assets\\start-scene\\scripts\\ServerData.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// @\r\nimport { SingletonBase } from './SingletonBase';\r\nimport { gm } from './GameManager';\r\nimport { BuildTypeEnum } from './Constants';\r\nimport { Utils } from './Utils';\r\nimport { RandomName } from '../../common/configs/random_name';\r\nimport { MailInboxItemData, MailLogItemData } from './MailTempData';\r\nimport {  request } from './DataManager';\r\n\r\n// @\r\nexport enum RequestType {\r\n    GET = \"GET\",\r\n    POST = \"POST\"\r\n}\r\n\r\n// @\r\nexport class ServerNoticeData {\r\n    // @ key for update when receiving http response.data\r\n    public email_notice_count: number;\r\n    public shou_fight_notice_count: number;\r\n    public gong_fight_notice_count: number;\r\n    // @\r\n    constructor() {\r\n        this.email_notice_count = 0;\r\n        this.shou_fight_notice_count = 0;\r\n        this.gong_fight_notice_count = 0;\r\n    }\r\n}\r\n\r\n// @\r\nexport class ServerData extends SingletonBase {\r\n    // @\r\n    public static EVENT_DATA_CHANGE: string = \"server_data_change\";\r\n    // @\r\n    private is_test_server: boolean;\r\n    private _server_request_url: string;\r\n    private _test_server_request_url: string;\r\n    private short_pooling_interval: number;\r\n    private sync_data_interval: number;\r\n    private random_nick_name_history: string[];\r\n    private max_rename_request_count: number;\r\n    private rename_request_count: number;\r\n    private rename_callback: (nickname: string) => void;\r\n\r\n    // @ public\r\n    public server_notice_data: ServerNoticeData;\r\n    public uid: string;\r\n    public open_id: string; // (public mode not used)\r\n    public avatarUrl: string; // (public mode not used)\r\n    public nickname: string;\r\n    public token: string;\r\n    public free_rename: number;\r\n    public mail_red_point: boolean;\r\n    public has_new_defense_log: boolean;\r\n    // any !!!\r\n    public mail_log_data_array: MailLogItemData[];\r\n    public mail_inbox_data_array: MailInboxItemData[];\r\n\r\n    // @\r\n    private constructor() {\r\n        super();\r\n        this.is_test_server = false;\r\n        this._server_request_url = \"https://dhh.qszhg.6hwan.com/\";\r\n        this._test_server_request_url = \"http://testdhh.qszhg.6hwan.com/\";\r\n        this.short_pooling_interval = 60;\r\n        this.sync_data_interval = 300;\r\n        this.random_nick_name_history = [];\r\n        this.max_rename_request_count = 20;\r\n        this.rename_request_count = 0;\r\n        //\r\n        this.server_notice_data = new ServerNoticeData();\r\n        this.uid = \"\";\r\n        this.open_id = \"\";\r\n        this.nickname = \"\";\r\n        this.avatarUrl = \"\";\r\n        this.token = \"\";\r\n        this.free_rename = 0;\r\n        this.mail_red_point = false;\r\n        this.has_new_defense_log = false;\r\n    }\r\n\r\n    // @\r\n    public get server_request_url(): string {\r\n        return this.is_test_server ? this._test_server_request_url : this._server_request_url;\r\n    }\r\n\r\n    // @\r\n    public open_polling(): void {\r\n        const scheduler = cc.director.getScheduler();\r\n        scheduler.enableForTarget(this);\r\n        scheduler.schedule(this.polling_handler, this, this.short_pooling_interval, cc.macro.REPEAT_FOREVER, 0, false);\r\n        scheduler.schedule(this.sync_data_handler, this, this.sync_data_interval, cc.macro.REPEAT_FOREVER, 0, false);\r\n        gm.data.event_emitter.on(\"email_notice_count_change\", this.on_email_notice_count_change, this);\r\n        gm.data.event_emitter.on(\"shou_fight_notice_count_change\", this.on_shou_fight_notice_count_change, this);\r\n        gm.data.event_emitter.on(\"gong_fight_notice_count_change\", this.on_gong_fight_notice_count_change, this);\r\n        this.polling_handler();\r\n    }\r\n\r\n    // @\r\n    public on_email_notice_count_change(): void {\r\n        console.log(\"Receive email notification\"); // 收到邮件通知\r\n        this.mail_red_point = true;\r\n        gm.data.event_emitter.emit(ServerData.EVENT_DATA_CHANGE);\r\n    }\r\n\r\n    // @\r\n    public on_shou_fight_notice_count_change(): void {\r\n        const self = this;\r\n        this.mail_red_point = true;\r\n        this.has_new_defense_log = true;\r\n        gm.data.event_emitter.emit(ServerData.EVENT_DATA_CHANGE);\r\n        console.log(\"Received defense notification\"); // 收到防守通知\r\n        gm.data.get_player_score_data_request();\r\n        gm.data.get_player_fight_log_data(\"1\", () => {\r\n            self.do_log_loss_reward();\r\n        });\r\n        if (gm.ui.mapMainUI && gm.ui.mapMainUI.node.activeInHierarchy) {\r\n            gm.ui.show_panel(gm.const.MailLogNotice);\r\n            this.has_new_defense_log = false;\r\n        } else {\r\n            cc.warn(\"When the non-main interface receives the latest battle report notification, the latest battle report will be displayed only when you return to the main interface\"); // 非主界面收到最新战报通知，回到主界面才会显示最新战报\r\n        }\r\n    }\r\n\r\n    // @\r\n    public do_log_loss_reward(): void {\r\n        const tempData = gm.data.mail_temp_data.mail_defense_log_data_array;\r\n        for (let index = 0; index < tempData.length; index++) {\r\n            const tempdata = tempData[index];\r\n            if (2 === tempdata.op_result && 0 === tempdata.is_deduct_loss_reward) {\r\n                const requestData: request = {\r\n                    uid: this.uid,\r\n                    token: this.token,\r\n                    op_type: \"1\",\r\n                    replay_id: tempdata.replay_id,\r\n                    is_deduct_loss_reward: 1\r\n                };\r\n                this.op_deduct_loss_reward((response) => {\r\n                    if (0 === response.ResultCode) {\r\n                        tempdata.is_deduct_loss_reward = 1;\r\n                        for (let i = 0; i < tempdata.op_battle.length; i++) {\r\n                            const battle = tempdata.op_battle[i];\r\n                            if (battle.hp <= 0) {\r\n                                gm.data.mapCell_data.delete_hero(battle.unique_id, battle.id);\r\n                            }\r\n                        }\r\n                        for (let i = 0; i < tempdata.op_loss_reward.length; i++) {\r\n                            const reward = tempdata.op_loss_reward[i];\r\n                            if (reward.id > 0 && reward.num > 0) {\r\n                                gm.data.mapCell_data.delCellItem(reward.id, reward.num);\r\n                            }\r\n                        }\r\n                        this.do_log_loss_reward();\r\n                    }\r\n                }, requestData);\r\n                break;\r\n            }\r\n        }\r\n    } // end: do_log_loss_reward\r\n\r\n    // @\r\n    public on_gong_fight_notice_count_change(): void {\r\n        console.log(\"Received attack notification\"); // 收到攻击通知\r\n    }\r\n\r\n    // @\r\n    public polling_handler(): void {\r\n        if (!gm.data.mapCell_data) return;\r\n        const buildData = gm.data.mapCell_data.getBuildDataByType(BuildTypeEnum.GARRISION_TYPE);\r\n        if (buildData && buildData.buildLvl >= 1) gm.data.get_player_notice()\r\n    }\r\n\r\n    // @\r\n    public sync_data_handler(): void {\r\n        gm.data.update_player_data_request();\r\n    }\r\n\r\n    // @\r\n    public close_polling(): void {\r\n        const scheduler = cc.director.getScheduler();\r\n        scheduler.unschedule(this.polling_handler, this);\r\n        scheduler.unschedule(this.sync_data_handler, this);\r\n        gm.data.event_emitter.off(\"email_notice_count_change\", this.on_email_notice_count_change, this);\r\n    }\r\n\r\n    // @\r\n    // public http_request(method: RequestType, params: any, url: string, callback: (response: any) => void, data?: any): void {\r\n    public http_request(method: RequestType, callback: (response: any) => void, url: string, params: request, data?: request): void {\r\n        // cũ: method, callback, url, params, data\r\n        // this.http_request(RequestType.GET, callback, url, params);\r\n        // this.http_request(RequestType.GET, params, url, callback);\r\n        const isDemo = true;\r\n        if (isDemo) {\r\n            gm.data.event_emitter.emit(\"connect_fail\");\r\n            return;\r\n        }\r\n        if (data === undefined) data = null;\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.withCredentials = false;\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4 && xhr.status >= 200 && xhr.status < 400) {\r\n                console.log(\"http_request -> xhr.responseText:\", xhr.responseText);\r\n                try {\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    if (typeof callback === \"function\") callback(response);\r\n                } catch (error) {\r\n                    console.error(\"http_request -> try parse responseText error:\", error);\r\n                }\r\n            } else if (xhr.readyState === 4 && (xhr.status < 100 || xhr.status >= 400)) {\r\n                cc.error(\"Request failed\"); // 请求失败\r\n                gm.data.event_emitter.emit(\"connect_fail\");\r\n            }\r\n        };\r\n        //\r\n        let queryString = \"\";\r\n        let r = 0;\r\n        const entries = Object.entries(params);\r\n        for (let c = 0; c < entries.length; c++) {\r\n            const entry = entries[c];\r\n            queryString += r === 0 ? \"\" : \"&\";\r\n            queryString += entry[0] + \"=\" + entry[1];\r\n            r++;\r\n        }\r\n        url += \"?\" + queryString;\r\n        console.log(\"http_request url:\", url);\r\n        xhr.open(method, url, true);\r\n        if (method === RequestType.POST) {\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\r\n        }\r\n        if (data) cc.log(\"http_request data:\", JSON.stringify(data));\r\n        xhr.send(method === RequestType.POST && data ? JSON.stringify(data) : null);\r\n    } // end: http_request\r\n\r\n    // @\r\n    public login_request(callback: (response: any) => void, params: any): void {\r\n        const isDemo = true;\r\n        if (!isDemo) {\r\n            const url = this.server_request_url + \"user/login\";\r\n            this.http_request(RequestType.GET, callback, url, params);\r\n        } else {\r\n            const fakeResponseData = {\r\n                \"ResultCode\": 0,\r\n                \"msg\": \"Get user data\",\r\n                \"data\": {\r\n                    \"uid\": \"863727\",\r\n                    \"open_id\": \"l6dszf3g_7mugx17godl\",\r\n                    \"nickname\": \"Dao Teapot\",\r\n                    \"free_rename\": 0,\r\n                    \"avatarUrl\": \"\",\r\n                    \"token\": \"db4a65b510ae1165bb5a680373e623f4\"\r\n                }\r\n            };\r\n            callback(fakeResponseData);\r\n        }\r\n    } // end: login_request\r\n\r\n    // @\r\n    public update_player_data_request(callback: (response: any) => void, params: { uid: string, token: string }, data?: request): void {\r\n        const url = this.server_request_url + \"user/update_player_data\";\r\n        this.http_request(RequestType.POST, callback, url, params, data);\r\n    }\r\n\r\n    // @\r\n    public get_player_data_request(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_player_data\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public update_nickname(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/update_profile\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public match_players(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/match_players\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public get_score_rank(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_score_rank\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public update_player_fight_data(callback: (response: any) => void, params: request, data?: request): void {\r\n        const url = this.server_request_url + \"user/update_player_fight_data\";\r\n        this.http_request(RequestType.POST, callback, url, params, data);\r\n    }\r\n\r\n    // @\r\n    public get_player_fight_data(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_player_fight_data\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public op_deduct_loss_reward(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/op_deduct_loss_reward\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public get_player_email_data(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_player_email_data\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public op_player_email(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/op_player_email\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public get_player_fight_replay_data(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_player_fight_replay_data\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public get_player_notice(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_player_notice\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public get_rob_record(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_rob_record\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public get_arch_rank(callback: (response: any) => void, params: request): void {\r\n        const url = this.server_request_url + \"user/get_arch_rank\";\r\n        this.http_request(RequestType.GET, callback, url, params);\r\n    }\r\n\r\n    // @\r\n    public random_default_name(callback: (nickname: string) => void): void {\r\n        this.rename_callback = callback;\r\n        this.rename_default_nickname();\r\n    }\r\n\r\n    // @\r\n    public random_nickname(): string {\r\n        const configData = gm.config.get_config_data(\"RandomNameConfigData\");\r\n        if (configData && configData.data) {\r\n            const length = Object.keys(configData.data).length;\r\n            let nickname = \"\";\r\n            do {\r\n                const lastName = gm.config.get_row_data(\"RandomNameConfigData\", Utils.math_random(true, 1, length) + \"\") as RandomName;\r\n                const firstName = gm.config.get_row_data(\"RandomNameConfigData\", Utils.math_random(true, 1, length) + \"\") as RandomName;\r\n                nickname = lastName.last_name + firstName.first_name;\r\n            } while (this.random_nick_name_history.indexOf(nickname) !== -1);\r\n            this.random_nick_name_history.push(nickname);\r\n            return nickname;\r\n        }\r\n        console.error(\"Random name configuration table error\"); // 随机名字配置表出错\r\n        return \"\";\r\n    }\r\n\r\n    // @\r\n    public rename_default_nickname(): void {\r\n        const self = this;\r\n        const nickname = this.random_nickname();\r\n        const requestData: request = {\r\n            uid: this.uid,\r\n            token: this.token,\r\n            nickname: nickname,\r\n            op_type: this.rename_request_count < this.max_rename_request_count ? \"1\" : \"2\"\r\n        };\r\n        this.update_nickname((response) => {\r\n            if (0 === response.ResultCode) {\r\n                self.rename_callback(nickname);\r\n            } else {\r\n                self.rename_request_count++;\r\n                self.rename_default_nickname();\r\n            }\r\n        }, requestData);\r\n    }\r\n\r\n    // @\r\n    public rename_nickname(nickname: string, callback: () => void): void {\r\n        const requestData: request = {\r\n            uid: gm.data.server_data.uid,\r\n            token: gm.data.server_data.token,\r\n            nickname: nickname,\r\n            op_type: \"3\"\r\n        };\r\n        gm.data.server_data.update_nickname((response) => {\r\n            if (0 === response.ResultCode) {\r\n                callback();\r\n            } else {\r\n                gm.ui.show_notice(response.msg);\r\n            }\r\n        }, requestData);\r\n    }\r\n} // end: ServerData\r\n"]}
{"version":3,"sources":["assets\\start-scene\\scripts\\StorageManager.ts"],"names":[],"mappings":";;;;;;;AACA,IAAI;AACJ,sEAAwE;AAexE,IAAI;AACJ;IAGI;QACI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,CAAC;IACL,gBAAC;AAAD,CANA,AAMC,IAAA;AAED,IAAI;AACJ;IAQI,IAAI;IACJ;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,EAAE,kBAAkB,EAAE,QAAQ,EAAE,mBAAmB,EAAE,OAAO,EAAE,CAAC;QAChF,IAAI,CAAC,YAAY,GAAG,kCAAkC,CAAC;IAC3D,CAAC;IAGD,sBAAkB,0BAAQ;QAD1B,IAAI;aACJ;YACI,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,cAAc,EAAE,CAAC,CAAC;QACrE,CAAC;;;OAAA;IAED,KAAK;IACE,wCAAe,GAAtB,UAA0B,GAAW,EAAE,QAA4B;QAC/D,IAAI,IAAI,GAAG,EAAO,CAAC;QACnB,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjC,EAAE,CAAC,KAAK,CAAC,8CAA8C,CAAC,CAAC;YACzD,OAAO;SACV;QACD,SAAS;QACT,IAAM,QAAQ,GAAW,kBAAkB,GAAG,GAAG,CAAC;QAClD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;aACpD;YACD,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SAC1B;QACD,OAAO;QACP,IAAI,UAAU,GAAW,IAAI,CAAC;QAC9B,IAAI;YACA,IAAM,MAAM,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACvE,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACjD,sBAAsB;YACtB,6BAA6B;YAC7B,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC5B,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBACnE,EAAE,CAAC,GAAG,CAAC,sEAAsE,EAAE,UAAU,CAAC,CAAC;aAC9F;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,EAAE,CAAC,KAAK,CAAC,oEAAoE,EAAE,KAAK,CAAC,CAAC;SACzF;QACD,EAAE;QACF,IAAI;YACA,IAAI,UAAU,EAAE;gBACZ,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;aACjC;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,EAAE,CAAC,KAAK,CAAC,qDAAqD,EAAE,KAAK,CAAC,CAAC;SAC1E;QACD,SAAS;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5D,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;SAC1D;QACD,EAAE;QACF,IAAI,OAAO,QAAQ,KAAK,UAAU;YAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC,EAAC,uBAAuB;IAEzB,KAAK;IACE,yCAAgB,GAAvB,UAAwB,GAAW,EAAE,IAAY,EAAE,QAAqB;QACpE,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjC,EAAE,CAAC,KAAK,CAAC,+CAA+C,CAAC,CAAC;YAC1D,OAAO;SACV;QACD,SAAS;QACT,IAAM,QAAQ,GAAW,mBAAmB,GAAG,GAAG,CAAC;QACnD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;aACpD;YACD,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SAC1B;QACD,OAAO;QACP,IAAI,UAAU,GAAW,IAAI,CAAC;QAC9B,IAAI;YACA,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAC5B,UAAU,GAAG,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;gBACnE,EAAE,CAAC,GAAG,CAAC,uEAAuE,EAAE,UAAU,CAAC,CAAC;aAC/F;SACJ;QAAC,OAAO,KAAK,EAAE;YACZ,EAAE,CAAC,KAAK,CAAC,qEAAqE,EAAE,KAAK,CAAC,CAAC;SAC1F;QACD,EAAE;QACF,IAAI,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,IAAI,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,EAAE;YACpI,EAAE,CAAC,KAAK,CAAC,mHAAmH,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,GAAG,QAAQ,CAAC,CAAC;YAC9K,OAAO;SACV;QACD,EAAE;QACF,IAAI;YACA,IAAM,MAAM,GAAW,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACvE,wCAAwC;YACxC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;SACnD;QAAC,OAAO,KAAK,EAAE;YACZ,EAAE,CAAC,KAAK,CAAC,oEAAoE,EAAE,KAAK,CAAC,CAAC;SACzF;QACD,SAAS;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5D,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;SAC1D;QACD,EAAE;QACF,IAAI,OAAO,QAAQ,KAAK,UAAU;YAAE,QAAQ,EAAE,CAAC;IACnD,CAAC,EAAC,wBAAwB;IAE1B,KAAK;IACE,0CAAiB,GAAxB,UAAyB,GAAW,EAAE,QAAqB;QACvD,IAAI,CAAC,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACjC,EAAE,CAAC,KAAK,CAAC,gDAAgD,CAAC,CAAC;YAC3D,OAAO;SACV;QACD,SAAS;QACT,IAAM,QAAQ,GAAW,oBAAoB,GAAG,GAAG,CAAC;QACpD,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,EAAE;gBACZ,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,IAAI,SAAS,EAAE,CAAC;aACpD;YACD,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;SAC1B;QACD,OAAO;QACP,IAAI;YACA,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;SACvC;QAAC,OAAO,KAAK,EAAE;YACZ,EAAE,CAAC,KAAK,CAAC,wEAAwE,EAAE,KAAK,CAAC,CAAC;SAC7F;QACD,SAAS;QACT,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC5D,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;SAC1D;QACD,IAAI,OAAO,QAAQ,KAAK,UAAU;YAAE,QAAQ,EAAE,CAAC;IACnD,CAAC,EAAC,yBAAyB;IAE3B,eAAe;IACf;;QAEI;IAEJ,eAAe;IACf;;QAEI;IAEJ,eAAe;IACf;;QAEI;IAEJ,KAAK;IACE,yCAAgB,GAAvB;QACI,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,OAAO;QACzB,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,eAAe,EAAE;YACpC,IAAM,SAAS,GAAc,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YACvD,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,iBAAiB,GAAG,SAAS,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACnE,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;SACrC;IACL,CAAC;IAED,IAAI;IACI,2CAAkB,GAA1B,UAA2B,GAAW;QAClC,IAAM,SAAS,GAAW,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS;YAAE,OAAO,CAAC,CAAC;QACzB,IAAI,MAAM,GAAW,CAAC,CAAC;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;YAChC,MAAM,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7C;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IArLD,IAAI;IACW,wBAAS,GAAmB,IAAI,CAAC;IAqLpD,qBAAC;CAvLD,AAuLC,IAAA,CAAC,sBAAsB;AAvLX,wCAAc;AAyL3B,IAAI;AACJ,IAAM,OAAO,GAAW,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,UAAU,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,UAAwC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC;AACrM,IAAI,OAAO;IAAE,OAAO,CAAC,cAAc,GAAG,cAAc,CAAC","file":"","sourceRoot":"/","sourcesContent":["\r\n// @\r\nimport * as encryptjs from \"../../scripts/libs/encryptjs/js1/encryptjs\";\r\n\r\n/* \r\n// test encryptjs\r\nconst txt = \"Hello World\";\r\nconst t1 = encryptjs.base64Encode(txt);\r\nconst t2 = encryptjs.base64Decode(t1);\r\nconsole.log(\"encryptjs-----------------------\", t1, t2); */\r\n\r\n// @\r\ninterface ISMSettings {\r\n    total_storage_size: number;\r\n    single_storage_size: number;\r\n}\r\n\r\n// @\r\nclass DebugInfo {\r\n    cost_time_array: number[];\r\n\r\n    constructor() {\r\n        this.cost_time_array = [];\r\n    }\r\n}\r\n\r\n// @\r\nexport class StorageManager {\r\n    // @\r\n    private static _instance: StorageManager = null;\r\n    private readonly _debug: boolean;\r\n    private readonly _debug_info_map: Record<string, DebugInfo>;\r\n    private readonly _settings: Readonly<ISMSettings>;\r\n    private readonly _encrypt_key: string;\r\n\r\n    // @\r\n    private constructor() {\r\n        this._debug = true;\r\n        this._debug_info_map = {};\r\n        this._settings = { total_storage_size: 10485760, single_storage_size: 1048576 };\r\n        this._encrypt_key = \"3EyXvjUyd5eGLJHI9jcfTXQisawU48A9\";\r\n    }\r\n\r\n    // @\r\n    public static get instance(): StorageManager {\r\n        return this._instance || (this._instance = new StorageManager());\r\n    }\r\n\r\n    // @@\r\n    public async_read_data<T>(key: string, callback?: (data: T) => void): void {\r\n        let data = {} as T;\r\n        if (!key || typeof key !== \"string\") {\r\n            cc.error(\"StorageManager->async_read_data: invalid key\");\r\n            return;\r\n        }\r\n        // debug1\r\n        const debugKey: string = \"async_read_data \" + key;\r\n        let startTime = 0;\r\n        if (this._debug) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[debugKey];\r\n            if (!debugInfo) {\r\n                this._debug_info_map[debugKey] = new DebugInfo();\r\n            }\r\n            startTime = Date.now();\r\n        }\r\n        // base\r\n        let dataString: string = \"{}\";\r\n        try {\r\n            const newKey: string = this._debug ? key : encryptjs.base64Encode(key);\r\n            dataString = cc.sys.localStorage.getItem(newKey);\r\n            // dataString = null; \r\n            // console.error(dataString);\r\n            if (dataString && !this._debug) {\r\n                dataString = encryptjs.decrypt(dataString, this._encrypt_key, 256);\r\n                cc.log(\"StorageManager->async_read_data->try.decryption.dataString->success:\", dataString);\r\n            }\r\n        } catch (error) {\r\n            cc.error(\"StorageManager->async_read_data->try.decryption.dataString->error:\", error);\r\n        }\r\n        //\r\n        try {\r\n            if (dataString) {\r\n                data = JSON.parse(dataString);\r\n            }\r\n        } catch (error) {\r\n            cc.error(\"StorageManager->async_read_data->JSON.parse->error:\", error);\r\n        }\r\n        // debug2\r\n        if (this._debug) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[debugKey];\r\n            debugInfo.cost_time_array.push(Date.now() - startTime);\r\n        }\r\n        //\r\n        if (typeof callback === \"function\") callback(data);\r\n    } // end: async_read_data\r\n\r\n    // @@\r\n    public async_write_data(key: string, data: object, callback?: () => void): void {\r\n        if (!key || typeof key !== \"string\") {\r\n            cc.error(\"StorageManager->async_write_data: invalid key\");\r\n            return;\r\n        }\r\n        // debug1\r\n        const debugKey: string = \"async_write_data \" + key;\r\n        let startTime = 0;\r\n        if (this._debug) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[debugKey];\r\n            if (!debugInfo) {\r\n                this._debug_info_map[debugKey] = new DebugInfo();\r\n            }\r\n            startTime = Date.now();\r\n        }\r\n        // base\r\n        let dataString: string = \"{}\";\r\n        try {\r\n            dataString = JSON.stringify(data);\r\n            if (dataString && !this._debug) {\r\n                dataString = encryptjs.encrypt(dataString, this._encrypt_key, 256);\r\n                cc.log(\"StorageManager->async_write_data->try.encryption.dataString->success:\", dataString);\r\n            }\r\n        } catch (error) {\r\n            cc.error(\"StorageManager->async_write_data->try.encryption.dataString->error:\", error);\r\n        }\r\n        //\r\n        if (dataString.length > this._settings.single_storage_size && this.string_byte_length(dataString) > this._settings.single_storage_size) {\r\n            cc.error(\"StorageManager->async_write_data->The length of a single key data exceeds the maximum length allowed for storage \" + this._settings.single_storage_size + \" bytes\");\r\n            return;\r\n        }\r\n        //\r\n        try {\r\n            const newKey: string = this._debug ? key : encryptjs.base64Encode(key);\r\n            // console.log(\"setItem: \", dataString);\r\n            cc.sys.localStorage.setItem(newKey, dataString);\r\n        } catch (error) {\r\n            cc.error(\"StorageManager->async_write_data->try.localStorage.setItem->error:\", error);\r\n        }\r\n        // debug2\r\n        if (this._debug) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[debugKey];\r\n            debugInfo.cost_time_array.push(Date.now() - startTime);\r\n        }\r\n        //\r\n        if (typeof callback === \"function\") callback();\r\n    } // end: async_write_data\r\n\r\n    // @@\r\n    public async_delete_data(key: string, callback?: () => void): void {\r\n        if (!key || typeof key !== \"string\") {\r\n            cc.error(\"StorageManager->async_delete_data: invalid key\");\r\n            return;\r\n        }\r\n        // debug1\r\n        const debugKey: string = \"async_delete_data \" + key;\r\n        let startTime = 0;\r\n        if (this._debug) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[debugKey];\r\n            if (!debugInfo) {\r\n                this._debug_info_map[debugKey] = new DebugInfo();\r\n            }\r\n            startTime = Date.now();\r\n        }\r\n        // base\r\n        try {\r\n            cc.sys.localStorage.removeItem(key);\r\n        } catch (error) {\r\n            cc.error(\"StorageManager->async_delete_data->try.localStorage.removeItem->error:\", error);\r\n        }\r\n        // debug2\r\n        if (this._debug) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[debugKey];\r\n            debugInfo.cost_time_array.push(Date.now() - startTime);\r\n        }\r\n        if (typeof callback === \"function\") callback();\r\n    } // end: async_delete_data\r\n\r\n    // @ (not used)\r\n    /* public async_read_remote_data(): void {\r\n        cc.error(\"StorageManager->async_read_remote_data->This method has not yet been implemented\");\r\n    } */\r\n\r\n    // @ (not used)\r\n    /* public async_write_remote_data(): void {\r\n        cc.error(\"StorageManager->async_write_remote_data->This method has not yet been implemented\");\r\n    } */\r\n\r\n    // @ (not used)\r\n    /* public async_delete_remote_data(): void {\r\n        cc.error(\"StorageManager->async_delete_remote_data->This method has not yet been implemented\");\r\n    } */\r\n\r\n    // @@\r\n    public print_debug_info(): void {\r\n        if (!this._debug) return;\r\n        for (const key in this._debug_info_map) {\r\n            const debugInfo: DebugInfo = this._debug_info_map[key];\r\n            cc.log(key + \" execute times:\" + debugInfo.cost_time_array.length);\r\n            cc.log(JSON.stringify(debugInfo));\r\n        }\r\n    }\r\n\r\n    // @\r\n    private string_byte_length(str: string): number {\r\n        const strLength: number = typeof str === \"string\" ? str.length : 0;\r\n        if (!strLength) return 0;\r\n        let length: number = 0;\r\n        for (let i = 0; i < strLength; i++) {\r\n            length += str.charCodeAt(i) > 255 ? 2 : 1;\r\n        }\r\n        return length;\r\n    }\r\n} // end: StorageManager\r\n\r\n// @\r\nconst _window: Window = (typeof window !== \"undefined\") ? window : (typeof globalThis !== \"undefined\") ? globalThis as Window & typeof globalThis : (typeof self !== \"undefined\") ? self : undefined;\r\nif (_window) _window.StorageManager = StorageManager;"]}
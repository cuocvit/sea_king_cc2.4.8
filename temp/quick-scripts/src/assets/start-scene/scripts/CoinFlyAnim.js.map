{"version":3,"sources":["assets\\start-scene\\scripts\\CoinFlyAnim.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// +-+\r\nimport { LayerType, RewardIdEnum, BundleName } from './Constants';\r\nimport { gm } from './GameManager';\r\nimport { NodePoolItem } from './NodePoolItem';\r\nimport { Utils } from './Utils';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass CoinFlyAnim extends NodePoolItem {\r\n    @property([cc.Sprite])\r\n    private coin_spr_array: cc.Sprite[] = [];\r\n\r\n    private _coin_num: number = 1;\r\n    private _start_pos: cc.Vec3 = new cc.Vec3(0, 0);\r\n    private _target_pos: cc.Vec3 = new cc.Vec3(-300, 500);\r\n    private _exist_time: number = 0;\r\n\r\n    protected onEnable(): void {\r\n        for (let i = 0; i < this.coin_spr_array.length; i++) {\r\n            this.coin_spr_array[i].node.active = false;\r\n        }\r\n        for (let i = this._exist_time = 0; i < this._coin_num; i++) {\r\n            this.do_node_anim(this.coin_spr_array[i].node, 0.01 * i);\r\n        }\r\n    }\r\n\r\n    protected update(deltaTime: number): void {\r\n        this._exist_time += deltaTime;\r\n        if (this._exist_time >= 5) {\r\n            gm.pool.put(this.node);\r\n        }\r\n    }\r\n\r\n    public init_fly_anim(rewardId: RewardIdEnum, startPos: cc.Vec3, targetPos?: cc.Vec3 | null, coinNum: number = 1): void {\r\n        for (let i = 0; i < this.coin_spr_array.length; i++) {\r\n            Utils.async_set_sprite_frame(this.coin_spr_array[i], BundleName.COMMON, \"res/item/\" + rewardId);\r\n        }\r\n        const layerNode = gm.ui.get_layer_node(LayerType.TOP);\r\n        this._start_pos = layerNode.convertToNodeSpaceAR(startPos);\r\n        if (targetPos) {\r\n            this._start_pos = gm.ui.mapMainUI.node.convertToNodeSpaceAR(startPos);\r\n            this._target_pos = gm.ui.mapMainUI.node.convertToNodeSpaceAR(targetPos);\r\n        } else if (gm.ui.mapMainUI && gm.ui.mapMainUI.node.activeInHierarchy) {\r\n            switch (rewardId) {\r\n                case RewardIdEnum.DIAMOND:\r\n                    this._target_pos = layerNode.convertToNodeSpaceAR(gm.ui.mapMainUI.diamond_icon_node.convertToWorldSpaceAR(cc.Vec3.ZERO));\r\n                    break;\r\n                case RewardIdEnum.GOLD:\r\n                    this._target_pos = layerNode.convertToNodeSpaceAR(gm.ui.mapMainUI.gold_icon_node.convertToWorldSpaceAR(cc.Vec3.ZERO));\r\n                    break;\r\n                case RewardIdEnum.STAR:\r\n                    this._target_pos = layerNode.convertToNodeSpaceAR(gm.ui.mapMainUI.ladder_node.convertToWorldSpaceAR(new cc.Vec3(-25, -28)));\r\n                    break;\r\n                case RewardIdEnum.BARREL:\r\n                    this._target_pos = layerNode.convertToNodeSpaceAR(gm.ui.mapMainUI.barrelNode.convertToWorldSpaceAR(new cc.Vec3(-25, -28)));\r\n                    break;\r\n            }\r\n        }\r\n        this._coin_num = Math.min(coinNum, this.coin_spr_array.length);\r\n    }\r\n\r\n    private do_node_anim(node: cc.Node, delay: number): void {\r\n        node.active = true;\r\n        node.setPosition(new cc.Vec2(this._start_pos.x, this._start_pos.y));\r\n        node.scale = 1;\r\n        const angle = 2 * Math.PI * delay * 10;\r\n        const targetPos = new cc.Vec2(this._start_pos.x + 100 * Math.cos(angle), this._start_pos.y + 100 * Math.sin(angle) + 200);\r\n        const moveAction = cc.moveTo(0.2 + 0.1 * Math.random(), targetPos.x, targetPos.y);\r\n        const bezierPoints = [\r\n            targetPos,\r\n            new cc.Vec2((this._target_pos.x + targetPos.x) / 2 + (this._target_pos.x - targetPos.x) * (Math.random() - 0.5) / 2, (this._target_pos.y + targetPos.y) / 2),\r\n            new cc.Vec2(this._target_pos.x, this._target_pos.y)\r\n        ];\r\n        const bezierAction = cc.bezierTo(0.4 + 0.3 * Math.random(), bezierPoints);\r\n        const scaleAction = cc.sequence(cc.scaleTo(0.01, 1.2, 1.2), cc.scaleTo(0.05, 0, 0));\r\n        node.runAction(cc.sequence(moveAction, bezierAction, scaleAction, cc.callFunc(() => {\r\n            node.active = false;\r\n        })));\r\n    }\r\n}\r\n\r\nexport { CoinFlyAnim };"]}
{"version":3,"sources":["assets\\start-scene\\scripts\\BundleManager.ts"],"names":[],"mappings":";;;;AAAA,YAAY,CAAC;;;AAEb;IAYI;QANQ,SAAI,GAAoC;YAC5C,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACpB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;YACrB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;SACtB,CAAC;IAEc,CAAC;IAAA,CAAC;IAElB,sBAAkB,yBAAQ;aAA1B;YACI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACjB,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC;aACtC;YACD,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAEO,wCAAgB,GAAxB,UAAyB,UAAkB,EAAE,QAAyD;QAClG,IAAM,cAAc,GAAG,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC7D,IAAI,cAAc,EAAE;YAChB,QAAQ,CAAC,cAAc,CAAC,CAAC;SAC5B;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtB,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,UAAU,EAAE,UAAC,GAAG,EAAE,MAAM;gBAC/C,IAAI,GAAG,EAAE;oBACL,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACnB,OAAO;iBACV;qBAAM;oBACH,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,UAAU,GAAG,uBAAuB,CAAC,CAAC;oBAC9D,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACtB,OAAO;iBACV;YACL,CAAC,CAAC,CAAA;SACL;IACL,CAAC;IArCa,uBAAS,GAAyB,IAAI,CAAC;IAC9C,oBAAM,GAAW,QAAQ,CAAC;IAC1B,qBAAO,GAAW,SAAS,CAAC;IAC5B,mBAAK,GAAW,OAAO,CAAC;IAmCnC,oBAAC;CAvCD,AAuCC,IAAA;AAvCY,sCAAa","file":"","sourceRoot":"/","sourcesContent":["\"use strict\";\r\n\r\nexport class BundleManager {\r\n    public static _instance: BundleManager | null = null;\r\n    static COMMON: string = \"common\";\r\n    static LOADING: string = \"loading\";\r\n    static START: string = \"start\";\r\n\r\n    private _map: Record<string, { deps: any[] }> = {\r\n        common: { deps: [] },\r\n        loading: { deps: [] },\r\n        start: { deps: [] }\r\n    };\r\n\r\n    constructor() { };\r\n\r\n    public static get instance(): BundleManager {\r\n        if (!this._instance) {\r\n            this._instance = new BundleManager;\r\n        }\r\n        return this._instance;\r\n    }\r\n\r\n    private async_get_bundle(bundleName: string, callback: (bundle: cc.AssetManager.Bundle | null) => void) {\r\n        const existingBundle = cc.assetManager.getBundle(bundleName);\r\n        if (existingBundle) {\r\n            callback(existingBundle);\r\n        } else {\r\n            this._map[bundleName];\r\n            cc.assetManager.loadBundle(bundleName, (err, bundle) => {\r\n                if (err) {\r\n                    console.error(err);\r\n                    return;\r\n                } else {\r\n                    console.error(\"load \" + bundleName + \" bundle successfully.\");\r\n                    void callback(bundle);\r\n                    return;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}"]}
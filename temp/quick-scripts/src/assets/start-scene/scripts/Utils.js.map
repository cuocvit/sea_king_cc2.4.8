{"version":3,"sources":["assets\\start-scene\\scripts\\Utils.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//\r\n// @\r\ninterface ISpriteData {\r\n    sprite_uuid: string;\r\n    newest_url: string;\r\n};\r\n\r\n// @\r\ntype PropsType = Record<string, \"ascending\" | \"descending\">;\r\n\r\n// @\r\nexport class Utils {\r\n    // @\r\n    // private static drop_seed: number = 1574822809; // (not used)\r\n    // private static seed: number = 1574822809;\r\n    // private static readonly chinese_num_array: ReadonlyArray<string> = [\"零\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\", \"十\", \"百\", \"千\", \"万\"];\r\n    private static readonly sprite_data_map: Record<string, ISpriteData> = {};\r\n\r\n    // @@ (not used)\r\n    /* public static get_component_in_self_or_children<T  extends cc.Component>(node: cc.Node, component: { prototype: T }): T | null {\r\n        return node.getComponent<T>(component) || node.getComponentInChildren<T>(component);\r\n    } */\r\n\r\n    // @@\r\n    public static set_sprite_state(node: cc.Node, state: cc.Sprite.State, includeChildren: boolean = true): void {\r\n        if (!node || !(node instanceof cc.Node)) return;\r\n        const sprites: cc.Sprite[] = [];\r\n        const spriteComponent: cc.Sprite = node.getComponent(cc.Sprite);\r\n        if (spriteComponent) sprites.push(spriteComponent);\r\n        if (includeChildren) {\r\n            const spriteCompInChildren: cc.Sprite[] = node.getComponentsInChildren(cc.Sprite);\r\n            if (spriteCompInChildren && spriteCompInChildren.length > 0) {\r\n                sprites.push(...spriteCompInChildren);\r\n            }\r\n        }\r\n        const spriteState = state === cc.Sprite.State.NORMAL ? \"2d-sprite\" : \"2d-gray-sprite\";\r\n        for (const sprite of sprites) {\r\n            sprite.setMaterial(0, cc.Material.getBuiltinMaterial(spriteState));\r\n        }\r\n        //\r\n        const labels: cc.Label[] = [];\r\n        const labelComponent: cc.Label = node.getComponent(cc.Label);\r\n        if (labelComponent) labels.push(labelComponent);\r\n        if (includeChildren) {\r\n            const labelCompInChildren: cc.Label[] = node.getComponentsInChildren(cc.Label);\r\n            if (labelCompInChildren && labelCompInChildren.length > 0) {\r\n                labels.push(...labelCompInChildren);\r\n            }\r\n        }\r\n        for (let label of labels) {\r\n            label.setMaterial(0, cc.Material.getBuiltinMaterial(spriteState));\r\n        }\r\n    } // end: set_sprite_state\r\n\r\n    // @@\r\n    // Một gói (bundle) chứa một lượng tài sản (bao gồm scene), bạn có thể tải, tải trước, phát hành tài sản có trong gói này.\r\n    public static async_get_bundle(bundleName: string, callback: (bundle: cc.AssetManager.Bundle) => void): void {\r\n        if (!bundleName || typeof bundleName !== \"string\") return;\r\n        // cc.assetManager.getBundle: Lấy gói đã được tải.\r\n        const bundle: cc.AssetManager.Bundle = cc.assetManager.getBundle(bundleName);\r\n        if (bundle) {\r\n            if (typeof callback === \"function\") callback(bundle);\r\n            return;\r\n        }\r\n        // tải gói (bundle) từ một URL hoặc một thư mục.\r\n        cc.assetManager.loadBundle(bundleName, (error: Error, loadedBundle: cc.AssetManager.Bundle) => {\r\n            if (error) {\r\n                cc.error(`async_get_bundle: load [${bundleName}] bundle failed,`, error);\r\n            } else {\r\n                cc.log(`async_get_bundle: load [${bundleName}] bundle successfully.`);\r\n                if (typeof callback === \"function\") callback(loadedBundle);\r\n            }\r\n        });\r\n    }\r\n\r\n    // @@\r\n    public static async_set_sprite_frame(\r\n        sprite: cc.Sprite,\r\n        bundleName: string,\r\n        path: string,\r\n        callback?: (spriteFrame: cc.SpriteFrame) => void,\r\n        context?: object): void {\r\n        if (!sprite || !(sprite instanceof cc.Sprite)) return;\r\n        // cập nhật SpriteFrame \"path\" cho sprite này để check lại sau khi tải xong.\r\n        this.sprite_data_map[sprite.uuid] = { sprite_uuid: sprite.uuid, newest_url: path };\r\n        //\r\n        this.async_get_bundle(bundleName, (loadedBundle: cc.AssetManager.Bundle) => {\r\n            // Nhận tài sản trong gói này theo đường dẫn và loại.\r\n            const spriteFrame: cc.SpriteFrame = loadedBundle.get<cc.SpriteFrame>(path, cc.SpriteFrame);\r\n            if (spriteFrame) {\r\n                const currentSpriteData: ISpriteData = this.sprite_data_map[sprite.uuid];\r\n                // nếu sprite còn tồn tại và newest_url chưa thay đổi thì set spriteFrame cho sprite.\r\n                if (currentSpriteData && path === currentSpriteData.newest_url && sprite.isValid) {\r\n                    sprite.spriteFrame = spriteFrame;\r\n                    if (typeof callback === \"function\" && context) callback.call(context, spriteFrame);\r\n                }\r\n                return;\r\n            }\r\n            // Tải tài sản trong gói này theo đường dẫn tương đối với đường dẫn của gói.\r\n            loadedBundle.load(path, cc.SpriteFrame, (error: Error, loadedSpriteFrame: cc.SpriteFrame) => {\r\n                if (error) {\r\n                    cc.error(`async_set_sprite_frame: load SpriteFrame [${bundleName}] failed.`, error.message);\r\n                } else {\r\n                    const currentSpriteData: ISpriteData = this.sprite_data_map[sprite.uuid];\r\n                    // nếu sprite còn tồn tại và newest_url chưa thay đổi thì set spriteFrame cho sprite.\r\n                    if (currentSpriteData && path === currentSpriteData.newest_url && sprite.isValid) {\r\n                        sprite.spriteFrame = loadedSpriteFrame;\r\n                        if (typeof callback === \"function\" && context) callback.call(context, loadedSpriteFrame);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    } // end: async_set_sprite_frame\r\n\r\n    // @@\r\n    public static format_time(seconds: number): string {\r\n        const hours = Math.floor(seconds / 3600);\r\n        const minutes = Math.floor((seconds % 3600) / 60);\r\n        const secs = Math.floor(seconds % 60);\r\n        return `${hours < 10 ? \"0\" + hours : hours}:${minutes < 10 ? \"0\" + minutes : minutes}:${secs < 10 ? \"0\" + secs : secs}`;\r\n    }\r\n\r\n    public static format_time_miunte(seconds: number): string {\r\n        const minutes = Math.floor(seconds / 60);\r\n        const secs = seconds % 60;\r\n        return (minutes < 10 ? \"0\" + minutes : minutes.toString()) + \":\" + (secs < 10 ? \"0\" + secs : secs.toString());\r\n    }\r\n\r\n    // @@ (not used)\r\n    /* public static random(integer: boolean = false, min: number = 0, max: number = 1): number {\r\n        this.seed = (9301 * this.seed + 49297) % 233280;\r\n        const randomValue = min + (this.seed / 233280) * (max - min);\r\n        return integer ? Math.floor(randomValue) : randomValue;\r\n    } */\r\n\r\n    // @@\r\n    public static math_random(integer: boolean = false, min: number = 0, max: number = 1): number {\r\n        const randomValue = min + Math.random() * (max - min);\r\n        return integer ? Math.floor(randomValue) : randomValue;\r\n    }\r\n\r\n    // @@ (not used)\r\n    /* static rand_from_rate_arr(rateArr: number[]): number {\r\n        if (rateArr.length <= 0) return 0;\r\n        const randomValue = Math.floor(Math.random() * rateArr[rateArr.length - 1]);\r\n        for (let i = 0; i < rateArr.length; i++) {\r\n            if (randomValue < rateArr[i]) return i;\r\n        }\r\n        return rateArr.length - 1;\r\n    } */\r\n\r\n    // @@ (not used) (giống rand_from_rate_arr)\r\n    /* public static randFromRateArr(rateArr: number[]): number {\r\n        if (rateArr.length <= 0) return 0;\r\n        const randomValue = Math.floor(Math.random() * rateArr[rateArr.length - 1]);\r\n        for (let i = 0; i < rateArr.length; i++) {\r\n            if (randomValue < rateArr[i]) return i;\r\n        }\r\n        return rateArr.length - 1;\r\n    } */\r\n\r\n    // @@ (not used)\r\n    /* public static angle2radian(angle: number, normalize: boolean = true): number {\r\n        return (normalize ? (angle + 360) % 360 : angle) / 180 * Math.PI;\r\n    } */\r\n\r\n    // @@ (not used)\r\n    /* public static radian2angle(radian: number, normalize: boolean = true): number {\r\n        return (normalize ? (radian + 2 * Math.PI) % (2 * Math.PI) : radian) / Math.PI * 180;\r\n    } */\r\n\r\n    // @@ (not used)\r\n    /* public static date_format(date: Date, format: string): string {\r\n        if (!date || typeof date !== \"object\" || !(date instanceof Date) || typeof format !== \"string\") return \"\";\r\n        const dObj: Record<string, number> = {\r\n            M: date.getMonth() + 1,\r\n            d: date.getDate(),\r\n            h: date.getHours(),\r\n            m: date.getMinutes(),\r\n            s: date.getSeconds(),\r\n            q: Math.floor(date.getMonth() / 3) + 1,\r\n            S: date.getMilliseconds()\r\n        };\r\n        return format.replace(/([yMdhmsqS])+/g, (match: string, key: string) => {\r\n            const value = dObj[key];\r\n            if (value !== undefined) {\r\n                if (match.length > 1) {\r\n                    const valStr = \"0\" + value;\r\n                    return valStr.substr(valStr.length - 2);\r\n                 } else {\r\n                    return value.toString();\r\n                 }\r\n            } else if (key === \"y\") {\r\n                return `${date.getFullYear()}`.substr(4 - match.length);\r\n            }\r\n            return match;\r\n        });\r\n    } */\r\n\r\n    // @@ (format e.g: \"dd:mm:ss\")\r\n    public static time_format(seconds: number, format: string): string {\r\n        if (typeof seconds !== \"number\" || Number.isNaN(seconds) || typeof format !== \"string\") return \"\";\r\n        const dObj: Record<string, number> = {\r\n            d: Math.floor(seconds / 86400),\r\n            h: Math.floor((seconds % 86400) / 3600),\r\n            m: Math.floor((seconds % 86400 % 3600) / 60),\r\n            s: Math.floor(seconds % 86400 % 3600 % 60)\r\n        };\r\n        return format.replace(/([dhms])+/g, (substring: string, key: string) => {\r\n            const value: number | undefined = dObj[key];\r\n            if (value !== undefined) {\r\n                if (substring.length > 1) {\r\n                    const valStr = \"0\" + value;\r\n                    return valStr.substr(valStr.length - 2);\r\n                } else {\r\n                    return value.toString();\r\n                }\r\n            } else {\r\n                return substring;\r\n            }\r\n        });\r\n    }\r\n\r\n    // @@ (not used)\r\n    /* public static get_total_day(timestamp: number): number {\r\n        const localTimeSt = timestamp - 60000 * new Date().getTimezoneOffset();\r\n        return Math.floor(localTimeSt / 86400000);\r\n    } */\r\n\r\n    // @ (không sử dụng nên check một lần)\r\n    /* public static number_to_chinese(num: number): string {\r\n        const e1 = Math.floor(num);\r\n        if (e1 >= 0 && e1 < 100) {\r\n            if (e1 <= 10) return this.chinese_num_array[num];\r\n            if (e1 <= 19) return this.chinese_num_array[10] + this.chinese_num_array[num % 10];\r\n            const a = num % 10 > 0 ? this.chinese_num_array[num % 10] : \"\";\r\n            return this.chinese_num_array[Math.floor(num / 10)] + this.chinese_num_array[10] + a;\r\n        }\r\n        if (e1 >= 100 && e1 < 1000) {\r\n            const str = e1.toString();\r\n            const a = Number(str.substring(0, 1));\r\n            const e = Number(str.substring(1, 2));\r\n            const t = Number(str.substring(2, 3));\r\n            if (e === 0 && t === 0) return this.chinese_num_array[a] + this.chinese_num_array[11];\r\n            if (e === 0 && t !== 0) return this.chinese_num_array[a] + this.chinese_num_array[11] + this.chinese_num_array[0] + this.chinese_num_array[t];\r\n            if (e !== 0 && t === 0) return this.chinese_num_array[a] + this.chinese_num_array[11] + this.chinese_num_array[e] + this.chinese_num_array[10];\r\n            return this.chinese_num_array[a] + this.chinese_num_array[11] + this.chinese_num_array[e] + this.chinese_num_array[10] + this.chinese_num_array[t];\r\n        }\r\n        return \"\";\r\n    } */\r\n\r\n    // @@\r\n    public static numFormat(num: number, decimal: number = 0, upperCase: boolean = true): string {\r\n        let value = num;\r\n        const units = [\"万\", \"亿\", \"万亿\", \"亿亿\", \"P\", \"E\"];\r\n        let unitIndex = 0;\r\n        while (value >= 10000 && unitIndex < units.length) {\r\n            value /= 10000;\r\n            unitIndex++;\r\n        }\r\n        value = Math.floor(value * Math.pow(10, decimal)) / Math.pow(10, decimal);\r\n        let unit = \"\";\r\n        if (unitIndex > 0) {\r\n            unit = units[unitIndex - 1];\r\n            unit = upperCase ? unit.toLocaleUpperCase() : unit.toLocaleLowerCase();\r\n        }\r\n        return `${value}${unit}`;\r\n    }\r\n\r\n    // @ (not used)\r\n    /* public static server_http_request(callback: (response: any) => void, context: object, url: string): void {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status >= 200 && xhr.status < 400) {\r\n                    const response = JSON.parse(xhr.responseText);\r\n                    if (callback) callback.apply(context, [response]);\r\n                    console.log(xhr.responseText);\r\n                } else if (xhr.status < 100 || xhr.status >= 400) {\r\n                    cc.error(\"Request failed\");\r\n                }\r\n            }\r\n        };\r\n        console.log(\"request: \" + url);\r\n        xhr.open(\"GET\", url, true);\r\n        xhr.send();\r\n    } */\r\n\r\n    // @@ (not used), function => null\r\n    /* public static deep_copy<T>(obj: T): T {\r\n        const map = new Map();\r\n        function clone<T>(item: T): T {\r\n            const type: string = typeof item;\r\n            if (item && type === \"object\") {\r\n                if (map.has(item)) return map.get(item);\r\n                let result: any[] | Record<string, any>;\r\n                if (Array.isArray(item)) {\r\n                    result = [];\r\n                    map.set(item, result);\r\n                    item.forEach((value: any, index: number) => {\r\n                        result[index] = clone(value);\r\n                    });\r\n                } else {\r\n                    result = {};\r\n                    map.set(item, result);\r\n                    for (const key in item) {\r\n                        if (item.hasOwnProperty(key)) {\r\n                            result[key] = clone(item[key]);\r\n                        }\r\n                    }\r\n                }\r\n                //\r\n                return result as T;\r\n            }\r\n            return type === \"function\" ? null : item;\r\n        }\r\n        return clone(obj);\r\n    } */\r\n\r\n    // @@\r\n    // props e.g: { itemID: \"ascending\" }, { itemID: \"descending\" }\r\n    public static sort_by_props<T>(objArr: T[], props: PropsType): T[] {\r\n        return objArr.sort((objA: T, objB: T) => this._compare_by_props<T>(objA, objB, props));\r\n    }\r\n\r\n    /* @@\r\n    return: order (1 | -1 | 0)\r\n    */\r\n    private static _compare_by_props<T>(objA: T, objB: T, props: PropsType): number {\r\n        if (typeof objA !== \"object\" || typeof objB !== \"object\") return 0;\r\n        // ascending(tăng dần), descending(giảm dần)\r\n        const orders: number[] = [];\r\n        const propsArr: PropsType[] = [];\r\n        if (props && typeof props === \"object\") propsArr.push(props);\r\n        // \r\n        if (propsArr.length < 1) {\r\n            // ascending by default\r\n            for (const key in objA) {\r\n                if (objA[key] > objB[key]) {\r\n                    orders.push(1);\r\n                    break;\r\n                }\r\n                if (objA[key] !== objB[key]) {\r\n                    orders.push(-1);\r\n                    break;\r\n                }\r\n                orders.push(0);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < propsArr.length; i++) {\r\n                const props = propsArr[i];\r\n                for (const key in props) {\r\n                    const asc = props[key] === \"ascending\";\r\n                    if (objA[key] > objB[key]) {\r\n                        orders.push(asc ? 1 : -1);\r\n                        break;\r\n                    }\r\n                    if (objA[key] !== objB[key]) {\r\n                        orders.push(asc ? -1 : 1);\r\n                        break;\r\n                    }\r\n                    orders.push(0);\r\n                }\r\n            }\r\n        }\r\n        for (const order of orders) {\r\n            if (order === 1 || order === -1) return order;\r\n        }\r\n        return 0;\r\n    } // end: _compare_by_props\r\n\r\n    // @ (không sử dụng nên check một lần)\r\n    /* public static find_plus(path: string, root?: cc.Node): cc.Node | null {\r\n        if (!path || typeof path !== \"string\") return null;\r\n        let currentNode: cc.Scene | cc.Node = root;\r\n        if (!root || !(root instanceof cc.Node)) {\r\n            const scene: cc.Scene = cc.director.getScene();\r\n            if (!scene) return null;\r\n            currentNode = scene;\r\n        }\r\n        const startIndex = path[0] !== '/' ? 0 : 1;\r\n        const segments: string[] = path.split(\"/\");\r\n        //\r\n        for (let i = startIndex; i < segments.length; i++) {\r\n            const segment: string[] = segments[i].split(\"$\");\r\n            const index: number = segment.length === 2 ? parseInt(segment[1]) : 0;\r\n            const name: string = segment[0];\r\n            const children: cc.Node[] = currentNode.children;\r\n            if (!Array.isArray(children) || children.length < 1) return null;\r\n            currentNode = null;\r\n            let count = 0;\r\n            for (const child of children) {\r\n                if (child.name === name) {\r\n                    if (index === count) {\r\n                        currentNode = child;\r\n                        break;\r\n                    }\r\n                    count++;\r\n                }\r\n            }\r\n            if (!currentNode) return null;\r\n        }\r\n        return currentNode;\r\n    } */\r\n\r\n    // @@ (not used)\r\n    /* public static damage_float(baseDamage: number, minMultiplier: number, maxMultiplier: number): number {\r\n        const sign = Math.random() > 0.5 ? -1 : 1;\r\n        const minDamage = Math.floor(baseDamage * minMultiplier);\r\n        const maxDamage = Math.floor(baseDamage * maxMultiplier);\r\n        return baseDamage + Math.floor(Math.random() * (maxDamage - minDamage) + minDamage) * sign;\r\n    } */\r\n\r\n    // @@ (not used)\r\n    /* public static scroll_num(target: cc.Node, duration: number, startValue: number, endValue: number, callback: (value: number) => void): void {\r\n        const frames = Math.floor(60 * duration);\r\n        let elapsed = 0;\r\n        target.schedule((deltaTime: number) => {\r\n            callback(cc.misc.lerp(startValue, endValue, elapsed / duration));\r\n            elapsed += deltaTime;\r\n        }, 0, frames);\r\n    } */\r\n\r\n    // @@ (not used)\r\n    /* public static play_normal_anim(animation: cc.Animation, clipName: string, callback?: () => void): void {\r\n        if (!animation || !(animation instanceof cc.Animation) || !clipName || typeof clipName !== \"string\") return;\r\n        animation.targetOff(this);\r\n        animation.node.active = true;\r\n        animation.once(cc.Animation.EventType.FINISHED, () => {\r\n            animation.node.active = false;\r\n            if (typeof callback === \"function\") callback();\r\n        }, this);\r\n        animation.play(clipName, 0);\r\n    } */\r\n\r\n    // @@\r\n    public static align_with_parent(node: cc.Node): void {\r\n        if (!node || !(node instanceof cc.Node)) return;\r\n        let widget: cc.Widget = node.getComponent(cc.Widget);\r\n        if (!widget) widget = node.addComponent(cc.Widget);\r\n        widget.isAlignTop = widget.isAlignBottom = widget.isAlignLeft = widget.isAlignRight = true;\r\n        widget.top = widget.bottom = widget.left = widget.right = 0;\r\n    }\r\n\r\n    // @@\r\n    public static save_json_file(filename: string, data: object | string | number | boolean): void {\r\n        if (!filename || typeof filename !== \"string\" || !data) return;\r\n        let dataStr: string = \"\";\r\n        if (typeof data === \"object\" || typeof data === \"string\") {\r\n            dataStr = JSON.stringify(data);\r\n        } else {\r\n            dataStr = data.toString();\r\n        }\r\n        const a = document.createElement(\"a\");\r\n        a.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(dataStr));\r\n        a.setAttribute(\"download\", filename);\r\n        if (document.createEvent) {\r\n            const event = document.createEvent(\"MouseEvents\");\r\n            event.initEvent(\"click\", true, true);\r\n            a.dispatchEvent(event);\r\n        } else {\r\n            a.click();\r\n        }\r\n    }\r\n\r\n    // @@ (not used)\r\n    /* public static get_date_str(): string {\r\n        const date = new Date();\r\n        const year = date.getFullYear();\r\n        const month = date.getMonth() + 1;\r\n        const day = date.getDate();\r\n        return `${year}-${month < 10 ? \"0\" : \"\"}${month}-${day < 10 ? \"0\" : \"\"}${day}`;\r\n    } */\r\n}\r\n"]}
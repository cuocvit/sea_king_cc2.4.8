{"version":3,"sources":["assets\\start-scene\\scripts\\AudioManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// @\r\nexport class AudioManager {\r\n    private static _instance: AudioManager | null = null;\r\n    private BUNDLE_NAME: string = \"common\";\r\n    private _music_pool: { [key: string]: number } = {};\r\n    private _effect_pool: { [key: string]: number } = {};\r\n    private _music_volume: number = 1;\r\n    private _music_volume_bak: number = 1;\r\n    private _music_mute: boolean = false;\r\n    private _effect_volume: number = 1;\r\n    private _effect_volume_bak: number = 1;\r\n    private _effect_mute: boolean = false;\r\n    private _max_volume: number = 1;\r\n    private _min_volume: number = 0;\r\n    private _current_music_name: string = \"\";\r\n    private _backup_music_name: string = \"\";\r\n  \r\n    private constructor() {}\r\n  \r\n    public static get instance(): AudioManager {\r\n      return this._instance || (this._instance = new AudioManager());\r\n    }\r\n  \r\n    // @\r\n    private get root_path(): string {\r\n      return \"audios/\";\r\n    }\r\n  \r\n    // @\r\n    private get cur_music_name(): string {\r\n      return this._current_music_name;\r\n    }\r\n  \r\n    // @\r\n    public get music_volume(): number {\r\n      return this._music_volume;\r\n    }\r\n  \r\n    // @\r\n    public set music_volume(value: number) {\r\n      value = Math.min(Math.max(value, this._min_volume), this._max_volume);\r\n      this._music_volume = value;\r\n      for (const key in this._music_pool) {\r\n        cc.audioEngine.setVolume(this._music_pool[key], this._music_volume);\r\n      }\r\n    }\r\n  \r\n    // @\r\n    public get effect_volume(): number {\r\n      return this._effect_volume;\r\n    }\r\n  \r\n    // @\r\n    public set effect_volume(value: number) {\r\n      this._effect_volume = Math.min(Math.max(value, this._min_volume), this._max_volume);\r\n    }\r\n  \r\n    // @\r\n    public get music_mute(): boolean {\r\n      return this._music_mute;\r\n    }\r\n  \r\n    // @\r\n    public set music_mute(value: boolean) {\r\n      this._music_mute = value;\r\n      if (this._music_mute) {\r\n        if (this._current_music_name) {\r\n          this._music_volume_bak = this.music_volume;\r\n          this.music_volume = 0;\r\n          this._backup_music_name = this._current_music_name;\r\n          this.stop(this._current_music_name);\r\n        }\r\n      } else {\r\n        if (this._backup_music_name) {\r\n          this.music_volume = this._music_volume_bak;\r\n          this._current_music_name = \"\";\r\n          this.play_music(this._backup_music_name);\r\n          this._backup_music_name = \"\";\r\n        }\r\n      }\r\n    }\r\n  \r\n    // @\r\n    public get effect_mute(): boolean {\r\n      return this._effect_mute;\r\n    }\r\n  \r\n    // @\r\n    public set effect_mute(value: boolean) {\r\n      this._effect_mute = value;\r\n          if (this._effect_mute) {\r\n              this._effect_volume_bak = this.effect_volume, \r\n              this.effect_volume = 0\r\n          } else {\r\n              this.effect_volume = this._effect_volume_bak\r\n          }\r\n    }\r\n  \r\n    // @\r\n    private get mute(): boolean {\r\n      return this.music_mute && this.effect_mute;\r\n    }\r\n  \r\n    // @\r\n    private set mute(value: boolean) {\r\n      this.music_mute = value;\r\n      this.effect_mute = value;\r\n      if (value) this.stop_all();\r\n    }\r\n  \r\n    // @\r\n    public play_music(name: string): void {\r\n      if (!name) return;\r\n      if (this._music_mute) {\r\n        this._backup_music_name = name;\r\n      } else if (name !== this._current_music_name) {\r\n        const path = this.root_path + name;\r\n        this.async_get_audio_clip(path, (clip: cc.AudioClip) => {\r\n          this.stop(this._current_music_name);\r\n          const audioId = cc.audioEngine.play(clip, true, this._music_volume);\r\n          this._music_pool[name] = audioId;\r\n          this._current_music_name = name;\r\n        });\r\n      }\r\n    }\r\n  \r\n    // @\r\n    public play_effect(name: string, loop: boolean = false): void {\r\n      if (this._effect_mute) return;\r\n      const path = this.root_path + name;\r\n      this.async_get_audio_clip(path, (clip: cc.AudioClip) => {\r\n        const audioId = cc.audioEngine.play(clip, loop, this._effect_volume);\r\n        this._effect_pool[name] = audioId;\r\n      });\r\n    }\r\n  \r\n    // @\r\n    private pause(name: string): void {\r\n      if (this._music_pool[name] >= 0) {\r\n        cc.audioEngine.pause(this._music_pool[name]);\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private resume(name: string): void {\r\n      if (this._music_pool[name] >= 0) {\r\n        cc.audioEngine.resume(this._music_pool[name]);\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private stop(name: string): void {\r\n      if (this._music_pool[name] >= 0) {\r\n        cc.audioEngine.stop(this._music_pool[name]);\r\n        this._current_music_name = \"\";\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private stop_effect(name: string): void {\r\n      if (this._effect_pool[name] >= 0) {\r\n        cc.audioEngine.stop(this._effect_pool[name]);\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private stop_all_effect(): void {\r\n      for (const key in this._effect_pool) {\r\n        if (this._effect_pool.hasOwnProperty(key) && this._effect_pool[key] >= 0) {\r\n          cc.audioEngine.stop(this._effect_pool[key]);\r\n        }\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private get_current_time(name: string): number {\r\n      return this._music_pool[name] >= 0 ? cc.audioEngine.getCurrentTime(this._music_pool[name]) : 0;\r\n    }\r\n  \r\n    // @\r\n    private get_duration(name: string): number {\r\n      return this._music_pool[name] >= 0 ? cc.audioEngine.getDuration(this._music_pool[name]) : 0;\r\n    }\r\n  \r\n    // @\r\n    private get_progress(name: string): number {\r\n      const duration = this.get_duration(name);\r\n      return duration > 0 ? this.get_current_time(name) / duration : 0;\r\n    }\r\n  \r\n    // @\r\n    private set_finish_callback(name: string, callback: Function): void {\r\n      if (this._music_pool[name] >= 0) {\r\n        cc.audioEngine.setFinishCallback(this._music_pool[name], callback);\r\n      } else if (this._effect_pool[name] >= 0) {\r\n        cc.audioEngine.setFinishCallback(this._effect_pool[name], callback);\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private get_state(name: string): number {\r\n      if (this._music_pool[name] >= 0) {\r\n        return cc.audioEngine.getState(this._music_pool[name]);\r\n      } else if (this._effect_pool[name] >= 0) {\r\n        return cc.audioEngine.getState(this._effect_pool[name]);\r\n      }\r\n      return cc.audioEngine.AudioState.ERROR;\r\n    }\r\n  \r\n    // @\r\n    private uncache(name: string): void {\r\n      const path = this.root_path + name;\r\n      this.async_get_audio_clip(path, (clip: cc.AudioClip) => {\r\n        cc.audioEngine.uncache(clip);\r\n      });\r\n    }\r\n  \r\n    // @\r\n    private stop_all(): void {\r\n      cc.audioEngine.stopAll();\r\n    }\r\n  \r\n    // @\r\n    private pause_all(): void {\r\n      cc.audioEngine.pauseAll();\r\n    }\r\n  \r\n    // @\r\n    private resume_all(): void {\r\n      cc.audioEngine.resumeAll();\r\n    }\r\n  \r\n    // @\r\n    private uncache_all(): void {\r\n      cc.audioEngine.uncacheAll();\r\n    }\r\n  \r\n    // @\r\n    private release(name: string): void {\r\n      this.async_get_bundle(this.BUNDLE_NAME, (bundle: cc.AssetManager.Bundle) => {\r\n        bundle.release(this.root_path + name);\r\n      });\r\n    }\r\n  \r\n    // @\r\n    private release_all_music(): void {\r\n      for (const key in this._music_pool) {\r\n        const path = this.root_path + key;\r\n        this.async_get_audio_clip(path, (clip: cc.AudioClip) => {\r\n          cc.audioEngine.uncache(clip);\r\n        });\r\n        this.async_get_bundle(this.BUNDLE_NAME, (bundle: cc.AssetManager.Bundle) => {\r\n          bundle.release(path);\r\n        });\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private release_all_effect(): void {\r\n      for (const key in this._effect_pool) {\r\n        const path = this.root_path + key;\r\n        this.async_get_audio_clip(path, (clip: cc.AudioClip) => {\r\n          cc.audioEngine.uncache(clip);\r\n        });\r\n        this.async_get_bundle(this.BUNDLE_NAME, (bundle: cc.AssetManager.Bundle) => {\r\n          bundle.release(path);\r\n        });\r\n      }\r\n    }\r\n  \r\n    // @\r\n    private async_get_audio_clip(path: string, callback: (clip: cc.AudioClip) => void): void {\r\n      this.async_get_bundle(this.BUNDLE_NAME, (bundle: cc.AssetManager.Bundle) => {\r\n        const clip = bundle.get<cc.AudioClip>(path, cc.AudioClip);\r\n        if (clip) {\r\n          callback(clip);\r\n        } else {\r\n          // bundle <=> cc.resources\r\n          bundle.load(path, cc.AudioClip, (error: Error, loadedClip: cc.AudioClip) => {\r\n            if (error) {\r\n              cc.error(error);\r\n            } else {\r\n              callback(loadedClip);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  \r\n    // @\r\n    private async_get_bundle(name: string, callback: (bundle: cc.AssetManager.Bundle) => void): void {\r\n      const bundle: cc.AssetManager.Bundle = cc.assetManager.getBundle(name);\r\n      if (bundle) {\r\n        callback(bundle);\r\n      } else {\r\n        cc.assetManager.loadBundle(name, (error: Error, loadedBundle: cc.AssetManager.Bundle) => {\r\n          if (error) {\r\n            console.error(error);\r\n          } else {\r\n            console.log(\"load \" + name + \" bundle successfully.\");\r\n            callback(loadedBundle);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  "]}
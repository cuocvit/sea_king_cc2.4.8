{"version":3,"sources":["assets\\start-scene\\scripts\\ListView.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["//\r\nimport { BuyItemData } from \"../../buy/scripts/data\";\r\nimport { rewardArr } from \"../../common/configs/ladder_building\";\r\nimport {\r\n    BasePropItemData,\r\n    FightHeroItemData,\r\n    FightResultData,\r\n    FightResultPropItemData,\r\n    FightRewardItemData,\r\n} from \"./FightTempData\";\r\nimport {\r\n    LadderAchievementItemData,\r\n    LadderBuildingRankItemData,\r\n    LadderRankItemData,\r\n} from \"./LadderTempData\";\r\nimport { ListViewItem } from \"./ListViewItem\";\r\nimport {\r\n    MailHeroItemData,\r\n    MailInboxItemData,\r\n    MailLogItemData,\r\n} from \"./MailTempData\";\r\nimport { SignItemData } from \"./SignData\";\r\nimport { StoreItemData } from \"./StoreData\";\r\nimport { LocalHeroItemVO } from \"./TempData\";\r\nimport { TurtleExchangeItemData } from \"./TurtleExchangeData\";\r\n\r\nconst { ccclass, property, menu } = cc._decorator;\r\n\r\nexport enum Direction {\r\n    HORIZONTAL = 0,\r\n    VERTICAL = 1,\r\n    NONE = 2,\r\n}\r\nexport type SetData =\r\n    | FightResultData\r\n    | FightHeroItemData\r\n    | FightRewardItemData\r\n    | FightResultPropItemData\r\n    | LadderRankItemData\r\n    | BasePropItemData\r\n    | LadderBuildingRankItemData\r\n    | LadderAchievementItemData\r\n    | rewardArr\r\n    | MailLogItemData\r\n    | MailInboxItemData\r\n    | MailHeroItemData\r\n    | StoreItemData\r\n    | LocalHeroItemVO\r\n    | TurtleExchangeItemData\r\n    | SignItemData\r\n    | BuyItemData;\r\n\r\n@ccclass\r\n@menu(\"添加自定义组件/ListView\")\r\nexport class ListView extends cc.Component {\r\n    @property({ type: cc.ScrollView, tooltip: \"滚动视图，可空\" })\r\n    public scrollView: cc.ScrollView | null = null;\r\n\r\n    @property({ type: cc.Node, tooltip: \"Item的父节点\" })\r\n    private content: cc.Node | null = null;\r\n\r\n    @property({ type: cc.Prefab, tooltip: \"item模板\" })\r\n    private itemPrefab: cc.Prefab | null = null;\r\n\r\n    @property({ type: cc.Node, tooltip: \"选中框和占位符的父节点\" })\r\n    private contentBrother: cc.Node | null = null;\r\n\r\n    @property({ type: cc.Prefab, tooltip: \"选中框模板，可空\" })\r\n    private selectBoxPrefab: cc.Prefab | null = null;\r\n\r\n    @property({ tooltip: \"是否可以多选,单选不能取消选择，多选可以取消选择\" })\r\n    private isMultiSelect: boolean = false;\r\n\r\n    @property({ type: cc.Enum(Direction), tooltip: \"列表滚动方向\" })\r\n    private direction: Direction = Direction.NONE;\r\n\r\n    @property({\r\n        type: cc.Integer,\r\n        min: 0,\r\n        tooltip: \"组的大小，垂直滚动时一行为一组，水平滚动时一列为一组\",\r\n    })\r\n    private groupSize: number = 0;\r\n\r\n    @property({ tooltip: \"item间距, X行间距 Y列间距\" })\r\n    private spacing: cc.Vec2 = new cc.Vec2(0, 0);\r\n\r\n    @property({ type: cc.Node, tooltip: \"坐标列表\" })\r\n    private positionNodeList: cc.Node[] = [];\r\n\r\n    private _maxItemCount: number = 0;\r\n    private _itemList: ListViewItem[] = [];\r\n    private _dataList: SetData[] = [];\r\n    private _selectIndexList: { [key: number]: boolean } = {};\r\n    private _selectIndex: number = -1;\r\n    private _selectBoxList: { [key: number]: cc.Node } = {};\r\n    private _selectBoxPool: cc.NodePool = new cc.NodePool();\r\n    private _placeholderList: { [key: number]: cc.Node } = {};\r\n    private _placeholderPool: cc.NodePool = new cc.NodePool();\r\n    private _lastStartIndex: number = 0;\r\n    private _curStartIndex: number = 0;\r\n    private _itemSizeList: Record<number, cc.Size> = {};\r\n\r\n    public get _direction(): Direction {\r\n        return this.direction;\r\n    }\r\n\r\n    public set _direction(value: Direction) {\r\n        this.direction = value;\r\n        this.updateProperty();\r\n    }\r\n\r\n    public get _groupSize(): number {\r\n        return this.groupSize;\r\n    }\r\n\r\n    public set _groupSize(value: number) {\r\n        this.groupSize = value;\r\n        this.updateProperty();\r\n    }\r\n\r\n    public get _spacing(): cc.Vec2 {\r\n        return this.spacing;\r\n    }\r\n\r\n    public set _spacing(value: cc.Vec2) {\r\n        this.spacing = value;\r\n        this.updateProperty();\r\n    }\r\n\r\n    protected onLoad(): void {\r\n        this.updateProperty();\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        if (this.scrollView) {\r\n            this.scrollView.node.on(\r\n                \"scroll-began\",\r\n                this.onListScrollHandler,\r\n                this\r\n            );\r\n            this.scrollView.node.on(\r\n                \"scrolling\",\r\n                this.onListScrollHandler,\r\n                this\r\n            );\r\n            this.scrollView.node.on(\r\n                \"scroll-ended\",\r\n                this.onListScrollHandler,\r\n                this\r\n            );\r\n        }\r\n\r\n        if (this.contentBrother && this.selectBoxPrefab) {\r\n            this.content.on(\"position-changed\", this.onNodeChangeHandler, this);\r\n            this.content.on(\"size-changed\", this.onNodeChangeHandler, this);\r\n        }\r\n    }\r\n\r\n    private preCreateItems(count: number, shouldCreate: boolean = true): void {\r\n        if (!(count < 0)) {\r\n            if (shouldCreate) {\r\n                const maxCount = Math.min(count, this.getMaxItemCount());\r\n                if (this._itemList.length < maxCount)\r\n                    for (\r\n                        let index = this._itemList.length;\r\n                        index < maxCount;\r\n                        index++\r\n                    ) {\r\n                        this.createItem(false);\r\n                    }\r\n            } else {\r\n                let item: ListViewItem;\r\n                for (\r\n                    let index = 0;\r\n                    index < this.content.childrenCount;\r\n                    index++\r\n                ) {\r\n                    item =\r\n                        this.content.children[index].getComponent(ListViewItem);\r\n                    this._itemList.push(item);\r\n                }\r\n            }\r\n\r\n            if (this._itemList.length != this.content.childrenCount) {\r\n                cc.warn(\"item 列表长度与孩子节点数不相等\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private getPositionByIndex(index: number): cc.Vec2 {\r\n        if (index < 0) {\r\n            cc.warn(\"索引不能小于0\");\r\n            return cc.Vec2.ZERO;\r\n        }\r\n        if (!this._itemSizeList.hasOwnProperty(index.toString())) {\r\n            cc.warn(\"error index:%d\", index);\r\n        }\r\n\r\n        Math.floor(index / this._groupSize);\r\n        const itemIndex = Math.floor(index % this._groupSize);\r\n        const position = cc.Vec2.ZERO;\r\n\r\n        if (this._direction == Direction.HORIZONTAL) {\r\n            position.x = this.calcX(0, index, this._groupSize, this._spacing.x);\r\n            position.y =\r\n                -1 * this.calcY(index - itemIndex, index, 1, this._spacing.y);\r\n        } else if (this._direction == Direction.VERTICAL) {\r\n            position.x = this.calcX(\r\n                index - itemIndex,\r\n                index,\r\n                1,\r\n                this._spacing.x\r\n            );\r\n            position.y =\r\n                -1 * this.calcY(0, index, this._groupSize, this._spacing.y);\r\n        }\r\n\r\n        const anchor = cc.v2(0, 1);\r\n        const contentAnchor = this.content.getAnchorPoint();\r\n\r\n        if (anchor.x != contentAnchor.x || anchor.y != contentAnchor.y) {\r\n            return this.convertAnchor(\r\n                position,\r\n                this.getContentSize(),\r\n                anchor,\r\n                contentAnchor\r\n            );\r\n        } else {\r\n            return position;\r\n        }\r\n    }\r\n\r\n    private calcX(\r\n        start: number,\r\n        end: number,\r\n        groupSize: number,\r\n        spacing: number\r\n    ): number {\r\n        let totalWidth = 0;\r\n        const rowCount = Math.floor(end / groupSize);\r\n        for (let index = start; index <= end; index += groupSize) {\r\n            const itemWidth = (\r\n                this._itemSizeList[index] || this.itemPrefab.data\r\n            ).width;\r\n            totalWidth +=\r\n                index < rowCount * groupSize\r\n                    ? itemWidth + spacing\r\n                    : 0.5 * itemWidth;\r\n        }\r\n        return totalWidth;\r\n    }\r\n\r\n    private calcY(\r\n        start: number,\r\n        end: number,\r\n        groupSize: number,\r\n        spacing: number\r\n    ): number {\r\n        let totalHeight = 0;\r\n        const rowCount = Math.floor(end / groupSize);\r\n        for (let index = start; index <= end; index += groupSize) {\r\n            const itemHeight = (\r\n                this._itemSizeList[index] || this.itemPrefab.data\r\n            ).height;\r\n            totalHeight +=\r\n                index < rowCount * groupSize\r\n                    ? itemHeight + spacing\r\n                    : 0.5 * itemHeight;\r\n        }\r\n        return totalHeight;\r\n    }\r\n\r\n    private getItemData(index: number): ListViewItem {\r\n        const endIndex = this._lastStartIndex + this._maxItemCount - 1;\r\n        if (!(index < this._lastStartIndex || endIndex < index)) {\r\n            return this._itemList[index % this._maxItemCount].data;\r\n        }\r\n    }\r\n\r\n    private setItemData(index: number, data: SetData): void {\r\n        const endIndex = this._lastStartIndex + this._maxItemCount - 1;\r\n        if (\r\n            index >= this._lastStartIndex &&\r\n            endIndex >= index &&\r\n            data != null\r\n        ) {\r\n            this._dataList[index] = data;\r\n            this._itemList[index % this._maxItemCount].data = data;\r\n        }\r\n    }\r\n\r\n    public getItem(index: number): ListViewItem {\r\n        const endIndex = this._lastStartIndex + this._maxItemCount - 1;\r\n        if (!(index < this._lastStartIndex || endIndex < index)) {\r\n            return this._itemList[index % this._maxItemCount];\r\n        }\r\n    }\r\n\r\n    public get selectIndex(): number {\r\n        return this._selectIndex;\r\n    }\r\n\r\n    public get selectIndexList(): number[] {\r\n        const result = [];\r\n        for (const t in this._selectIndexList) {\r\n            result.push(parseInt(t));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private getSelect(index: number): boolean {\r\n        return this._selectIndexList[index];\r\n    }\r\n\r\n    private setSelect(index: number, selected: boolean): void {\r\n        let item: ListViewItem;\r\n        if (index >= 0 && this.getSelect(index) != selected) {\r\n            this._selectIndex = index;\r\n            if (selected) {\r\n                if (index < this._dataList.length) {\r\n                    this._selectIndexList[index] = true;\r\n                    if (this.selectBoxPrefab && this.contentBrother) {\r\n                        if (!this._selectBoxList[index]) {\r\n                            if (this._selectBoxPool.size() > 0) {\r\n                                this._selectBoxList[index] =\r\n                                    this._selectBoxPool.get();\r\n                            } else {\r\n                                this._selectBoxList[index] = cc.instantiate(\r\n                                    this.selectBoxPrefab\r\n                                );\r\n                            }\r\n\r\n                            this.contentBrother.addChild(\r\n                                this._selectBoxList[index],\r\n                                1\r\n                            );\r\n                        }\r\n\r\n                        if (this._direction != Direction.NONE) {\r\n                            this._selectBoxList[index].setPosition(\r\n                                this.getPositionByIndex(index)\r\n                            );\r\n                            item = this.getItem(index);\r\n                            if (item) {\r\n                                item.select = true;\r\n                            }\r\n                        } else {\r\n                            item = this.getItem(index);\r\n                            if (item) {\r\n                                this._selectBoxList[index].setPosition(\r\n                                    item.node.getPosition()\r\n                                );\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                item = this.getItem(index);\r\n                if (item) {\r\n                    item.select = false;\r\n                }\r\n                delete this._selectIndexList[index];\r\n                if (\r\n                    this.selectBoxPrefab &&\r\n                    this.contentBrother &&\r\n                    this._selectBoxList[index]\r\n                ) {\r\n                    this._selectBoxPool.put(this._selectBoxList[index]);\r\n                    delete this._selectBoxList[index];\r\n                }\r\n            }\r\n\r\n            if (index < this._dataList.length) {\r\n                this.dispatchEvent(\"item-selected\", true, selected);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getData(): SetData[] {\r\n        return this._dataList;\r\n    }\r\n\r\n    public setData(data: SetData[]): void {\r\n        let item: ListViewItem;\r\n        const args: IArguments[] = [];\r\n        for (let index = 1; index < arguments.length; index++) {\r\n            args[index - 1] = arguments[index];\r\n        }\r\n        if (!(data == null || this._groupSize < 0)) {\r\n            this._dataList = data;\r\n            this._maxItemCount = this.getMaxItemCount();\r\n            this.content.setContentSize(this.getContentSize());\r\n\r\n            for (let index = 0; index < data.length; index++) {\r\n                item = this._itemList[index % this._maxItemCount];\r\n                item = item ? item : this.createItem(true, args);\r\n                item.node.active = true;\r\n\r\n                if (\r\n                    index >= this._lastStartIndex &&\r\n                    index < this._lastStartIndex + this._maxItemCount\r\n                ) {\r\n                    this.updateItemByIndex(index);\r\n                }\r\n                if (item.interactable) {\r\n                    item.node.off(\"touchend\", this.onItemClickHandler, this);\r\n                    item.node.on(\"touchend\", this.onItemClickHandler, this);\r\n                    if (!cc.sys.isMobile) {\r\n                        item.node.off(\r\n                            cc.Node.EventType.MOUSE_ENTER,\r\n                            this.onItemMouseEnterHandler,\r\n                            this\r\n                        );\r\n                        item.node.on(\r\n                            cc.Node.EventType.MOUSE_ENTER,\r\n                            this.onItemMouseEnterHandler,\r\n                            this\r\n                        );\r\n                        item.node.off(\r\n                            cc.Node.EventType.MOUSE_LEAVE,\r\n                            this.onItemMouseLeaveHandler,\r\n                            this\r\n                        );\r\n                        item.node.on(\r\n                            cc.Node.EventType.MOUSE_LEAVE,\r\n                            this.onItemMouseLeaveHandler,\r\n                            this\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (\r\n                let index = this._lastStartIndex + this._itemList.length - 1;\r\n                index >= data.length;\r\n                index--\r\n            ) {\r\n                if (index >= 0 && index < this._itemList.length) {\r\n                    this._itemList[index].reset();\r\n                    this._itemList[index].node.active = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(shouldReset: boolean = true): void {\r\n        if (shouldReset) {\r\n            if (this._selectIndex > -1) {\r\n                this.setSelect(this._selectIndex, false);\r\n                this._selectIndex = -1;\r\n            }\r\n\r\n            for (const key in this._selectIndexList) {\r\n                this.setSelect(parseInt(key), false);\r\n            }\r\n\r\n            this._itemSizeList = {};\r\n            this._lastStartIndex = 0;\r\n            if (this.scrollView) {\r\n                this.scrollView.stopAutoScroll();\r\n                if (this._direction == Direction.VERTICAL) {\r\n                    this.scrollView.content.height = 0;\r\n                } else if (this._direction == Direction.HORIZONTAL) {\r\n                    this.scrollView.content.width = 0;\r\n                }\r\n            }\r\n        }\r\n        for (const key in this._placeholderList) {\r\n            this._placeholderPool.put(this._placeholderList[key]);\r\n            delete this._placeholderList[key];\r\n        }\r\n\r\n        for (let index = this._itemList.length - 1; 0 <= index; index--) {\r\n            if (this._itemList[index].interactable) {\r\n                this._itemList[index].node.off(\r\n                    \"touchend\",\r\n                    this.onItemClickHandler,\r\n                    this\r\n                );\r\n            }\r\n            this._itemList[index].reset();\r\n            if (shouldReset) {\r\n                this._itemList[index].node.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private release(): void {\r\n        this.reset();\r\n        this._dataList = [];\r\n        for (let index = this._itemList.length - 1; 0 <= index; index--) {\r\n            this._itemList[index].release();\r\n            this._itemList.pop().node.destroy();\r\n        }\r\n        this._selectBoxPool.clear();\r\n        this._placeholderPool.clear();\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        if (this.scrollView) {\r\n            this.scrollView.node.off(\r\n                \"scroll-began\",\r\n                this.onListScrollHandler,\r\n                this\r\n            );\r\n            this.scrollView.node.off(\r\n                \"scrolling\",\r\n                this.onListScrollHandler,\r\n                this\r\n            );\r\n            this.scrollView.node.off(\r\n                \"scroll-ended\",\r\n                this.onListScrollHandler,\r\n                this\r\n            );\r\n        }\r\n        if (this.contentBrother && this.selectBoxPrefab) {\r\n            this.content.off(\r\n                \"position-changed\",\r\n                this.onNodeChangeHandler,\r\n                this\r\n            );\r\n            this.content.off(\"size-changed\", this.onNodeChangeHandler, this);\r\n        }\r\n    }\r\n\r\n    private onListScrollHandler(): void {\r\n        const position = this.scrollView.content.getPosition();\r\n        this.scrollView.content.setPosition(\r\n            Math.floor(position.x),\r\n            Math.floor(position.y)\r\n        );\r\n        this.updateItemList();\r\n    }\r\n\r\n    private updateItemList(shouldUpdate: boolean = false): void {\r\n        this._curStartIndex = this.getStartIndexByOffset(\r\n            this.scrollView.getScrollOffset()\r\n        );\r\n        if (shouldUpdate) {\r\n            const endIndex = Math.min(\r\n                this._curStartIndex + this._maxItemCount,\r\n                this._dataList.length\r\n            );\r\n            for (let index = this._curStartIndex; index < endIndex; index++) {\r\n                this.updateItemByIndex(index);\r\n            }\r\n            this.content.setContentSize(this.getContentSize());\r\n            this._lastStartIndex = this._curStartIndex;\r\n        } else if (this._curStartIndex != this._lastStartIndex) {\r\n            for (\r\n                let index = this._curStartIndex;\r\n                index < this._curStartIndex + this._maxItemCount;\r\n                index++\r\n            ) {\r\n                if (\r\n                    0 <= index &&\r\n                    index < this._dataList.length &&\r\n                    (index < this._lastStartIndex ||\r\n                        index >= this._lastStartIndex + this._maxItemCount)\r\n                ) {\r\n                    this.updateItemByIndex(index);\r\n                    this.content.setContentSize(this.getContentSize());\r\n                }\r\n            }\r\n\r\n            this._lastStartIndex = this._curStartIndex;\r\n        }\r\n    }\r\n\r\n    private updateItemByIndex(index: number): void {\r\n        const item = this._itemList[index % this._maxItemCount];\r\n        if (item) {\r\n            item.reset();\r\n            item.index = index;\r\n            item.data = this._dataList[index] as FightRewardItemData;\r\n            item.select = this._selectIndexList[index];\r\n            this._itemSizeList[index] = item.node.getContentSize();\r\n\r\n            if (this._direction != Direction.NONE) {\r\n                item.node.setPosition(this.getPositionByIndex(index));\r\n            } else {\r\n                item.node.setPosition(this.positionNodeList[index].position);\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToLeft(offset: number = 0, animate: boolean = true): void {\r\n        if (offset >= 0 || this.scrollView) {\r\n            this.scrollView.stopAutoScroll();\r\n            this.scrollView.scrollToLeft(offset, animate);\r\n            if (0 == offset) {\r\n                this.updateItemList();\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToRight(offset: number = 0, animate: boolean = true): void {\r\n        if (offset < 0 || this.scrollView) {\r\n            this.scrollView.stopAutoScroll();\r\n            this.scrollView.scrollToRight(offset, animate);\r\n            if (0 == offset) {\r\n                this.updateItemList();\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToTop(offset: number = 0, animate: boolean = true): void {\r\n        if (offset < 0 || !this.scrollView || 0 != this._dataList.length) {\r\n            this.scrollView.stopAutoScroll();\r\n            this.scrollView.scrollToTop(offset, animate);\r\n            if (0 == offset) {\r\n                this.updateItemList();\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToBottom(offset: number = 0, animate: boolean = true): void {\r\n        if (offset < 0 || this.scrollView) {\r\n            this.scrollView.stopAutoScroll();\r\n            this.scrollView.scrollToBottom(offset, animate);\r\n            if (0 == offset) {\r\n                this.updateItemList();\r\n            }\r\n        }\r\n    }\r\n\r\n    private scrollToIndex(\r\n        index: number,\r\n        offset: number = 0,\r\n        animate: boolean = true\r\n    ): void {\r\n        if (\r\n            this._groupSize <= 0 ||\r\n            !this.scrollView ||\r\n            index < 0 ||\r\n            index < this._dataList.length\r\n        ) {\r\n            this.scrollView.stopAutoScroll();\r\n            this.scrollView.scrollToOffset(\r\n                this.getOffsetByIndex(index),\r\n                offset,\r\n                animate\r\n            );\r\n            if (0 == offset) {\r\n                this.updateItemList();\r\n            }\r\n        }\r\n    }\r\n\r\n    private getOffsetByIndex(index: number): cc.Vec2 | undefined {\r\n        if (!(this._groupSize <= 0) && this.scrollView) {\r\n            var groupIndex: number;\r\n            const offset = cc.v2();\r\n            const maxScrollOffset = this.scrollView.getMaxScrollOffset();\r\n            if (this._direction == Direction.HORIZONTAL) {\r\n                groupIndex = Math.floor(index / this._groupSize);\r\n                if (this._itemSizeList[groupIndex * this._groupSize]) {\r\n                    groupIndex =\r\n                        this._itemSizeList[groupIndex * this._groupSize].width;\r\n                } else {\r\n                    groupIndex = this.itemPrefab.data.width;\r\n                }\r\n\r\n                offset.x = Math.min(\r\n                    this.calcX(0, index, this._groupSize, this._spacing.x) -\r\n                        0.5 * groupIndex,\r\n                    maxScrollOffset.x\r\n                );\r\n                offset.y = maxScrollOffset.y;\r\n            } else if (this._direction == Direction.VERTICAL) {\r\n                groupIndex = Math.floor(index / this._groupSize);\r\n                if (this._itemSizeList[groupIndex * this._groupSize]) {\r\n                    groupIndex =\r\n                        this._itemSizeList[groupIndex * this._groupSize].height;\r\n                } else {\r\n                    groupIndex = this.itemPrefab.data.height;\r\n                }\r\n\r\n                offset.x = maxScrollOffset.x;\r\n                offset.y = Math.min(\r\n                    this.calcY(0, index, this._groupSize, this._spacing.y) -\r\n                        0.5 * groupIndex,\r\n                    maxScrollOffset.y\r\n                );\r\n            }\r\n\r\n            return offset;\r\n        }\r\n    }\r\n\r\n    private getStartIndexByOffset(offset: cc.Vec2): number {\r\n        let startIndex = 0;\r\n        let accumulatedSize = 0;\r\n        if (this._direction == Direction.VERTICAL) {\r\n            for (\r\n                let index = 0;\r\n                index < this._dataList.length;\r\n                index += this.groupSize\r\n            ) {\r\n                accumulatedSize +=\r\n                    (this._itemSizeList[index] || this.itemPrefab.data).height +\r\n                    this._spacing.y;\r\n                if (accumulatedSize > offset.y) {\r\n                    startIndex = index;\r\n                    break;\r\n                }\r\n            }\r\n        } else if (this._direction == Direction.HORIZONTAL) {\r\n            for (\r\n                let index = 0;\r\n                index < this._dataList.length;\r\n                index += this.groupSize\r\n            ) {\r\n                accumulatedSize +=\r\n                    (this._itemSizeList[index] || this.itemPrefab.data).width +\r\n                    this._spacing.x;\r\n                if (accumulatedSize > -offset.x) {\r\n                    startIndex = index;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return Math.min(Math.max(startIndex, 0), this._dataList.length - 1);\r\n    }\r\n\r\n    private updateProperty(): void {\r\n        if (this.content && this.itemPrefab && this.scrollView) {\r\n            this.scrollView.horizontal =\r\n                this._direction == Direction.HORIZONTAL;\r\n            this.scrollView.vertical = this._direction == Direction.VERTICAL;\r\n        }\r\n    }\r\n\r\n    private getMaxItemCount(groupSize: number = 1): number {\r\n        if (!(this._groupSize < 0)) {\r\n            if (this._groupSize == 0) {\r\n                return this._dataList.length;\r\n            }\r\n            var maxCount = 0;\r\n            if (this._direction == Direction.HORIZONTAL) {\r\n                maxCount =\r\n                    (groupSize +\r\n                        Math.ceil(\r\n                            this.node.width /\r\n                                (this.itemPrefab.data.width + this._spacing.x)\r\n                        )) *\r\n                    this._groupSize;\r\n            } else if (this._direction == Direction.VERTICAL) {\r\n                maxCount =\r\n                    (groupSize +\r\n                        Math.ceil(\r\n                            this.node.height /\r\n                                (this.itemPrefab.data.height + this._spacing.y)\r\n                        )) *\r\n                    this._groupSize;\r\n            } else if (this._direction == Direction.NONE) {\r\n                maxCount = this._dataList.length;\r\n            }\r\n\r\n            return maxCount;\r\n        }\r\n    }\r\n\r\n    private getContentSize(): cc.Size {\r\n        if (this._groupSize <= 0 || !this._dataList) {\r\n            return cc.Size.ZERO;\r\n        }\r\n        const totalItems = Math.max(\r\n            Math.ceil(this._dataList.length / this._groupSize) *\r\n                this._groupSize,\r\n            this._maxItemCount\r\n        );\r\n        for (let index = 0; index < totalItems; index++) {\r\n            if (!this._itemSizeList[index]) {\r\n                this._itemSizeList[index] =\r\n                    this.itemPrefab.data.getContentSize();\r\n            }\r\n        }\r\n        const contentSize = cc.Size.ZERO;\r\n        let groupCount = 0;\r\n        let itemCount = 0;\r\n\r\n        if (this._direction == Direction.HORIZONTAL) {\r\n            itemCount = Math.max(this._groupSize - 1, 0);\r\n            groupCount = Math.max(\r\n                Math.floor((this._dataList.length - 1) / this._groupSize),\r\n                0\r\n            );\r\n            contentSize.width =\r\n                this.calcX(\r\n                    0,\r\n                    this._dataList.length - 1,\r\n                    this._groupSize,\r\n                    this._spacing.x\r\n                ) +\r\n                0.5 * this._itemSizeList[groupCount * this._groupSize].width;\r\n            contentSize.height =\r\n                this.calcY(0, itemCount, 1, this._spacing.y) +\r\n                0.5 * this._itemSizeList[itemCount].height;\r\n        } else if (this._direction == Direction.VERTICAL) {\r\n            groupCount = Math.max(this._groupSize - 1, 0);\r\n            itemCount = Math.max(\r\n                Math.floor((this._dataList.length - 1) / this._groupSize),\r\n                0\r\n            );\r\n            contentSize.width =\r\n                this.calcX(0, groupCount, 1, this._spacing.x) +\r\n                0.5 * this._itemSizeList[groupCount].width;\r\n            contentSize.height =\r\n                this.calcY(\r\n                    0,\r\n                    this._dataList.length - 1,\r\n                    this._groupSize,\r\n                    this._spacing.y\r\n                ) +\r\n                0.5 * this._itemSizeList[itemCount * this._groupSize].height;\r\n        }\r\n\r\n        return contentSize;\r\n    }\r\n\r\n    private convertAnchor(\r\n        anchor: cc.Vec2 | null,\r\n        size: { width: number; height: number } | null,\r\n        a: cc.Vec2 | null,\r\n        b: cc.Vec2 | null\r\n    ): cc.Vec2 {\r\n        if (\r\n            null == anchor ||\r\n            null == size ||\r\n            null == a ||\r\n            null == b ||\r\n            (a.x == b.x && a.y == b.y)\r\n        ) {\r\n            return anchor || cc.Vec2.ZERO;\r\n        } else {\r\n            b = cc.v2(a.x - b.x, a.y - b.y);\r\n            return cc.v2(\r\n                anchor.x + b.x * size.width,\r\n                anchor.y + b.y * size.height\r\n            );\r\n        }\r\n    }\r\n\r\n    private dispatchEvent(\r\n        eventName: string,\r\n        eventType: boolean,\r\n        detail: boolean\r\n    ): void {\r\n        const event = new cc.Event.EventCustom(eventName, eventType);\r\n        event.detail = detail;\r\n        this.node.dispatchEvent(event);\r\n    }\r\n\r\n    private onItemClickHandler(event: cc.Event): void {\r\n        const item = event.target.getComponent(ListViewItem);\r\n        if (item) {\r\n            if (this.isMultiSelect) {\r\n                this.setSelect(item.index, !this.getSelect(item.index));\r\n            } else {\r\n                this.setSelect(this._selectIndex, false);\r\n                this.setSelect(item.index, true);\r\n            }\r\n            this.dispatchEvent(\"item-click\", true, item);\r\n        }\r\n    }\r\n\r\n    private onItemMouseEnterHandler(event: cc.Event): void {\r\n        const item = event.target.getComponent(ListViewItem);\r\n        if (item) {\r\n            this.dispatchEvent(\"item-mouse-enter\", true, item);\r\n        }\r\n    }\r\n\r\n    private onItemMouseLeaveHandler(event: cc.Event): void {\r\n        const item = event.target.getComponent(ListViewItem);\r\n        if (item) {\r\n            this.dispatchEvent(\"item-mouse-leave\", true, item);\r\n        }\r\n    }\r\n\r\n    private onNodeChangeHandler(): void {\r\n        this.contentBrother.setPosition(this.content.getPosition());\r\n        this.contentBrother.setContentSize(this.content.getContentSize());\r\n    }\r\n\r\n    private createItem(active: boolean, args?: IArguments[]): ListViewItem {\r\n        const itemNode = cc.instantiate(this.itemPrefab);\r\n        const item = itemNode.getComponent(ListViewItem);\r\n\r\n        if (!item) {\r\n            cc.error(\"没有找到继承ListViewItem的组件\");\r\n        }\r\n        item.init.apply(item, args);\r\n        itemNode.active = active;\r\n        this.content.addChild(itemNode);\r\n        this._itemList.push(item);\r\n        return item;\r\n    }\r\n\r\n    private deleteItem(index: number): void {\r\n        if (index < 0 || index < this._itemList.length) {\r\n            this._itemList[index].node.destroy();\r\n            this._itemList.splice(index, 1);\r\n            this.updateProperty();\r\n        }\r\n    }\r\n}\r\n"]}
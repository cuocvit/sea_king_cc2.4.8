{"version":3,"sources":["assets\\fight\\scripts\\FightHeroItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { BundleName } from '../../start-scene/scripts/Constants';\r\nimport { SkillEffectId } from '../../start-scene/scripts/ConfigData';\r\nimport { HeroType, FightConstants } from '../../start-scene/scripts/FightConstants';\r\nimport { gm } from '../../start-scene/scripts/GameManager';\r\nimport { GraphicsUtils } from '../../start-scene/scripts/GraphicsUtils';\r\nimport { NodePoolItem } from '../../start-scene/scripts/NodePoolItem';\r\nimport { SkillItem } from './SkillItem';\r\nimport { BuffItemData, FightHeroItemData } from '../../start-scene/scripts/FightTempData'\r\nimport { HeroConfig } from '../../common/configs/hero';\r\nimport { SkillConfig } from '../../common/configs/skill';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class FightHeroItem extends NodePoolItem {\r\n    @property(cc.Node)\r\n    private model_node: cc.Node | null;\r\n\r\n    @property(cc.Node)\r\n    private bottom_node: cc.Node | null;\r\n\r\n    @property(cc.Node)\r\n    private middle_node: cc.Node | null;\r\n\r\n    @property(cc.Node)\r\n    private top_node: cc.Node | null;\r\n\r\n    @property(cc.ProgressBar)\r\n    private hp_prg: cc.ProgressBar | null;\r\n\r\n    @property(cc.Node)\r\n    private bar_node: cc.Node | null;\r\n\r\n    private _data: FightHeroItemData;\r\n    private _spine: sp.Skeleton | null;\r\n    private _spine_track: sp.spine.TrackEntry | null;\r\n    private _skin_name: string;\r\n    private _anim_name: string;\r\n    private _loading_buff_data: BuffItemData;\r\n\r\n    private constructor() {\r\n        super();\r\n        this.model_node = null;\r\n        this.bottom_node = null;\r\n        this.middle_node = null;\r\n        this.top_node = null;\r\n        this.hp_prg = null;\r\n        this.bar_node = null\r\n    }\r\n\r\n    public get data(): FightHeroItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: FightHeroItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    public update_view(): void {\r\n        if (gm.data.fight_temp_data.is_debug) {\r\n            GraphicsUtils.draw_circle(this.node, cc.Color.BLUE, cc.Vec3.ZERO, this._data.search_range);\r\n            GraphicsUtils.draw_fill_circle(this.node, cc.color(cc.Color.RED.r, cc.Color.RED.g, cc.Color.RED.b, 20), cc.Vec3.ZERO, this._data.attack_range);\r\n        }\r\n\r\n        if (this.model_node.childrenCount == 0) {\r\n            const data = gm.config.get_row_data(\"HeroConfigData\", this._data.id + \"\") as HeroConfig;\r\n            gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + data.icon, NodePoolItem, (t) => {\r\n                if (this.model_node.childrenCount == 0) {\r\n                    this.model_node.addChild(t.node);\r\n                    this._spine = t.getComponent(sp.Skeleton);\r\n                    if (this._spine) {\r\n                        this._skin_name = \"front\";\r\n                        this._anim_name = \"stay\";\r\n                        this._spine.setSkin(this._skin_name);\r\n                        this._spine_track = this._spine.setAnimation(0, this._anim_name, true);\r\n                        this._spine.timeScale = cc.director.getScheduler().getTimeScale();\r\n                    }\r\n                } else {\r\n                    gm.pool.put(t.node);\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        if (this._data.type == HeroType.ATTACK) {\r\n            this.bar_node.color = FightConstants.HP_GREEN_COLOR_LIGHT;\r\n        } else {\r\n            this.bar_node.color = FightConstants.HP_RED_COLOR_LIGHT;\r\n        }\r\n\r\n        this.hp_prg.progress = 0 < this._data.max_hp ? this._data.hp / this._data.max_hp : 0;\r\n    }\r\n\r\n    public reset(): void {\r\n        this._data = null;\r\n        this._skin_name = \"\";\r\n        this._anim_name = \"\";\r\n        this.unscheduleAllCallbacks();\r\n\r\n        if (this._spine) {\r\n            this._spine.setToSetupPose();\r\n            this._spine.setCompleteListener(null);\r\n            this._spine.timeScale = 1;\r\n            this._spine = null;\r\n        }\r\n\r\n        if (this._spine_track) {\r\n            this._spine_track.trackTime = 0;\r\n            this._spine_track = null;\r\n        }\r\n        gm.pool.put_children(this.model_node);\r\n        gm.pool.put_children(this.bottom_node);\r\n        gm.pool.put_children(this.middle_node);\r\n        gm.pool.put_children(this.top_node);\r\n    }\r\n\r\n    public unuse(): void {\r\n        super.unuse();\r\n        this.reset();\r\n    }\r\n\r\n    public change_hp(value: number): void {\r\n        if (this._data) {\r\n            this._data.change_hp(value);\r\n            this.update_view();\r\n        }\r\n    }\r\n\r\n    public play_hit_anim(position: cc.Node, animName: string = \"hit\"): void {\r\n        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + (animName = void 0 === animName ? \"hit\" : animName), NodePoolItem, (t) => {\r\n            gm.ui.fight.effect_node.addChild(t.node);\r\n            t.node.position = gm.ui.fight.convert_to_scene_point(position);\r\n            t.node.scale = 0.5;\r\n            const Anim = t.getComponent(cc.Animation);\r\n\r\n            if (Anim) {\r\n                Anim.once(cc.Animation.EventType.FINISHED, () => {\r\n                    gm.pool.put(Anim.node);\r\n                });\r\n                Anim.play();\r\n            }\r\n        })\r\n    }\r\n\r\n    public play_skill_hit_anim(position: cc.Node, animName: string, parent: cc.Node = gm.ui.fight.effect_node, zIndex: number = 0): void {\r\n\r\n        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + animName, NodePoolItem, (t) => {\r\n            parent.addChild(t.node);\r\n            t.node.zIndex = zIndex;\r\n            t.node.position = gm.ui.fight.convert_to_scene_point(position);\r\n            t.node.scale = 0.5;\r\n\r\n            const Anim = t.getComponent(cc.Animation);\r\n            if (Anim) {\r\n                Anim.once(cc.Animation.EventType.FINISHED, () => {\r\n                    gm.pool.put(Anim.node);\r\n                });\r\n                Anim.play();\r\n            }\r\n        })\r\n    }\r\n\r\n    public add_buff_data(buff: BuffItemData): void {\r\n        const data = this._data;\r\n        for (let index = 0; index < data.buff_data_array.length; index++) {\r\n            const existingBuff = data.buff_data_array[index];\r\n            if (existingBuff.id == buff.id && existingBuff.start_time != buff.start_time) {\r\n                data.buff_data_array.splice(index, 1);\r\n                break;\r\n            }\r\n        }\r\n        data.buff_data_array.push(buff);\r\n    }\r\n\r\n    private remove_buff_data(buff: BuffItemData): void {\r\n        const data = this._data;\r\n        const buffData = data.buff_data_array.indexOf(buff);\r\n        if (- 1 < buffData) {\r\n            data.buff_data_array.splice(buffData, 1);\r\n        }\r\n    }\r\n\r\n    public check_hero_buff(time: number): void {\r\n        const data = this._data;\r\n        if (null != data) {\r\n            for (let index = data.buff_data_array.length - 1; 0 <= index; index--) {\r\n                const buff = data.buff_data_array[index];\r\n                const triggerTimes = Math.floor((time - buff.start_time) / buff.valid_time);\r\n                if (buff.is_start && 0 == triggerTimes && 0 == buff.trigger_count || triggerTimes > buff.trigger_count) {\r\n                    this.buff_change_attribute(buff);\r\n                }\r\n            }\r\n\r\n            let removedCount = 0;\r\n            for (let index = data.buff_data_array.length - 1; 0 <= index; index--) {\r\n                const buff = data.buff_data_array[index];\r\n                if (buff.trigger_count == buff.max_trigger_count && buff.is_end || buff.trigger_count > buff.max_trigger_count && !buff.is_end) {\r\n                    data.buff_data_array.splice(index, 1);\r\n                    removedCount++;\r\n                }\r\n            }\r\n\r\n            if (0 < removedCount) {\r\n                data.reduce_damage_ratio = this.get_buff_reduce_damage_ratio();\r\n                data.attack_speed_ratio = this.get_buff_attack_speed_ratio();\r\n                data.attack_bonus_ratio = this.get_buff_attack_bonus_ratio();\r\n                data.move_speed_scale = this.get_buff_move_speed_scale();\r\n                data.restore_hp_ratio = this.get_buff_restore_hp_ratio();\r\n                data.defense_bonus_ratio = this.get_buff_defense_bonus_ratio();\r\n            }\r\n\r\n            this.update_buff_view();\r\n        }\r\n    }\r\n\r\n    private buff_change_attribute(buff: BuffItemData): void {\r\n        const data = this._data;\r\n        if (!(null == data || data.hp <= 0)) {\r\n            if (buff.trigger_count < buff.max_trigger_count) {\r\n                switch (buff.id) {\r\n                    case SkillEffectId.REDUCE_DAMAGE:\r\n                        data.reduce_damage_ratio = this.get_buff_reduce_damage_ratio();\r\n                        break;\r\n                    case SkillEffectId.ATTACK_SPEED_UP:\r\n                        data.attack_speed_ratio = this.get_buff_attack_speed_ratio();\r\n                        break;\r\n                    case SkillEffectId.ATTACK_BONUS:\r\n                        data.attack_bonus_ratio = this.get_buff_attack_bonus_ratio();\r\n                        break;\r\n                    case SkillEffectId.DIZZINESS:\r\n                        data.move_speed_scale = this.get_buff_move_speed_scale();\r\n                        break;\r\n                    case SkillEffectId.DEFENSE_BONUS:\r\n                        data.defense_bonus_ratio = this.get_buff_defense_bonus_ratio();\r\n                        break;\r\n                    case SkillEffectId.RESTORE_HP:\r\n                        data.change_hp(data.real_restore_hp), data.restore_hp_ratio = this.get_buff_restore_hp_ratio();\r\n                        break;\r\n                    case SkillEffectId.FIRE:\r\n                        data.change_hp(-buff.damage_value);\r\n                        break;\r\n                    case SkillEffectId.REDUCE_SPEED:\r\n                        data.move_speed_scale = this.get_buff_move_speed_scale();\r\n                        break;\r\n                    default:\r\n                        console.error(\"未知的buff类型\")\r\n                }\r\n            }\r\n            buff.trigger_count++;\r\n        }\r\n    }\r\n\r\n    private get_buff_move_speed_scale(): number {\r\n        const data = this._data;\r\n        let scale = 1;\r\n        if (data) {\r\n            for (let index = 0; index < data.buff_data_array.length; index++) {\r\n                scale *= data.buff_data_array[index].move_speed_scale;\r\n            }\r\n        }\r\n        return scale;\r\n    }\r\n\r\n    private get_buff_reduce_damage_ratio(): number {\r\n        const data = this._data;\r\n        let ratio = 0;\r\n        if (data) {\r\n            for (let index = 0; index < data.buff_data_array.length; index++) {\r\n                ratio += data.buff_data_array[index].reduce_damage_ratio;\r\n            }\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    private get_buff_attack_speed_ratio(): number {\r\n        const data = this._data;\r\n        let ratio = 0;\r\n        if (data) {\r\n            for (let index = 0; index < data.buff_data_array.length; index++) {\r\n                ratio += data.buff_data_array[index].attack_speed_ratio;\r\n            }\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    private get_buff_attack_bonus_ratio(): number {\r\n        const data = this._data;\r\n        let ratio = 0;\r\n        if (data) {\r\n            for (let index = 0; index < data.buff_data_array.length; index++) {\r\n                ratio += data.buff_data_array[index].attack_bonus_ratio;\r\n            }\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    private get_buff_defense_bonus_ratio(): number {\r\n        const data = this._data;\r\n        let ratio = 0;\r\n        if (data) {\r\n            for (let index = 0; index < data.buff_data_array.length; index++) {\r\n                ratio += data.buff_data_array[index].defense_bonus_ratio;\r\n            }\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    private get_buff_restore_hp_ratio(): number {\r\n        const data = this._data;\r\n        let ratio = 0;\r\n        if (data) {\r\n            for (let index = 0; index < data.buff_data_array.length; index++) {\r\n                ratio += data.buff_data_array[index].restore_hp_ratio;\r\n            }\r\n        }\r\n        return ratio;\r\n    }\r\n\r\n    private update_buff_view() {\r\n        const data = this._data;\r\n        if (null != data) {\r\n            if (0 < data.buff_data_array.length) {\r\n                const latestBuff = data.buff_data_array[data.buff_data_array.length - 1];\r\n                if (!this._loading_buff_data || this._loading_buff_data.id != latestBuff.id) {\r\n                    const allNodes = [].concat(this.top_node.children, this.middle_node.children, this.bottom_node.children);\r\n\r\n                    for (let index = allNodes.length - 1; 0 <= index; index--) {\r\n                        const node = allNodes[index];\r\n                        node.name != \"buff_\" + latestBuff.id && gm.pool.put(node);\r\n                    }\r\n\r\n                    const buff = \"buff_\" + latestBuff.id;\r\n                    if (0 == allNodes.length && buff) {\r\n                        this._loading_buff_data = latestBuff;\r\n                        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + buff, NodePoolItem, (t) => {\r\n                            const parentNode = this.get_buff_parent_node(latestBuff.id);\r\n                            parentNode.childrenCount;\r\n                            if (this._loading_buff_data && latestBuff.id == this._loading_buff_data.id) {\r\n                                parentNode.addChild(t.node);\r\n                                this._loading_buff_data = null;\r\n                            } else {\r\n                                gm.pool.put(t.node);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            } else {\r\n                gm.pool.put_children(this.bottom_node);\r\n                gm.pool.put_children(this.middle_node);\r\n                gm.pool.put_children(this.top_node);\r\n            }\r\n        }\r\n    }\r\n\r\n    private get_buff_parent_node(buffId: number): cc.Node {\r\n        if (-1 < [4, 6].indexOf(buffId)) {\r\n            return this.top_node;\r\n        } else if (-1 < [1, 2, 3, 5, 7, 8].indexOf(buffId)) {\r\n            return this.bottom_node;\r\n        } else {\r\n            this.middle_node;\r\n        }\r\n    }\r\n\r\n\r\n    private apply_passive_skill_ui(skillData: { skill_name: string }): void { // ko thấy sử dụng ở đâu\r\n        if (\"\" != skillData.skill_name) {\r\n            gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + skillData.skill_name, NodePoolItem, (skillData) => {\r\n                this.top_node.addChild(skillData.node);\r\n                const Anim = skillData.getComponent(cc.Animation);\r\n                if (Anim) {\r\n                    Anim.play();\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public put_to_pool(): void {\r\n        const data = this._data;\r\n        if (data) {\r\n            const fightData = gm.data.fight_temp_data;\r\n            if (data.type == HeroType.ATTACK) {\r\n                fightData.hero_item_array[data.array_index] = null;\r\n                fightData.hero_data_array[data.array_index].find_path_target = null;\r\n            } else if (data.type == HeroType.DEFENSE) {\r\n                fightData.defense_hero_array[data.array_index] = null;\r\n                fightData.defense_hero_data_array[data.array_index] = null;\r\n            }\r\n\r\n            gm.pool.put(this.node);\r\n            const speedSuffix = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? \"_x2\" : \"\";\r\n            const configData = gm.config.get_row_data(\"HeroConfigData\", data.id + \"\") as HeroConfig;\r\n\r\n            if (configData && configData.death_audio) {\r\n                gm.audio.play_effect(configData.death_audio + speedSuffix);\r\n            } else {\r\n                gm.audio.play_effect(gm.const.AUDIO_23_HERO_DEATH + speedSuffix);\r\n            }\r\n\r\n            const scenePoint = gm.ui.fight.convert_to_scene_point(this.node);\r\n            gm.pool.async_get(BundleName.FIGHT, \"prefabs/hero_death\", NodePoolItem, (e) => {\r\n                gm.ui.fight.effect_node.addChild(e.node);\r\n                gm.data.fight_temp_data.hero_death_array.push(e);\r\n                e.node.position = scenePoint;\r\n\r\n                const Anim = e.getComponent(cc.Animation);\r\n                if (Anim) {\r\n                    Anim.once(cc.Animation.EventType.FINISHED, () => {\r\n                        const t = gm.data.fight_temp_data.hero_death_array.indexOf(e);\r\n                        - 1 < t && gm.data.fight_temp_data.hero_death_array.splice(t, 1);\r\n                        gm.pool.put(Anim.node);\r\n                        this.death_drop_soul(data);\r\n                    });\r\n                    Anim.play()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    protected death_drop_soul(heroData: FightHeroItemData): void {\r\n        const heroConfig = gm.config.get_row_data(\"HeroConfigData\", heroData.id + \"\") as HeroConfig;\r\n        if (heroData && heroData.type == HeroType.ATTACK && heroConfig && 0 < heroConfig.souls && 0 < heroConfig.quantity) {\r\n            const rewardData = gm.data.fight_temp_data.get_reward_data(heroConfig.souls);\r\n            rewardData.num += heroConfig.quantity;\r\n            gm.data.event_emitter.emit(\"pick_up_prop\", rewardData.index);\r\n            gm.pool.async_get(BundleName.MAP, \"prefabs/item/\" + heroConfig.souls, NodePoolItem, (t) => {\r\n                const mapItem = gm.data.fight_temp_data.get_fight_map_item(heroData.grid_position.x, heroData.grid_position.y);\r\n\r\n                mapItem && mapItem.land_node.addChild(t.node);\r\n                const Anim = t.getComponent(cc.Animation);\r\n                Anim && Anim.play();\r\n                gm.ui.fight.fly_to_boat(t.node, false);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    public play_attack_audio(): void {\r\n        const data = this._data;\r\n        const configData = gm.config.get_row_data(\"HeroConfigData\", data.id + \"\") as HeroConfig;\r\n        if (configData && \"\" != configData.attack_audio) {\r\n            const speed = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? \"_x2\" : \"\";\r\n            gm.audio.play_effect(configData.attack_audio + speed);\r\n        }\r\n    }\r\n\r\n    public play_skill_audio(): void {\r\n        const data = this._data;\r\n        const configData = gm.config.get_row_data(\"HeroConfigData\", data.id + \"\") as HeroConfig;\r\n        if (configData && \"\" != configData.skill_audio) {\r\n            const speed = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? \"_x2\" : \"\";\r\n            gm.audio.play_effect(configData.skill_audio + speed);\r\n        }\r\n\r\n    }\r\n\r\n    public play_spine_anim(\r\n        animationName: string,\r\n        rotationAngle: number,\r\n        loop: boolean = true,\r\n        delayBeforeCallback1: number = 0,\r\n        callback1: (() => void) | null = null,\r\n        delayBeforeCallback2: number = 0,\r\n        callback2: (() => void) | null = null\r\n    ): void {\r\n        if (this._spine) {\r\n            const radianAngle = ((this._data.radian = rotationAngle) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI);\r\n            let skinDirection = \"\";\r\n            let scaleXDirection = 1;\r\n            const degreeToRadian = Math.PI / 180\r\n\r\n            if (18 * degreeToRadian <= radianAngle && radianAngle < 120 * degreeToRadian) {\r\n                skinDirection = \"back\";\r\n                scaleXDirection = -1;\r\n            } else if (120 * degreeToRadian <= radianAngle && radianAngle < 195 * degreeToRadian) {\r\n                skinDirection = \"back\";\r\n                scaleXDirection = 1;\r\n            } else if (195 * degreeToRadian <= radianAngle && radianAngle < 300 * degreeToRadian) {\r\n                skinDirection = \"front\";\r\n                scaleXDirection = 1;\r\n            } else if (300 * degreeToRadian <= radianAngle && radianAngle < 360 * degreeToRadian || 0 <= radianAngle && radianAngle < 18 * degreeToRadian) {\r\n                skinDirection = \"front\";\r\n                scaleXDirection = -1;\r\n            } else {\r\n                console.log(rotationAngle);\r\n            }\r\n\r\n            if (skinDirection != this._skin_name) {\r\n                this._skin_name = skinDirection;\r\n                this._spine.setSkin(skinDirection);\r\n            }\r\n\r\n            if (animationName == this._anim_name && loop) {\r\n\r\n            } else {\r\n                this._anim_name = animationName;\r\n                if (!loop && callback1) {\r\n                    if (0 < delayBeforeCallback1 && callback1) {\r\n                        this.scheduleOnce(() => {\r\n                            callback1()\r\n                        }, delayBeforeCallback1);\r\n                    } else {\r\n                        cc.error(\"play_spine_anim 参数错误\");\r\n                    }\r\n\r\n                    if (0 < delayBeforeCallback2 && callback2) {\r\n                        this.scheduleOnce(() => {\r\n                            callback2()\r\n                        }, delayBeforeCallback2);\r\n                    }\r\n                }\r\n                this._spine_track && (this._spine_track.trackTime = 0);\r\n                this._spine.setToSetupPose();\r\n                this._spine_track = this._spine.setAnimation(0, animationName, loop);\r\n            }\r\n\r\n            if (scaleXDirection != this._spine.node.scaleX) {\r\n                this._spine.node.scaleX = scaleXDirection;\r\n            }\r\n\r\n            if (this._spine) {\r\n                this._spine.timeScale = cc.director.getScheduler().getTimeScale();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public play_weapon_fly_anim(attackTarget: cc.Node, rotationAngle: number, callback: () => void): void {\r\n        let data = this._data;\r\n        if (this._data.type === HeroType.ATTACK) {\r\n            data = gm.data.fight_temp_data.hero_data_array[this._data.array_index];\r\n        } else if (this._data.type === HeroType.DEFENSE) {\r\n            data = gm.data.fight_temp_data.defense_hero_data_array[this._data.array_index];\r\n        }\r\n\r\n        gm.pool.async_get(BundleName.FIGHT, \"prefabs/skill_item\", SkillItem, (skill) => {\r\n            gm.ui.fight.effect_node.addChild(skill.node);\r\n            gm.data.fight_temp_data.skill_item_array.push(skill);\r\n\r\n            const radianAngle = (rotationAngle % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI);\r\n            let startPosition = cc.v3();\r\n            if (data.fly_weapon_position_array && 2 == data.fly_weapon_position_array.length) {\r\n                if (radianAngle >= Math.PI / 4 && radianAngle < 3 * Math.PI / 4) {\r\n                    startPosition = cc.v3(-data.fly_weapon_position_array[1].x, data.fly_weapon_position_array[1].y).mulSelf(this.model_node.scale)\r\n\r\n                } else if (radianAngle >= 3 * Math.PI / 4 && radianAngle < 5 * Math.PI / 4) {\r\n                    startPosition = cc.v3(data.fly_weapon_position_array[1]).mulSelf(this.model_node.scale);\r\n\r\n                } else if (radianAngle >= 5 * Math.PI / 4 && radianAngle < 7 * Math.PI / 4) {\r\n                    startPosition = cc.v3(data.fly_weapon_position_array[0]).mulSelf(this.model_node.scale)\r\n\r\n                } else if (radianAngle >= 7 * Math.PI / 4 && radianAngle < 2 * Math.PI || 0 <= radianAngle && radianAngle < Math.PI / 4) {\r\n                    startPosition = cc.v3(-data.fly_weapon_position_array[0].x, data.fly_weapon_position_array[0].y).mulSelf(this.model_node.scale);\r\n                }\r\n\r\n                skill.set_attack_target(this, startPosition, cc.v3(0, 80), 1, attackTarget, callback);\r\n\r\n            } else {\r\n                cc.error(\"这里不应该出现fly_weapon_position_array为空或者长度不是2\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public play_skill_fly_anim(target: SkillConfig, flyType: cc.Node, rotationAngle: number, callback: () => void): void {\r\n        let data = this._data;\r\n        if (this._data.type === HeroType.ATTACK) {\r\n            data = gm.data.fight_temp_data.hero_data_array[this._data.array_index];\r\n        } else if (this._data.type === HeroType.DEFENSE) {\r\n            data = gm.data.fight_temp_data.defense_hero_data_array[this._data.array_index];\r\n        }\r\n\r\n        gm.pool.async_get(BundleName.FIGHT, \"prefabs/skill_item\", SkillItem, (skill) => {\r\n            gm.ui.fight.effect_node.addChild(skill.node);\r\n            gm.data.fight_temp_data.skill_item_array.push(skill);\r\n\r\n            const radianAngle = (rotationAngle % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI);\r\n            let startPosition = cc.v3();\r\n\r\n            if (data.fly_weapon_position_array && 2 == data.fly_weapon_position_array.length) {\r\n                if (radianAngle >= Math.PI / 4 && radianAngle < 3 * Math.PI / 4) {\r\n                    startPosition = cc.v3(-data.fly_weapon_position_array[1].x, data.fly_weapon_position_array[1].y).mulSelf(this.model_node.scale)\r\n\r\n                } else if (radianAngle >= 3 * Math.PI / 4 && radianAngle < 5 * Math.PI / 4) {\r\n                    startPosition = cc.v3(data.fly_weapon_position_array[1]).mulSelf(this.model_node.scale)\r\n\r\n                } else if (radianAngle >= 5 * Math.PI / 4 && radianAngle < 7 * Math.PI / 4) {\r\n                    startPosition = cc.v3(data.fly_weapon_position_array[0]).mulSelf(this.model_node.scale)\r\n\r\n                } else if (radianAngle >= 7 * Math.PI / 4 && radianAngle < 2 * Math.PI || 0 <= radianAngle && radianAngle < Math.PI / 4) {\r\n                    startPosition = cc.v3(-data.fly_weapon_position_array[0].x, data.fly_weapon_position_array[0].y).mulSelf(this.model_node.scale)\r\n                }\r\n\r\n                skill.set_fly_skill_target(target, this, startPosition, cc.v3(0, 80), target.fly_type, flyType, callback);\r\n\r\n            } else {\r\n                cc.error(\"这里不应该出现fly_weapon_position_array为空或者长度不是2\")\r\n            }\r\n        })\r\n    }\r\n\r\n    public play_skill_anim(target: SkillConfig, effectPositionY: cc.Node, animationType: number, callback: () => void): void {\r\n        this._data;\r\n        if (this._data.type === HeroType.ATTACK) {\r\n            gm.data.fight_temp_data.hero_data_array[this._data.array_index];\r\n        } else if (this._data.type === HeroType.DEFENSE) {\r\n            gm.data.fight_temp_data.defense_hero_data_array[this._data.array_index];\r\n        }\r\n\r\n        gm.pool.async_get(BundleName.FIGHT, \"prefabs/skill_item\", SkillItem, (skill) => {\r\n            this.node.addChild(skill.node);\r\n            gm.data.fight_temp_data.skill_item_array.push(skill);\r\n            skill.set_skill_target(target, this, cc.v3(0, 80), effectPositionY, callback);\r\n        })\r\n    }\r\n}\r\n\r\n\r\n"]}
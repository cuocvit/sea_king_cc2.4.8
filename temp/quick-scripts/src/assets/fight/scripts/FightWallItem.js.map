{"version":3,"sources":["assets\\fight\\scripts\\FightWallItem.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { NodePoolItem } from '../../start-scene/scripts/NodePoolItem';\r\nimport { BundleName } from '../../start-scene/scripts/Constants';\r\nimport { gm } from '../../start-scene/scripts/GameManager';\r\nimport { SkillItem } from './SkillItem';\r\nimport { FightDynamicNodeLayer } from '../../start-scene/scripts/FightConstants';\r\nimport { GraphicsUtils } from '../../start-scene/scripts/GraphicsUtils';\r\nimport { HeroConfig } from '../../common/configs/hero';\r\nimport { FightWallItemData } from '../../start-scene/scripts/FightTempData';\r\nimport { SkillConfig } from '../../common/configs/skill';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass FightWallItem extends NodePoolItem {\r\n    @property(cc.Node)\r\n    private model_node: cc.Node = null;\r\n\r\n    @property(cc.ProgressBar)\r\n    private hp_prg: cc.ProgressBar = null;\r\n\r\n    @property(cc.Node)\r\n    private top_node: cc.Node = null;\r\n\r\n    private _data: FightWallItemData = null;\r\n    private _spine: sp.Skeleton = null;\r\n    private _anim_name: string = \"\";\r\n    private _anim_index: number = 0;\r\n    private _next_anim_name: string = \"\";\r\n    private _spine_track: sp.spine.TrackEntry = null;\r\n\r\n    public get data(): FightWallItemData {\r\n        return this._data;\r\n    }\r\n\r\n    public set data(value: FightWallItemData) {\r\n        this._data = value;\r\n        this.update_view();\r\n    }\r\n\r\n    public update_view(): void {\r\n        if (gm.data.fight_temp_data.is_debug) {\r\n            GraphicsUtils.draw_circle(this.node, cc.Color.BLUE, cc.Vec3.ZERO, this._data.search_range);\r\n            GraphicsUtils.draw_circle(this.node, cc.Color.RED, cc.Vec3.ZERO, this._data.attack_range);\r\n        }\r\n        if (this.model_node.childrenCount == 0) {\r\n            gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + this._data.id, NodePoolItem, (item) => {\r\n                if (this.model_node.childrenCount == 0) {\r\n                    this.model_node.addChild(item.node);\r\n                    this._spine = item.getComponentInChildren(sp.Skeleton);\r\n                    if (this._spine) {\r\n                        this._anim_name = \"fstay\";\r\n                        this._anim_index = 2;\r\n                        this._spine_track = this._spine.setAnimation(0, this._anim_name, true);\r\n                        this._spine.timeScale = cc.director.getScheduler().getTimeScale();\r\n                    }\r\n                    this.update_wall_part_view();\r\n                } else {\r\n                    gm.pool.put(item.node);\r\n                }\r\n            });\r\n        } else {\r\n            this.update_wall_part_view();\r\n        }\r\n        this.hp_prg.progress = this._data.max_hp > 0 ? this._data.hp / this._data.max_hp : 0;\r\n    }\r\n\r\n    public update_wall_part_view(): void {\r\n        if (this._data && this.model_node.childrenCount > 0) {\r\n            const edgeMap = gm.data.fight_temp_data.edge_map;\r\n            const modelChild = this.model_node.children[0];\r\n            for (const key in edgeMap) {\r\n                const edgeData = edgeMap[key];\r\n                const wallItem = modelChild.getChildByName(key.toLowerCase());\r\n                if (wallItem) {\r\n                    wallItem.active = gm.data.fight_temp_data.has_wall_item_data(edgeData.add(this._data.grid_position));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this._data = null;\r\n        this._anim_name = \"\";\r\n        this._anim_index = 0;\r\n        this.unscheduleAllCallbacks();\r\n        if (this._spine) {\r\n            this._spine.setToSetupPose();\r\n            this._spine.setCompleteListener(null);\r\n            this._spine.timeScale = 1;\r\n            this._spine = null;\r\n        }\r\n        if (this._spine_track) {\r\n            this._spine_track.trackTime = 0;\r\n            this._spine_track = null;\r\n        }\r\n        gm.pool.put_children(this.model_node);\r\n        gm.pool.put_children(this.top_node);\r\n    }\r\n\r\n    public unuse(): void {\r\n        super.unuse();\r\n        this.reset();\r\n    }\r\n\r\n    public change_hp(amount: number): void {\r\n        if (this._data && amount < 0) {\r\n            amount = Math.min(0, amount + this._data.real_defense_value);\r\n            this._data.hp = Math.max(0, Math.min(this._data.max_hp, this._data.hp + amount));\r\n            gm.ui.fight.building_call_defense_hero(this._data);\r\n        }\r\n        this.update_view();\r\n    }\r\n\r\n    public play_hit_anim(position: cc.Node, animationName: string = \"hit\"): void {\r\n        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + animationName, NodePoolItem, (item) => {\r\n            gm.ui.fight.effect_node.addChild(item.node);\r\n            item.node.scale = 0.5;\r\n            item.node.position = gm.ui.fight.convert_to_scene_point(position);\r\n            const animation = item.getComponent(cc.Animation);\r\n            if (animation) {\r\n                animation.once(cc.Animation.EventType.FINISHED, () => {\r\n                    gm.pool.put(animation.node);\r\n                });\r\n                animation.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    public play_skill_hit_anim(position: cc.Node, skillName: string, effectNode: cc.Node = gm.ui.fight.effect_node, zIndex: number = 0): void {\r\n        gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + skillName, NodePoolItem, (item) => {\r\n            effectNode.addChild(item.node);\r\n            item.node.zIndex = zIndex;\r\n            item.node.position = gm.ui.fight.convert_to_scene_point(position);\r\n            item.node.scale = 0.5;\r\n            const animation = item.getComponent(cc.Animation);\r\n            if (animation) {\r\n                animation.once(cc.Animation.EventType.FINISHED, () => {\r\n                    gm.pool.put(animation.node);\r\n                });\r\n                animation.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    public apply_passive_skill(skillData: SkillConfig): void {\r\n        const data = this._data;\r\n        data.damage_ratio = skillData.damage_ratio;\r\n        data.defense_ratio = skillData.defense_ratio;\r\n        if (skillData.skill_name !== \"\") {\r\n            gm.pool.async_get(BundleName.COMMON, \"prefabs/model/\" + skillData.skill_name, NodePoolItem, (item) => {\r\n                this.top_node.addChild(item.node);\r\n                const animation = item.getComponent(cc.Animation);\r\n                if (animation) {\r\n                    animation.play();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public put_to_pool(): void {\r\n        const data = this._data;\r\n        if (data) {\r\n            const gridIndex = data.grid_index;\r\n            const tempData = gm.data.fight_temp_data;\r\n            tempData.wall_item_array[data.array_index] = null;\r\n            tempData.wall_data_array[data.array_index] = null;\r\n            const parentNode = this.node.parent;\r\n            const position = this.node.position;\r\n            gm.pool.put(this.node);\r\n            const timeScaleSuffix = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? \"_x2\" : \"\";\r\n            const heroConfig = gm.config.get_row_data(\"HeroConfigData\", data.id + \"\") as HeroConfig;\r\n            if (heroConfig && heroConfig.death_audio) {\r\n                gm.audio.play_effect(heroConfig.death_audio + timeScaleSuffix);\r\n            } else {\r\n                gm.audio.play_effect(gm.const.AUDIO_23_HERO_DEATH + timeScaleSuffix);\r\n            }\r\n            gm.pool.async_get(BundleName.FIGHT, \"prefabs/building_destroy\", NodePoolItem, (item) => {\r\n                tempData.building_destroy_array.push(item);\r\n                const effectPosition = data && tempData.is_lighthouse(data.id) ? cc.v3(31, 51, 0) : cc.Vec3.ZERO;\r\n                effectPosition.addSelf(cc.v3(0, 4, 0)).addSelf(position);\r\n                item.node.position = gm.ui.fight.convert_to_map_point(parentNode, effectPosition);\r\n                const dynamicLayer = tempData.get_dynamic_node_layer(gridIndex, FightDynamicNodeLayer.DESTROY_EFFECT);\r\n                gm.ui.fight.map_node.addChild(item.node, dynamicLayer);\r\n                if (tempData.is_debug) {\r\n                    item.node.name = cc.js.formatStr(\"building_destroy_gridIndex@%d_zIndex@%d\", gridIndex, dynamicLayer);\r\n                }\r\n                const animation = item.getComponent(cc.Animation);\r\n                if (animation) {\r\n                    animation.play();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public play_attack_audio(): void {\r\n        const data = this._data;\r\n        const heroConfig = gm.config.get_row_data(\"HeroConfigData\", data.id + \"\") as HeroConfig;\r\n        if (heroConfig && heroConfig.attack_audio) {\r\n            const timeScaleSuffix = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? \"_x2\" : \"\";\r\n            gm.audio.play_effect(heroConfig.attack_audio + timeScaleSuffix);\r\n        }\r\n    }\r\n\r\n    private play_skill_audio(): void {\r\n        const data = this._data;\r\n        const heroConfig = gm.config.get_row_data(\"HeroConfigData\", data.id + \"\") as HeroConfig;\r\n        if (heroConfig && heroConfig.skill_audio) {\r\n            const timeScaleSuffix = cc.director.getScheduler().getTimeScale() == gm.const.FIGHT_SPEED_X2 ? \"_x2\" : \"\";\r\n            gm.audio.play_effect(heroConfig.skill_audio + timeScaleSuffix);\r\n        }\r\n    }\r\n\r\n    public play_spine_anim(radian: number, delay: number = 0, callback: Function = null, duration: number = 0, endCallback: Function = null): void {\r\n        let normalizedRadian = ((this._data.radian = radian) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI);\r\n        let attackAnim = \"\";\r\n        let stayAnim = \"\";\r\n        let animIndex = 0;\r\n\r\n        if (normalizedRadian >= Math.PI / 4 && normalizedRadian < 3 * Math.PI / 4) {\r\n            attackAnim = \"battack\";\r\n            stayAnim = \"bstay\";\r\n            animIndex = 0;\r\n        } else if (normalizedRadian >= 3 * Math.PI / 4 && normalizedRadian < 5 * Math.PI / 4) {\r\n            attackAnim = \"lattack\";\r\n            stayAnim = \"lstay\";\r\n            animIndex = 3;\r\n        } else if (normalizedRadian >= 5 * Math.PI / 4 && normalizedRadian < 7 * Math.PI / 4) {\r\n            attackAnim = \"fattack\";\r\n            stayAnim = \"fstay\";\r\n            animIndex = 2;\r\n        } else {\r\n            attackAnim = \"rattack\";\r\n            stayAnim = \"rstay\";\r\n            animIndex = 1;\r\n        }\r\n\r\n        this._anim_name = attackAnim;\r\n        this._anim_index = animIndex;\r\n        this._next_anim_name = stayAnim;\r\n\r\n        if (callback) {\r\n            if (delay > 0 && callback) {\r\n                this.scheduleOnce(() => {\r\n                    callback();\r\n                }, delay);\r\n            } else {\r\n                cc.error(\"play_spine_anim 参数错误\");\r\n            }\r\n        }\r\n\r\n        if (duration > 0 && endCallback) {\r\n            this.scheduleOnce(() => {\r\n                endCallback();\r\n            }, duration);\r\n        }\r\n\r\n        if (this._spine_track) {\r\n            this._spine_track.trackTime = 0;\r\n        }\r\n        this._spine.setToSetupPose();\r\n        this._spine_track = this._spine.setAnimation(0, attackAnim, false);\r\n        this._spine.setCompleteListener(() => {\r\n            this._spine.setCompleteListener(null);\r\n            this._spine_track = this._spine.setAnimation(0, stayAnim, true);\r\n        });\r\n        this._spine.timeScale = cc.director.getScheduler().getTimeScale();\r\n    }\r\n\r\n    public play_weapon_fly_anim(target: cc.Node, duration: number, callback: () => void): void {\r\n        gm.pool.async_get(BundleName.FIGHT, \"prefabs/skill_item\", SkillItem, (item) => {\r\n            gm.ui.fight.effect_node.addChild(item.node);\r\n            gm.data.fight_temp_data.skill_item_array.push(item);\r\n            let effectPosition = cc.v3(0, 10);\r\n            if (this._data.occupation == 12 && this._anim_index >= 0 && this._anim_index <= 3) {\r\n                effectPosition = [cc.v3(8, 66), cc.v3(19, 67), cc.v3(-6, 77), cc.v3(-20, 69)][this._anim_index];\r\n            }\r\n            item.set_building_attack_target(this, effectPosition, cc.v3(0, 10, 0), 1, target, callback);\r\n        });\r\n    }\r\n}\r\n\r\nexport { FightWallItem };"]}
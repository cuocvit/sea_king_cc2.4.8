{"version":3,"sources":["assets\\test\\scripts\\TreeItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAuB,4BAAY;IAAnC;QAAA,qEAgCC;QA9BW,YAAM,GAAoB,IAAI,CAAC;QAE/B,eAAS,GAAe,KAAK,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,cAAM,OAAA,EAAE,EAAF,CAAE,CAAC,CAAC;;IA4BzE,CAAC;IA1BU,2BAAQ,GAAf,UAAgB,CAAM,EAAE,CAAS;QAAjC,iBAOC;QANG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,KAAG,CAAG,CAAC;QAC5B,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,sBAAmB,CAAC,GAAG,CAAC,CAAE,EAAE,EAAE,CAAC,WAAW,EAAE,UAAC,GAAiB,EAAE,WAAkC;YAChH,IAAI,CAAC,GAAG,EAAE;gBACN,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,GAAG,WAAW,CAAC;aAC/D;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAES,2BAAQ,GAAlB;QAAA,iBAKC;QAJG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,KAA0B;YAClE,KAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAClC,KAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QACtC,CAAC,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAES,4BAAS,GAAnB;QACI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEO,6BAAU,GAAlB;QACI,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;SACvB;IACL,CAAC;IA7BD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;4CACoB;IAFrC,QAAQ;QADb,OAAO;OACF,QAAQ,CAgCb;IAAD,eAAC;CAhCD,AAgCC,CAhCsB,EAAE,CAAC,SAAS,GAgClC;AAED,kBAAe,QAAQ,CAAC","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nclass TreeItem extends cc.Component {\r\n    @property(cc.Label)\r\n    private lblTxt: cc.Label | null = null;\r\n\r\n    private _mapIndex: number[][] = Array.from({ length: 21 }, () => []);\r\n\r\n    public initData(t: any, e: number): void {\r\n        this.lblTxt.string = `${e}`;\r\n        cc.loader.loadRes(`texture/Res/item${e + 1}`, cc.SpriteFrame, (err: Error | null, spriteFrame: cc.SpriteFrame | null) => {\r\n            if (!err) {\r\n                this.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n            }\r\n        });\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\r\n            this.node.y += event.getDelta().y;\r\n            this.node.x += event.getDelta().x;\r\n        }, this);\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.node.targetOff(this);\r\n    }\r\n\r\n    private onClickDel(): void {\r\n        if (this.node) {\r\n            this.node.removeFromParent();\r\n            this.node.destroy();\r\n        }\r\n    }\r\n}\r\n\r\nexport default TreeItem;"]}
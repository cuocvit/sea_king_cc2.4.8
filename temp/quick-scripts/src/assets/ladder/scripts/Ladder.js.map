{"version":3,"sources":["assets\\ladder\\scripts\\Ladder.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import { gm } from '../../start-scene/scripts/GameManager';\r\nimport { GameModule } from '../../start-scene/scripts/GameModule';\r\nimport { ListView } from '../../start-scene/scripts/ListView';\r\nimport { LadderBuildingRankItem } from './LadderBuildingRankItem';\r\nimport { LadderRankItem } from './LadderRankItem';\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport class Ladder extends GameModule {\r\n    @property(cc.Button)\r\n    private close_btn: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    private anywhere_close_btn: cc.Button = null;\r\n\r\n    @property([cc.Toggle])\r\n    private tab_tog_array: cc.Toggle[] = [];\r\n\r\n    @property(cc.Node)\r\n    private rank_node: cc.Node = null;\r\n\r\n    @property(ListView)\r\n    private ladder_rank_list: ListView = null;\r\n\r\n    @property(LadderRankItem)\r\n    private self_rank_item: LadderRankItem = null;\r\n\r\n    @property(cc.Button)\r\n    private rank_left_btn: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    private rank_right_btn: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    private rank_page_lbl: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    private building_rank_node: cc.Node = null;\r\n\r\n    @property(ListView)\r\n    private ladder_building_rank_list: ListView = null;\r\n\r\n    @property(LadderBuildingRankItem)\r\n    private self_building_rank_item: LadderBuildingRankItem = null;\r\n\r\n    @property(cc.Button)\r\n    private building_rank_left_btn: cc.Button = null;\r\n\r\n    @property(cc.Button)\r\n    private building_rank_right_btn: cc.Button = null;\r\n\r\n    @property(cc.Label)\r\n    private building_rank_page_lbl: cc.Label = null;\r\n\r\n    @property(cc.Node)\r\n    private achievement_node: cc.Node = null;\r\n\r\n    @property(cc.Label)\r\n    private achievement_star_lbl: cc.Label = null;\r\n\r\n    @property(ListView)\r\n    private ladder_achievement_list: ListView = null;\r\n\r\n    private _tab_index: number;\r\n    private _rank_page: number;\r\n    private _rank_total_page: number;\r\n    private _building_rank_page: number;\r\n    private _building_rank_total_page: number;\r\n    private _page_item_count: number;\r\n\r\n    private constructor() {\r\n        super();\r\n        this._tab_index = -1;\r\n        this._rank_page = 1;\r\n        this._rank_total_page = 1;\r\n        this._building_rank_page = 1;\r\n        this._building_rank_total_page = 1;\r\n        this._page_item_count = 6;\r\n    }\r\n\r\n    protected onEnable(): void {\r\n        if (- 1 == this._tab_index) {\r\n            this._tab_index = 0;\r\n            const defaultTab = this.tab_tog_array[this._tab_index];\r\n            if (!defaultTab.isChecked) {\r\n                defaultTab.check();\r\n                defaultTab.isChecked = true;\r\n            }\r\n            this.editor_on_toggle_change_handler(defaultTab);\r\n        }\r\n    }\r\n\r\n    protected onDisable(): void {\r\n        this.ladder_rank_list.reset();\r\n        this.ladder_building_rank_list.reset();\r\n        this.ladder_achievement_list.reset();\r\n        this._tab_index = -1;\r\n        this.rank_node.active = false;\r\n        this.building_rank_node.active = false;\r\n        this.achievement_node.active = false;\r\n    }\r\n\r\n    private editor_on_button_click_handler(event: cc.Event.EventTouch): void {\r\n\r\n        if (event.target == this.close_btn.node || event.target == this.anywhere_close_btn.node) {\r\n            gm.ui.async_hide_module(gm.const.Ladder);\r\n\r\n        } else if (event.target == this.rank_left_btn.node) {\r\n            if (1 < this._rank_page) {\r\n                this._rank_page--;\r\n                this.rank_page_lbl.string = this._rank_page + \"/\" + this._rank_total_page;\r\n                const startIndex = (this._rank_page - 1) * this._page_item_count;\r\n                const endIndex = Math.min(startIndex + this._page_item_count, gm.data.ladder_temp_data.ladder_rank_item_data_array.length - 1);\r\n                const currentPageRankData = gm.data.ladder_temp_data.ladder_rank_item_data_array.slice(startIndex, endIndex);\r\n                this.ladder_rank_list.setData(currentPageRankData);\r\n            }\r\n\r\n        } else if (event.target == this.rank_right_btn.node) {\r\n            if (this._rank_page < this._rank_total_page) {\r\n                this._rank_page++;\r\n                this.rank_page_lbl.string = this._rank_page + \"/\" + this._rank_total_page;\r\n                const startIndex = (this._rank_page - 1) * this._page_item_count;\r\n                const endIndex = Math.min(startIndex + this._page_item_count, gm.data.ladder_temp_data.ladder_rank_item_data_array.length - 1);\r\n                const currentPageRankData = gm.data.ladder_temp_data.ladder_rank_item_data_array.slice(startIndex, endIndex);\r\n                this.ladder_rank_list.setData(currentPageRankData);\r\n            }\r\n\r\n        } else if (event.target == this.building_rank_left_btn.node) {\r\n            if (1 < this._building_rank_page) {\r\n                this._building_rank_page--;\r\n                this.building_rank_page_lbl.string = this._building_rank_page + \"/\" + this._building_rank_total_page;\r\n                const startIndex = (this._building_rank_page - 1) * this._page_item_count;\r\n                const endIndex = Math.min(startIndex + this._page_item_count, gm.data.ladder_temp_data.ladder_building_rank_item_data_array.length - 1);\r\n                const currentPageBuildingRankData = gm.data.ladder_temp_data.ladder_building_rank_item_data_array.slice(startIndex, endIndex);\r\n                this.ladder_building_rank_list.setData(currentPageBuildingRankData);\r\n            }\r\n\r\n        } else if (event.target == this.building_rank_right_btn.node && this._building_rank_page < this._building_rank_total_page) {\r\n            this._building_rank_page++;\r\n            this.building_rank_page_lbl.string = this._building_rank_page + \"/\" + this._building_rank_total_page;\r\n            const startIndex = (this._building_rank_page - 1) * this._page_item_count;\r\n            const endIndex = Math.min(startIndex + this._page_item_count, gm.data.ladder_temp_data.ladder_building_rank_item_data_array.length - 1);\r\n            const currentPageBuildingRankData = gm.data.ladder_temp_data.ladder_building_rank_item_data_array.slice(startIndex, endIndex);\r\n            this.ladder_building_rank_list.setData(currentPageBuildingRankData);\r\n        }\r\n    }\r\n\r\n    private editor_on_toggle_change_handler(toggle: cc.Toggle): void {\r\n        this._tab_index = this.tab_tog_array.indexOf(toggle);\r\n        this.rank_node.active = false;\r\n        this.building_rank_node.active = false;\r\n        this.achievement_node.active = false;\r\n\r\n        if (0 == this._tab_index) {\r\n            this.rank_node.active = true;\r\n            this.update_rank_view();\r\n        } else if (1 == this._tab_index) {\r\n            this.building_rank_node.active = true;\r\n            this.update_building_rank_view();\r\n        } else if (2 == this._tab_index) {\r\n            this.achievement_node.active = true;\r\n            this.update_achievement_view();\r\n        }\r\n    }\r\n\r\n    private update_rank_view(): void {\r\n        const { ladder_temp_data } = gm.data;\r\n        ladder_temp_data.async_get_ladder_rank_item_data_array(() => {\r\n            this.self_rank_item.data = ladder_temp_data.self_rank_item_data;\r\n            this._rank_total_page = Math.max(1, Math.ceil(ladder_temp_data.ladder_rank_item_data_array.length / this._page_item_count));\r\n            this._rank_page = 1;\r\n            this.rank_page_lbl.string = `${this._rank_page}/${this._rank_total_page}`;\r\n\r\n            const startIdx = (this._rank_page - 1) * this._page_item_count;\r\n            const endIdx = Math.min(startIdx + this._page_item_count, ladder_temp_data.ladder_rank_item_data_array.length);\r\n            const data = ladder_temp_data.ladder_rank_item_data_array.slice(startIdx, endIdx);\r\n\r\n            this.ladder_rank_list.setData(data);\r\n        });\r\n    }\r\n\r\n    private update_building_rank_view(): void {\r\n        const { ladder_temp_data } = gm.data;\r\n\r\n        ladder_temp_data.async_get_building_rank_item_data_array(() => {\r\n            this.self_building_rank_item.data = ladder_temp_data.self_building_rank_item_data;\r\n            this._building_rank_total_page = Math.max(1, Math.ceil(ladder_temp_data.ladder_building_rank_item_data_array.length / this._page_item_count));\r\n            this._building_rank_page = 1;\r\n            this.building_rank_page_lbl.string = `${this._building_rank_page}/${this._building_rank_total_page}`;\r\n\r\n            const startIdx = (this._building_rank_page - 1) * this._page_item_count;\r\n            const endIdx = Math.min(startIdx + this._page_item_count, ladder_temp_data.ladder_building_rank_item_data_array.length);\r\n            const data = ladder_temp_data.ladder_building_rank_item_data_array.slice(startIdx, endIdx);\r\n\r\n            this.ladder_building_rank_list.setData(data);\r\n        });\r\n    }\r\n\r\n    private update_achievement_view(): void {\r\n        const tempData = gm.data.ladder_temp_data;\r\n        this.achievement_star_lbl.string = `Số sao tích lũy：${gm.data.ladder_data.total_star}`;\r\n        this.ladder_achievement_list.setData(tempData.ladder_achievement_data_array);\r\n    }\r\n}"]}